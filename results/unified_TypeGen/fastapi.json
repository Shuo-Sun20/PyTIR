{
    "fastapi._compat": {
        "global": {
            "_annotation_is_sequence": {
                "annotation": [],
                "return": [
                    "bool"
                ]
            },
            "_annotation_is_complex": {
                "return": [
                    "bool"
                ],
                "annotation": [
                    "type",
                    "Any",
                    "typing.Any"
                ]
            },
            "_model_dump": {
                "kwargs": [
                    "typing.Any",
                    "dict[str, typing.Any]",
                    "typing.Dict[str, typing.Any]",
                    "kwargs",
                    "include",
                    "Any"
                ],
                "model": [],
                "mode": [],
                "return": [
                    "typing.Any",
                    "dict[str, typing.Any]",
                    "Any",
                    "typing.Dict[str, typing.Any]",
                    "dict[str, Any]"
                ]
            },
            "_get_model_config": {
                "return": [],
                "model": []
            },
            "_model_rebuild": {
                "return": [
                    "None"
                ],
                "model": [
                    "Type[BaseModel]",
                    "model",
                    "BaseModel",
                    "Type[models.Model]",
                    "Type[django.db.models.Model]",
                    "models.Model",
                    "models",
                    "Type[Model]",
                    "Model"
                ]
            },
            "_normalize_errors": {
                "return": [
                    "Sequence[Any]",
                    "List[Dict[str, Any]]"
                ],
                "errors": []
            },
            "_regenerate_error_with_loc": {
                "errors": [],
                "return": [
                    "list[dict]",
                    "list[dict[str, typing.Any]]"
                ],
                "loc_prefix": [
                    "str",
                    "tuple",
                    "typing.Any"
                ]
            },
            "create_body_model": {
                "return": [
                    "Type[BaseModel]",
                    "BaseModel"
                ],
                "model_name": [],
                "fields": []
            },
            "field_annotation_is_complex": {
                "annotation": [
                    "typing.Type",
                    "typing.Any"
                ],
                "return": []
            },
            "copy_field_info": {
                "field_info": [
                    "FieldInfo",
                    "pydantic.fields",
                    "ModelField"
                ],
                "return": [],
                "annotation": []
            },
            "field_annotation_is_scalar": {
                "return": [],
                "annotation": [
                    "Any"
                ]
            },
            "field_annotation_is_scalar_sequence": {
                "annotation": [
                    "typing.Type",
                    "type"
                ],
                "return": []
            },
            "field_annotation_is_sequence": {
                "annotation": [
                    "typing.Type",
                    "typing.Any"
                ],
                "return": [
                    "bool"
                ]
            },
            "get_cached_model_fields": {
                "return": [
                    "typing.Any",
                    "list",
                    "list[typing.Any]",
                    "list[str]"
                ],
                "model": [
                    "Model"
                ]
            },
            "get_compat_model_name_map": {
                "return": [
                    "ModelNameMap",
                    "Dict[Union[Type[BaseModel], Type[Enum]], str]",
                    "Dict[typing.Any, str]",
                    "fastapi.types"
                ],
                "fields": [
                    "List[ModelField]",
                    "ModelField",
                    "fields",
                    "Sequence[ModelField]",
                    "typing.Sequence[ModelField]",
                    "field"
                ]
            },
            "get_annotation_from_field_info": {
                "field_name": [],
                "field_info": [
                    "FieldInfo",
                    "pydantic.fields",
                    "True",
                    "ModelField"
                ],
                "return": [
                    "typing.Any",
                    "Any",
                    "annotation"
                ],
                "annotation": []
            },
            "get_definitions": {
                "model_name_map": [
                    "ModelNameMap"
                ],
                "return": [
                    "Dict[str, Any]",
                    "JsonSchemaValue",
                    "definitions"
                ],
                "separate_input_output_schemas": [
                    "bool"
                ],
                "fields": [
                    "Sequence[ModelField]",
                    "Type[BaseModel]",
                    "ModelField",
                    "fields",
                    "List[ModelField]",
                    "typing.Sequence[ModelField]",
                    "model",
                    "FieldInfo",
                    "field",
                    "errors"
                ],
                "schema_generator": []
            },
            "get_missing_field_error": {
                "return": [
                    "dict[str, typing.Any]",
                    "Dict[str, typing.Any]",
                    "ValidationError",
                    "Dict[str, Any]",
                    "error"
                ],
                "loc": [
                    "loc",
                    "...",
                    "ModelField",
                    "ModelField.validate"
                ]
            },
            "get_model_definitions": {
                "model_name_map": [
                    "ModelNameMap",
                    "fastapi.types"
                ],
                "return": [
                    "definitions",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "Dict[str, typing.Any]"
                ],
                "flat_models": []
            },
            "get_model_fields": {
                "return": [
                    "ModelField",
                    "List[ModelField]",
                    "else"
                ],
                "model": []
            },
            "get_schema_from_model_field": {
                "return": [
                    "Dict[str, Any]"
                ],
                "field_mapping": [
                    "JsonSchemaValue",
                    "ModelField",
                    "Dict[str, Any]",
                    "Literal"
                ],
                "separate_input_output_schemas": [
                    "bool"
                ],
                "field": [
                    "ModelField",
                    "field",
                    "FieldInfo",
                    "shape",
                    "pydantic.fields",
                    "field.shape",
                    "mode"
                ],
                "schema_generator": [],
                "model_name_map": [
                    "ModelNameMap",
                    "fastapi.types"
                ]
            },
            "global": {
                "RequiredParam": [
                    "ellipsis",
                    "Any",
                    "Union[PydanticUndefined, Ellipsis]",
                    "Ellipsis",
                    "PydanticUndefined"
                ],
                "Url": []
            },
            "is_bytes_or_nonable_bytes_annotation": {
                "annotation": [],
                "return": [
                    "bool"
                ]
            },
            "is_bytes_sequence_annotation": {
                "annotation": [
                    "typing.Type",
                    "type",
                    "typing.Type[typing.Any]",
                    "typing.Any"
                ],
                "return": []
            },
            "is_bytes_field": {
                "return": [
                    "bool",
                    "bytes"
                ],
                "field": [
                    "ModelField",
                    "field",
                    "field.shape",
                    "shape"
                ]
            },
            "is_pv1_scalar_field": {
                "field": [
                    "ModelField",
                    "field",
                    "field.shape",
                    "mode"
                ],
                "return": [
                    "bool"
                ]
            },
            "is_pv1_scalar_sequence_field": {
                "field": [],
                "return": [
                    "bool"
                ]
            },
            "is_scalar_field": {
                "field": [
                    "ModelField",
                    "field",
                    "field.shape",
                    "serialize",
                    "shape"
                ],
                "return": [
                    "bool",
                    "False",
                    "True"
                ]
            },
            "is_bytes_sequence_field": {
                "return": [],
                "field": [
                    "ModelField",
                    "field",
                    "serialize",
                    "field.shape"
                ]
            },
            "is_scalar_sequence_field": {
                "return": [
                    "bool",
                    "False"
                ],
                "field": []
            },
            "is_uploadfile_or_nonable_uploadfile_annotation": {
                "return": [],
                "annotation": [
                    "typing.Type",
                    "typing.Any",
                    "typing.Type[typing.Any]"
                ]
            },
            "is_sequence_field": {
                "field": [
                    "ModelField",
                    "field",
                    "pydantic.fields",
                    "field.shape",
                    "serialize",
                    "mode"
                ],
                "return": []
            },
            "is_uploadfile_sequence_annotation": {
                "annotation": [
                    "typing.Type",
                    "type",
                    "typing.Any",
                    "typing.Type[typing.Any]"
                ],
                "return": []
            },
            "serialize_sequence_value": {
                "field": [],
                "return": [],
                "value": [
                    "ModelField",
                    "typing.Any",
                    "Any",
                    "value",
                    "serialize"
                ]
            },
            "value_is_sequence": {
                "value": [
                    "bytes",
                    "Any"
                ],
                "return": [
                    "bool"
                ]
            },
            "with_info_plain_validator_function": {
                "function": [
                    "typing.Callable[..., typing.Any]",
                    "Callable[..., Any]",
                    "Any",
                    "function",
                    "Callable[..., typing.Any]",
                    "..."
                ],
                "metadata": [],
                "ref": [
                    "typing.Union[str, None]",
                    "ref",
                    "Union[str, None]",
                    "Optional[str]",
                    "None"
                ],
                "serialization": [
                    "typing.Any",
                    "Any",
                    "serialization"
                ],
                "return": [
                    "dict[typing.Any, typing.Any]",
                    "Any",
                    "typing.Any",
                    "if",
                    "else",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ModelField": {
            "__post_init__": {
                "return": [
                    "None",
                    "ModelField"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "get_default": {
                "return": []
            },
            "global": {
                "mode": [],
                "field_info": [
                    "FieldInfo",
                    "ModelField",
                    "pydantic.fields"
                ],
                "name": []
            },
            "serialize": {
                "exclude": [
                    "Union[IncEx, None]",
                    "exclude",
                    "IncEx",
                    "Dict"
                ],
                "exclude_defaults": [],
                "by_alias": [],
                "exclude_none": [],
                "exclude_unset": [
                    "bool",
                    "False",
                    "ModelField"
                ],
                "mode": [],
                "value": [
                    "ModelField",
                    "typing.Any",
                    "serialize",
                    "value",
                    "Any"
                ],
                "include": [],
                "return": [
                    "ModelField",
                    "typing.Any"
                ]
            },
            "validate": {
                "values": [
                    "ModelField",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "Any",
                    "values"
                ],
                "value": [],
                "loc": [
                    "loc",
                    "...",
                    "ModelField",
                    "int"
                ],
                "return": []
            }
        },
        "GenerateJsonSchema": {
            "global": {
                "ref_template": [
                    "str",
                    "typing.Any"
                ]
            }
        }
    },
    "fastapi.applications": {
        "FastAPI": {
            "__call__": {
                "receive": [],
                "send": [
                    "Send"
                ],
                "return": [
                    "None",
                    "Awaitable[None]",
                    "Coroutine[Any, Any, None]",
                    "Coroutine[None, None, None]",
                    "Coroutine[None]",
                    "typing.Coroutine",
                    "Awaitable",
                    "send"
                ],
                "scope": []
            },
            "__init__": {
                "callbacks": [],
                "debug": [],
                "deprecated": [
                    "bool"
                ],
                "default_response_class": [],
                "contact": [],
                "dependencies": [],
                "description": [],
                "docs_url": [
                    "str"
                ],
                "exception_handlers": [],
                "include_in_schema": [],
                "generate_unique_id_function": [
                    "typing.Callable",
                    "Default"
                ],
                "lifespan": [],
                "on_shutdown": [
                    "typing.Optional[typing.Sequence[typing.Callable]]"
                ],
                "middleware": [
                    "typing.Optional[typing.Sequence]",
                    "typing.Optional[typing.Iterable]",
                    "typing.Optional[typing.Sequence[typing.Any]]",
                    "typing.Optional[typing.Sequence[typing.Callable]]",
                    "typing.Optional[list]"
                ],
                "openapi_prefix": [
                    "str"
                ],
                "on_startup": [],
                "openapi_url": [
                    "str"
                ],
                "redirect_slashes": [],
                "redoc_url": [],
                "responses": [],
                "root_path": [],
                "root_path_in_servers": [],
                "servers": [
                    "typing.Optional[list]",
                    "self.servers",
                    "typing.Optional[list[dict]]",
                    "typing.Optional[list[str]]",
                    "servers",
                    "description"
                ],
                "self": [],
                "separate_input_output_schemas": [],
                "swagger_ui_init_oauth": [],
                "summary": [],
                "swagger_ui_oauth2_redirect_url": [],
                "return": [],
                "terms_of_service": [
                    "typing.Optional[str]"
                ],
                "swagger_ui_parameters": [],
                "webhooks": [],
                "title": [
                    "str"
                ],
                "version": [
                    "str"
                ],
                "license_info": [],
                "routes": [],
                "openapi_tags": [
                    "description",
                    "None"
                ],
                "extra": [
                    "typing.Dict[str, typing.Any]",
                    "typing",
                    "dict[str, object]",
                    "dict[str, Any]",
                    "dict"
                ]
            },
            "add_api_route": {
                "return": [
                    "None"
                ],
                "dependencies": [
                    "Optional[List[fastapi.Depends]]",
                    "Optional[List[Depends]]"
                ],
                "endpoint": [
                    "typing.Callable"
                ],
                "deprecated": [],
                "generate_unique_id_function": [],
                "include_in_schema": [],
                "methods": [
                    "Optional[List[str]]"
                ],
                "operation_id": [
                    "Optional[str]"
                ],
                "name": [
                    "Optional[str]",
                    "str"
                ],
                "openapi_extra": [
                    "Optional[Dict[str, Any]]",
                    "typing.Optional[typing.Dict[str, typing.Any]]",
                    "typing.Optional[dict]",
                    "typing.Optional[typing.Any]",
                    "typing.Any"
                ],
                "response_description": [],
                "description": [],
                "response_model": [],
                "path": [],
                "response_model_by_alias": [],
                "response_class": [],
                "response_model_exclude_defaults": [],
                "response_model_exclude": [],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "tags": [],
                "response_model_exclude_none": [],
                "response_model_include": [
                    "typing.Optional[typing.Union[typing.Set[typing.Union[str, typing.Pattern]], typing.List[typing.Union[str, typing.Pattern]]]]",
                    "typing.Optional[typing.Union[set, frozenset]]",
                    "typing.Optional[typing.Union[typing.Set[typing.Union[str,typing.Pattern]],typing.List[typing.Union[str,typing.Pattern]]]]",
                    "Optional[typing.Any]",
                    "typing.Optional[typing.Union[typing.Set[typing.Union[str, typing.Pattern]], typing.Mapping[typing.Union[str, typing.Pattern], typing.Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "typing.Optional[typing.Any]"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], Dict[Union[int, str], Dict[str, Any]]]]",
                    "Optional[Union[int, Dict[Union[int, str], Dict[str, Any]]]]",
                    "typing.Optional[typing.Dict[typing.Union[int, str], typing.Any]]",
                    "typing.Optional[typing.Dict[str, typing.Any]]"
                ],
                "summary": [
                    "Optional[str]",
                    "str"
                ],
                "status_code": [
                    "Optional[int]"
                ]
            },
            "add_api_websocket_route": {
                "dependencies": [],
                "name": [],
                "endpoint": [
                    "typing.Callable",
                    "typing.Any",
                    "endpoint"
                ],
                "path": [],
                "return": [
                    "None"
                ]
            },
            "api_route": {
                "return": [
                    "function"
                ],
                "generate_unique_id_function": [],
                "dependencies": [
                    "typing.Optional[typing.List[typing.Any]]",
                    "Optional[List[Any]]",
                    "Optional[List[Depends]]",
                    "typing.Optional[typing.Sequence[typing.Any]]",
                    "Depends",
                    "List[Depends]",
                    "dependencies",
                    "Optional[Any]"
                ],
                "description": [
                    "str",
                    "Optional[str]"
                ],
                "deprecated": [],
                "response_class": [
                    "Default[Type[JSONResponse]]"
                ],
                "response_description": [
                    "str"
                ],
                "methods": [],
                "openapi_extra": [],
                "path": [
                    "str"
                ],
                "response_model": [
                    "Default",
                    "Optional[Any]",
                    "Optional[Type[Any]]",
                    "Default[None]",
                    "Optional[Type[BaseModel]]",
                    "None"
                ],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude_defaults": [],
                "response_model_exclude_none": [
                    "bool"
                ],
                "operation_id": [
                    "str"
                ],
                "name": [],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "response_model_exclude": [
                    "Optional[Any]",
                    "Optional[Union[Set, List]]",
                    "Optional[Set[str]]",
                    "Optional[Union[Set, List, Dict]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[List[str]]",
                    "Optional[Union[List, Set, FrozenSet]]",
                    "Optional[Dict[str, Any]]",
                    "Optional[Union[Set[str], Dict[str, Any]]]",
                    "Optional[Union[List, Set, Dict]]",
                    "Optional[Union[Set[str], List[str], Dict[str, Any]]]",
                    "Optional[Union[List, Set]]"
                ],
                "responses": [
                    "Dict",
                    "Optional[Dict]",
                    "responses"
                ],
                "summary": [],
                "tags": [
                    "Optional[List[str]]",
                    "List[str]",
                    "List",
                    "Optional"
                ],
                "response_model_include": [
                    "Optional[Union[Set, List]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[List[str]]",
                    "Optional[Any]",
                    "Optional[Union[List[str], Set[str]]]",
                    "Optional[Set[str]]",
                    "Optional[Union[Set, List, Dict]]",
                    "List",
                    "Optional[Dict]"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "status_code": [
                    "Optional[int]"
                ]
            },
            "delete": {
                "dependencies": [],
                "deprecated": [
                    "Optional[bool]",
                    "bool"
                ],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "description": [],
                "return": [],
                "include_in_schema": [],
                "name": [
                    "str",
                    "Optional[str]"
                ],
                "openapi_extra": [
                    "Optional[Dict[str, Any]]",
                    "Optional[Dict]",
                    "None"
                ],
                "response_description": [
                    "str"
                ],
                "path": [
                    "str"
                ],
                "response_class": [],
                "response_model_by_alias": [
                    "bool"
                ],
                "operation_id": [],
                "response_model_exclude_none": [],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "Optional[Dict]",
                    "dict",
                    "None"
                ],
                "status_code": [
                    "Optional[int]"
                ],
                "summary": [
                    "Optional[str]",
                    "str",
                    "Any"
                ],
                "tags": [
                    "Optional[List[str]]",
                    "tags"
                ],
                "response_model_exclude": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Set[str]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], str, int]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], Set[str], Set[int]]]",
                    "Optional[Union[Set[Union[str, int]], Set[str]]]",
                    "Optional[Union[str, List[str]]]",
                    "delete"
                ],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "callbacks": [
                    "Optional[List[Any]]",
                    "Optional[List[BaseRoute]]",
                    "Optional[List[Callable]]",
                    "callbacks"
                ],
                "response_model_include": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[str, List[str]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[SetUnion[str], AbstractSet[str]]]",
                    "Optional[Union[SetUnion[str], Set[str]]]",
                    "Optional[Union[SetUnion[str]]]",
                    "Optional[Union[SetUnion[str, int], AbstractSet[Union[str, int]]]]"
                ],
                "response_model": [
                    "Default",
                    "Optional[Type[Any]]",
                    "typing.Optional[typing.Any]"
                ]
            },
            "exception_handler": {
                "exc_class_or_status_code": [],
                "return": [
                    "decorator",
                    "typing.Callable[[typing.Callable], typing.Callable]",
                    "typing.Callable",
                    "func"
                ]
            },
            "get": {
                "callbacks": [
                    "Optional[List[Any]]",
                    "Optional[List[Callable]]",
                    "Optional[List[BaseRoute]]",
                    "Optional[List[Dict[str, Any]]]"
                ],
                "deprecated": [
                    "Optional[bool]",
                    "bool"
                ],
                "description": [
                    "Optional[str]",
                    "str"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "name": [
                    "Optional[str]",
                    "str",
                    "None",
                    "Any"
                ],
                "return": [],
                "path": [
                    "str"
                ],
                "response_class": [],
                "response_description": [
                    "str"
                ],
                "operation_id": [
                    "Optional[str]",
                    "str"
                ],
                "response_model": [],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "response_model_exclude_unset": [],
                "response_model_exclude_none": [
                    "bool"
                ],
                "response_model_include": [],
                "status_code": [],
                "responses": [],
                "dependencies": [
                    "Optional[List[Depends]]",
                    "None"
                ],
                "openapi_extra": [
                    "Optional[Dict]",
                    "Optional[Dict[str, Any]]",
                    "None"
                ],
                "tags": [
                    "Optional[List[str]]",
                    "None"
                ],
                "summary": [],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "response_model_exclude": [
                    "Optional[Set[str]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[str, List[str]]]",
                    "Optional[Union[Set[str], Dict[str, Any]]]",
                    "Optional[Union[SetUnion[str], Set[str]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Any, Any]]]",
                    "Optional[Union[Set[Union[str, int]], Set[str]]]"
                ]
            },
            "head": {
                "callbacks": [],
                "dependencies": [],
                "include_in_schema": [
                    "bool"
                ],
                "return": [
                    "fastapi.responses.JSONResponse"
                ],
                "description": [
                    "Optional[str]",
                    "str"
                ],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "name": [],
                "path": [],
                "operation_id": [
                    "Optional[str]",
                    "str"
                ],
                "response_class": [
                    "Default[Type[JSONResponse]]",
                    "Default[Type[Response]]",
                    "Default[JSONResponse]"
                ],
                "response_model": [
                    "Optional[Type[Any]]",
                    "Default",
                    "Union[Type[Any], Default[None]]",
                    "typing.Optional[typing.Any]"
                ],
                "response_description": [],
                "openapi_extra": [],
                "response_model_exclude_unset": [],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude": [],
                "response_model_include": [],
                "response_model_exclude_none": [
                    "bool"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]"
                ],
                "summary": [
                    "Optional[str]",
                    "str"
                ],
                "deprecated": [],
                "status_code": [
                    "Optional[int]"
                ],
                "tags": [
                    "Optional[List[str]]"
                ],
                "response_model_exclude_defaults": []
            },
            "include_router": {
                "callbacks": [
                    "typing.Optional[typing.List[typing.Callable]]"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "generate_unique_id_function": [
                    "typing.Callable",
                    "typing.Callable[..., str]",
                    "typing.Union[typing.Callable, Default[typing.Callable]]"
                ],
                "responses": [],
                "default_response_class": [
                    "Default",
                    "typing.Type[Response]",
                    "Default[JSONResponse]",
                    "typing.Union[typing.Type[Response], Default]",
                    "typing.Optional[Default[JSONResponse]]",
                    "typing.Any",
                    "JSONResponse",
                    "typing.Union[typing.Type[Response], Default[typing.Type[Response]]]",
                    "typing.Optional[typing.Type[Default[JSONResponse]]]",
                    "typing.Type[fastapi.responses.JSONResponse]"
                ],
                "tags": [
                    "typing.Optional[list[str]]",
                    ", it is reasonable to assume that the type of the argument tags is typing.Optional[list[str]]. Therefore, the type of the argument tags is "
                ],
                "dependencies": [
                    "typing.Optional[typing.List[typing.Any]]",
                    "dependencies"
                ],
                "deprecated": [
                    "typing.Optional[bool]"
                ],
                "router": [],
                "return": [
                    "None"
                ],
                "prefix": [
                    "str"
                ]
            },
            "middleware": {
                "return": [
                    "function",
                    "typing.Callable[[typing.Callable], typing.Callable]",
                    "typing.Callable[[typing.Callable], typing.Any]",
                    "typing.Callable",
                    "func"
                ],
                "middleware_type": [
                    "str"
                ]
            },
            "on_event": {
                "event_type": [
                    "str",
                    "router"
                ],
                "return": [
                    "router",
                    "Any",
                    "None"
                ]
            },
            "options": {
                "dependencies": [],
                "description": [
                    "str",
                    "Optional[str]"
                ],
                "deprecated": [],
                "callbacks": [
                    "Optional[List[Callable]]",
                    "Optional[List[Any]]",
                    "Optional[List[fastapi.routing.APIRoute]]",
                    "Optional[List[BaseRoute]]",
                    "callbacks"
                ],
                "generate_unique_id_function": [],
                "name": [
                    "Optional[str]",
                    "str"
                ],
                "include_in_schema": [],
                "path": [
                    "str"
                ],
                "response_description": [
                    "str"
                ],
                "operation_id": [],
                "return": [],
                "response_class": [
                    "Default[Type[JSONResponse]]",
                    "Default[Type[Response]]",
                    "Default[JSONResponse]"
                ],
                "openapi_extra": [
                    "Optional[Dict]",
                    "Optional[Dict[str, Any]]",
                    "Any",
                    "None",
                    "options"
                ],
                "response_model": [
                    "Optional[Type[Any]]",
                    "Default"
                ],
                "response_model_exclude_none": [],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude_defaults": [],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "response_model_exclude": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Set[str]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], str, int]]",
                    "Optional[Union[Set[Union[str, int]], AbstractSet[Union[str, int]]]]",
                    "Optional[Union[SetUnion[str], Set[str]]]",
                    "Optional[Union[Set[Union[str, int]], Set[str]]]",
                    "Optional[Union[SetUnion[str], AbstractSet[str]]]",
                    "Optional[Union[str, List[str]]]",
                    "Optional[Union[Union[str, int], Set[Union[str, int]]]]"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "Optional[Union[int, str, Dict[Union[int, str], Dict[str, Any]]]]"
                ],
                "summary": [],
                "status_code": [
                    "Optional[int]"
                ],
                "response_model_include": [],
                "tags": [
                    "Optional[List[str]]",
                    "tags"
                ]
            },
            "openapi": {
                "return": [
                    "typing.Any",
                    "dict[str, typing.Any]",
                    "dict"
                ]
            },
            "patch": {
                "deprecated": [
                    "Optional[bool]",
                    "bool",
                    "None"
                ],
                "description": [],
                "name": [
                    "Optional[str]"
                ],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "openapi_extra": [],
                "dependencies": [],
                "path": [
                    "str"
                ],
                "response_model": [
                    "Optional[Type[Any]]",
                    "Default"
                ],
                "response_description": [],
                "response_class": [],
                "return": [
                    "JSONResponse",
                    "Callable"
                ],
                "response_model_by_alias": [],
                "response_model_exclude_defaults": [],
                "status_code": [],
                "response_model_exclude_unset": [],
                "callbacks": [
                    "Optional[List[Callable]]",
                    "Optional[List[fastapi.routing.APIRoute]]",
                    "Optional[List[Any]]",
                    "callbacks"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], List[Dict[str, Any]]]]",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], List[Any]]]",
                    "Dict"
                ],
                "response_model_include": [
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set, List]]",
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Any, Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], str, int]]",
                    "Optional[Union[str, List[str]]]",
                    "Optional[Any]"
                ],
                "response_model_exclude_none": [
                    "bool"
                ],
                "summary": [],
                "tags": [
                    "Optional[List[str]]",
                    "None"
                ],
                "operation_id": [
                    "Optional[str]",
                    "str",
                    "None"
                ],
                "response_model_exclude": []
            },
            "post": {
                "dependencies": [
                    "Optional[List[Depends]]",
                    "Depends",
                    "None"
                ],
                "generate_unique_id_function": [],
                "callbacks": [],
                "name": [
                    "None",
                    "Optional[str]",
                    "str"
                ],
                "openapi_extra": [
                    "Optional[Dict]",
                    "Optional[Dict[str, Any]]",
                    "None"
                ],
                "operation_id": [],
                "response_description": [],
                "return": [],
                "deprecated": [],
                "include_in_schema": [],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model": [],
                "response_model_exclude_none": [
                    "bool"
                ],
                "response_model_exclude": [],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "responses": [],
                "tags": [
                    "Optional[List[str]]",
                    "None"
                ],
                "response_model_include": [],
                "description": [
                    "Optional[str]",
                    "str",
                    "None"
                ],
                "response_model_exclude_unset": [],
                "path": [],
                "status_code": [],
                "summary": [
                    "Optional[str]",
                    "str"
                ],
                "response_class": []
            },
            "put": {
                "callbacks": [
                    "Optional[List[fastapi.routing.APIRoute]]",
                    "Optional[List[Callable]]",
                    "Optional[List[Any]]",
                    "Optional[List[BaseRoute]]"
                ],
                "dependencies": [
                    "Optional[List[Depends]]"
                ],
                "deprecated": [
                    "bool",
                    "Optional[bool]",
                    "None"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "name": [],
                "path": [
                    "str"
                ],
                "openapi_extra": [],
                "response_model": [],
                "response_description": [
                    "str"
                ],
                "operation_id": [],
                "generate_unique_id_function": [],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude_none": [
                    "bool"
                ],
                "response_model_exclude_defaults": [],
                "response_model_exclude": [],
                "description": [],
                "responses": [],
                "return": [],
                "response_model_include": [
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[Set, List]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[SetUnion[str]]]",
                    "Optional[Union[Any]]",
                    "Optional[Union[Set, List, Dict]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], str, int]]"
                ],
                "response_model_exclude_unset": [],
                "tags": [
                    "Optional[List[str]]"
                ],
                "status_code": [],
                "summary": [
                    "Optional[str]",
                    "str",
                    "Any"
                ],
                "response_class": [
                    "Default[Type[JSONResponse]]"
                ]
            },
            "trace": {
                "dependencies": [
                    "Optional[List[Depends]]",
                    "Optional[Sequence[Depends]]",
                    "None",
                    "dependencies"
                ],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "description": [
                    "Optional[str]"
                ],
                "deprecated": [],
                "name": [],
                "openapi_extra": [],
                "response_class": [],
                "response_description": [],
                "path": [
                    "str"
                ],
                "response_model": [
                    "Optional[Type[Any]]",
                    "Default",
                    "Optional[Any]",
                    "Default[Optional[Any]]"
                ],
                "response_model_exclude": [],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "response_model_exclude_defaults": [],
                "operation_id": [],
                "status_code": [],
                "response_model_include": [
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[Set[str], Dict[str, Any]]]",
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[Set, List]]",
                    "Optional[Union[Set, List, Dict]",
                    "Any",
                    "Optional[Union[Set, List, Dict]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]"
                ],
                "tags": [
                    "Optional[List[str]]",
                    "tags",
                    "Optional"
                ],
                "response_model_by_alias": [
                    "bool"
                ],
                "return": [],
                "response_model_exclude_none": [
                    "bool"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "Optional[Union[int, str, Dict[Union[int, str], Dict[str, Any]]]]",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], List[Dict[str, Any]]]]",
                    "Optional[Union[int, Dict[Union[int, str], Dict[str, Any]]]]",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], List[Any]]]"
                ],
                "summary": [
                    "Optional[str]",
                    "str"
                ],
                "callbacks": [
                    "Optional[List[Callable]]",
                    "Optional[List[BaseRoute]]",
                    "Optional[List[fastapi.routing.APIRoute]]",
                    "callbacks"
                ]
            },
            "setup": {
                "return": [
                    "None"
                ]
            },
            "websocket": {
                "path": [
                    "str"
                ],
                "return": [
                    "typing.Callable[..., typing.Any]",
                    "typing.Callable"
                ],
                "name": [
                    "typing.Optional[str]"
                ],
                "dependencies": []
            },
            "websocket_route": {
                "name": [
                    "typing.Optional[str]"
                ],
                "return": [],
                "path": [
                    "str"
                ]
            }
        }
    },
    "fastapi.background": {
        "BackgroundTasks": {
            "add_task": {
                "kwargs": [
                    "dict"
                ],
                "args": [
                    "tuple",
                    "typing.Tuple[Any, ...]",
                    "Tuple[Any, ...]"
                ],
                "return": [],
                "func": []
            }
        }
    },
    "fastapi.concurrency": {
        "global": {
            "contextmanager_in_threadpool": {
                "cm": [
                    "contextmanager",
                    "contextlib.AbstractContextManager",
                    "ContextManager",
                    "cm",
                    "object"
                ],
                "return": []
            }
        }
    },
    "fastapi.cli": {
        "global": {
            "main": {
                "return": []
            }
        }
    },
    "fastapi.datastructures": {
        "global": {
            "Default": {
                "return": [
                    "DefaultPlaceholder"
                ],
                "value": []
            }
        },
        "DefaultPlaceholder": {
            "__bool__": {
                "return": []
            },
            "__eq__": {
                "return": [
                    "bool"
                ],
                "o": []
            },
            "__init__": {
                "value": []
            }
        },
        "UploadFile": {
            "__get_pydantic_core_schema__": {
                "source": [],
                "return": [
                    "Type",
                    "typing.Any",
                    "Dict",
                    "Any"
                ],
                "handler": [
                    "typing.Callable"
                ]
            },
            "__get_validators__": {
                "cls": [],
                "return": []
            },
            "__get_pydantic_json_schema__": {
                "handler": [],
                "return": [
                    "dict[str, str]"
                ],
                "core_schema": [
                    "dict",
                    "pydantic.BaseModel",
                    "CoreSchema",
                    "pydantic.schema.ModelSchema",
                    "Dict",
                    "pydantic.Schema",
                    "Dict[str, Any]",
                    "pydantic.schema.CoreSchema",
                    "Schema"
                ]
            },
            "__modify_schema__": {
                "field_schema": [
                    "dict"
                ],
                "return": [
                    "None"
                ]
            },
            "global": {
                "file": [],
                "headers": [
                    "Headers",
                    "starlette.datastructures"
                ],
                "content_type": [
                    "Optional[str]",
                    "Annotated"
                ],
                "size": [],
                "filename": [
                    "Optional[str]"
                ]
            },
            "_validate": {
                "_": [
                    "Any",
                    "typing.Any"
                ],
                "__input_value": [
                    "StarletteUploadFile",
                    "typing.Union[StarletteUploadFile, UploadFile]",
                    "typing.Any",
                    "typing.Union[StarletteUploadFile, typing.Any]"
                ],
                "return": [
                    "UploadFile"
                ]
            },
            "seek": {
                "offset": [
                    "int"
                ],
                "return": [
                    "typing.Awaitable[typing.Any]",
                    "typing.Any",
                    "None",
                    "typing.Awaitable[None]"
                ]
            },
            "read": {
                "return": [
                    "bytes",
                    "typing.Union[bytes, str]",
                    "typing.Awaitable[bytes]",
                    "typing.Any",
                    "str",
                    "typing.Union[bytes, None]",
                    "typing.Awaitable[typing.Union[bytes, str]]"
                ],
                "size": []
            },
            "validate": {
                "v": [],
                "return": [
                    "Any"
                ],
                "cls": []
            },
            "write": {
                "data": [
                    "bytes",
                    "str",
                    "Any"
                ],
                "return": [
                    "Awaitable[Any]",
                    "None",
                    "Awaitable[None]",
                    "int",
                    "Any",
                    "Coroutine[Any, Any, Any]",
                    "write",
                    "await",
                    "Coroutine",
                    "Awaitable"
                ]
            },
            "close": {
                "return": []
            }
        }
    },
    "fastapi.dependencies.models": {
        "Dependant": {
            "__post_init__": {
                "return": [
                    "None"
                ]
            },
            "global": {
                "background_tasks_param_name": [
                    "typing.Optional[str]"
                ],
                "cache_key": [],
                "header_params": [],
                "path": [
                    "typing.Optional[str]"
                ],
                "path_params": [
                    "List[ModelField]"
                ],
                "name": [
                    "typing.Optional[str]"
                ],
                "dependencies": [
                    "List[Dependant]",
                    "Dependant"
                ],
                "call": [],
                "response_param_name": [
                    "typing.Optional[str]",
                    "Optional[str]"
                ],
                "query_params": [
                    "List[ModelField]"
                ],
                "request_param_name": [
                    "typing.Optional[str]",
                    "Optional[str]"
                ],
                "security_scopes_param_name": [
                    "typing.Optional[str]"
                ],
                "security_scopes": [],
                "use_cache": [
                    "bool"
                ],
                "security_requirements": [
                    "List[SecurityRequirement]",
                    "SecurityRequirement"
                ],
                "websocket_param_name": [
                    "typing.Optional[str]"
                ],
                "cookie_params": [
                    "List[ModelField]"
                ],
                "body_params": [
                    "List[ModelField]"
                ],
                "http_connection_param_name": []
            }
        },
        "SecurityRequirement": {
            "global": {
                "scopes": [],
                "security_scheme": []
            }
        }
    },
    "fastapi.dependencies.utils": {
        "global": {
            "_extract_form_body": {
                "return": [
                    "typing.Any",
                    "typing.Dict[str, typing.Any]"
                ],
                "body_fields": [],
                "received_body": [
                    "dict",
                    "typing.MutableMapping",
                    "Mapping",
                    "MutableMapping"
                ]
            },
            "_get_flat_fields_from_params": {
                "fields": [],
                "return": []
            },
            "_get_multidict_value": {
                "return": [
                    "typing.Optional[typing.Any]",
                    "typing.Any",
                    "value",
                    "None"
                ],
                "alias": [
                    "typing.Optional[str]",
                    "values",
                    "alias"
                ],
                "values": [
                    "typing.Union[ImmutableMultiDict, Headers, typing.Dict[typing.Any, typing.Any]]",
                    "typing.Union[ImmutableMultiDict, Headers, dict]",
                    "typing.Union[ImmutableMultiDict, Headers, typing.Any]",
                    "typing.Union[ImmutableMultiDict, Headers]"
                ],
                "field": [
                    "pydantic.fields.ModelField",
                    "typing.Union[Field, params.Form]",
                    "pydantic.fields.Field",
                    "typing.Union[params.Form, typing.Any]",
                    "field",
                    "typing.Any",
                    "typing.Union[Field, SequenceField]"
                ]
            },
            "_should_embed_body_fields": {
                "fields": [],
                "return": [
                    "bool"
                ]
            },
            "_validate_value_with_model_field": {
                "field": [],
                "return": [
                    "tuple[typing.Any, list[typing.Any]]",
                    "field.default",
                    "None"
                ],
                "values": [],
                "loc": [
                    "typing.Any",
                    "str",
                    "int"
                ],
                "value": [
                    "typing.Any",
                    "typing.Optional[typing.Any]",
                    "validate"
                ]
            },
            "add_non_field_param_to_dependency": {
                "return": [
                    "typing.Optional[bool]"
                ],
                "dependant": [],
                "param_name": [],
                "type_annotation": [
                    "typing.Type"
                ]
            },
            "add_param_to_fields": {
                "return": [],
                "dependant": [],
                "field": []
            },
            "analyze_param": {
                "return": [
                    "ParamDetails"
                ],
                "param_name": [],
                "annotation": [
                    "typing.Any",
                    "typing.Union[type, inspect.Signature.empty]",
                    "typing.Type",
                    "typing.Union[inspect.Signature.empty, typing.Any]",
                    "inspect.Parameter.annotation"
                ],
                "is_path_param": [
                    "bool"
                ],
                "value": []
            },
            "ensure_multipart_is_installed": {
                "return": [
                    "None"
                ]
            },
            "get_body_field": {
                "name": [
                    "str"
                ],
                "embed_body_fields": [],
                "return": [
                    "typing.Optional[typing.Any]",
                    "typing.Any"
                ],
                "flat_dependant": []
            },
            "get_dependant": {
                "call": [
                    "Callable"
                ],
                "path": [],
                "use_cache": [],
                "return": [
                    "typing.Any"
                ],
                "security_scopes": [
                    "typing.Any",
                    "typing.Optional[typing.Any]"
                ],
                "name": [
                    "Optional[str]"
                ]
            },
            "get_flat_dependant": {
                "dependant": [
                    "Dependant",
                    "typing.Any",
                    "QluTask",
                    "dependant"
                ],
                "return": [
                    "Dependant",
                    "typing.Any",
                    "dependant"
                ],
                "visited": [],
                "skip_repeats": [
                    "bool"
                ]
            },
            "get_flat_params": {
                "dependant": [
                    "typing.Any",
                    "QluTask"
                ],
                "return": [
                    "typing.List[typing.Any]",
                    "typing.Any",
                    "List[typing.Any]",
                    "List[Param]",
                    "list[typing.Any]",
                    "List[Any]",
                    "typing.Dict[typing.Any, typing.Any]",
                    "list",
                    "typing.Union[list, dict]",
                    "Tuple[typing.Any, ...]"
                ]
            },
            "get_param_sub_dependant": {
                "path": [
                    "typing.Any",
                    "str"
                ],
                "security_scopes": [],
                "depends": [
                    "Dependant",
                    "dependency",
                    "typing.Any",
                    "depends",
                    "DependantConfig",
                    "WrapperConfig",
                    "Dependency"
                ],
                "return": [
                    "typing.Any"
                ],
                "param_name": [
                    "typing.Any"
                ]
            },
            "get_parameterless_sub_dependant": {
                "path": [
                    "typing.Any",
                    "str"
                ],
                "depends": [],
                "return": []
            },
            "get_sub_dependant": {
                "dependency": [],
                "depends": [],
                "name": [
                    "typing.Optional[str]",
                    "typing.Any"
                ],
                "return": [
                    "typing.Any",
                    "name"
                ],
                "security_scopes": [
                    "Optional[list[typing.Any]]"
                ],
                "path": []
            },
            "get_typed_return_annotation": {
                "return": [],
                "call": [
                    "typing.Callable"
                ]
            },
            "get_typed_annotation": {
                "annotation": [
                    "typing.Union[str, typing.Any]",
                    "typing.Union[str, ForwardRef]",
                    "typing.Any"
                ],
                "return": [],
                "globalns": [
                    "typing.Any",
                    "dict",
                    "typing.Dict[str, typing.Any]"
                ]
            },
            "get_typed_signature": {
                "return": [],
                "call": []
            },
            "is_coroutine_callable": {
                "call": [
                    "typing.Union[typing.Callable, typing.Type]",
                    "typing.Callable[..., typing.Any]",
                    "typing.Any",
                    "typing.Callable",
                    "typing.Union[typing.Callable, typing.Any]"
                ],
                "return": [
                    "bool"
                ]
            },
            "is_gen_callable": {
                "return": [],
                "call": [
                    "typing.Callable",
                    "typing.Any",
                    "typing.Union[types.FunctionType, types.MethodType, typing.Callable]"
                ]
            },
            "is_union_of_base_models": {
                "field_type": [
                    "typing.Type",
                    "typing.Type[typing.Any]"
                ],
                "return": []
            },
            "request_body_to_args": {
                "body_fields": [],
                "embed_body_fields": [
                    "bool"
                ],
                "received_body": [
                    "typing.Union[FormData, typing.Any]",
                    "typing.Union[FormData, bytes]",
                    "typing.Union[FormData, Any]",
                    "Union[FormData, Any]"
                ],
                "return": []
            },
            "is_async_gen_callable": {
                "call": [
                    "typing.Callable",
                    "typing.Any"
                ],
                "return": [
                    "bool"
                ]
            },
            "request_params_to_args": {
                "received_params": [
                    "typing.Union[typing.Dict[typing.Any, typing.Any], Headers]",
                    "typing.Union[dict, Headers]",
                    "typing.Union[typing.Mapping, Headers]",
                    "typing.Union[Headers, typing.Mapping[typing.Any, typing.Any]]",
                    "typing.Mapping[typing.Any, typing.Any]"
                ],
                "return": [],
                "fields": []
            },
            "solve_dependencies": {
                "async_exit_stack": [
                    "typing.AsyncExitStack",
                    "AsyncExitStack",
                    "typing.AsyncContextManager",
                    "typing.Any",
                    "contextlib.AsyncExitStack"
                ],
                "body": [],
                "background_tasks": [],
                "embed_body_fields": [],
                "dependant": [
                    "dependant",
                    "Dependant",
                    ".dependencies",
                    "dependencies",
                    "SecurityScopes"
                ],
                "dependency_cache": [],
                "request": [
                    "typing.Union[Request, WebSocket]",
                    "request",
                    "WebSocket",
                    "typing.Union[fastapi.Request, fastapi.WebSocket]"
                ],
                "response": [
                    "Optional[Response]",
                    "typing.Optional[Response]"
                ],
                "return": [
                    "SolvedDependency"
                ],
                "dependency_overrides_provider": [
                    "typing.Any"
                ]
            },
            "solve_generator": {
                "call": [
                    "typing.Callable",
                    "typing.Any",
                    "typing.Generator"
                ],
                "stack": [
                    "AsyncExitStack"
                ],
                "sub_values": [],
                "return": []
            }
        },
        "ParamDetails": {
            "global": {
                "depends": [
                    "Optional[params.Depends]",
                    "params.Depends",
                    "depends",
                    "fastapi.params"
                ],
                "field": [],
                "type_annotation": []
            }
        },
        "SolvedDependency": {
            "global": {
                "values": [
                    "dict[str, typing.Any]",
                    "Dict[str, typing.Any]",
                    "Dict[str, Any]"
                ],
                "response": [],
                "background_tasks": [
                    "Optional[StarletteBackgroundTasks]",
                    "Optional[Union[StarletteBackgroundTasks, BackgroundTasks]]",
                    "BackgroundTasks"
                ],
                "errors": [
                    "list[typing.Union[dict[str, typing.Any], ErrorWrapper]]",
                    "list[typing.Any]",
                    "list[dict[str, typing.Any]]",
                    "list[typing.Union[dict[str, typing.Any], typing.Any]]",
                    "list[typing.Union[ErrorWrapper, dict[str, typing.Any]]]",
                    "errors"
                ],
                "dependency_cache": []
            }
        }
    },
    "fastapi.encoders": {
        "global": {
            "decimal_encoder": {
                "dec_value": [
                    "decimal.Decimal"
                ],
                "return": []
            },
            "global": {
                "ENCODERS_BY_TYPE": []
            },
            "isoformat": {
                "o": [
                    "datetime.datetime",
                    "typing.Union[datetime.date, datetime.time, datetime.datetime]",
                    "datetime.time",
                    "typing.Union[datetime, date, time]",
                    "isoformat"
                ],
                "return": [
                    "str"
                ]
            },
            "jsonable_encoder": {
                "by_alias": [
                    "bool"
                ],
                "custom_encoder": [],
                "exclude_unset": [],
                "exclude_none": [
                    "bool"
                ],
                "sqlalchemy_safe": [
                    "bool"
                ],
                "return": [
                    "str",
                    "PurePath",
                    "int",
                    "float",
                    "deque",
                    "None",
                    "obj",
                    "UndefinedType"
                ],
                "include": [],
                "obj": [],
                "exclude": [],
                "exclude_defaults": []
            },
            "generate_encoders_by_class_tuples": {
                "type_encoder_map": [],
                "return": []
            }
        }
    },
    "fastapi.exception_handlers": {
        "global": {
            "http_exception_handler": {
                "request": [
                    "Request"
                ],
                "exc": [
                    "headers",
                    "HTTPException",
                    "detail",
                    "typing.Any",
                    "exc"
                ],
                "return": [
                    "typing.Union[Response, JSONResponse]",
                    "Response",
                    "Union[Response, JSONResponse]",
                    "JSONResponse"
                ]
            },
            "request_validation_exception_handler": {
                "exc": [],
                "request": [],
                "return": []
            },
            "websocket_request_validation_exception_handler": {
                "exc": [
                    "ValidationError",
                    "Exception"
                ],
                "return": [],
                "websocket": []
            }
        }
    },
    "fastapi.exceptions": {
        "HTTPException": {
            "__init__": {
                "detail": [
                    "typing.Optional[str]"
                ],
                "return": [
                    "None",
                    "self",
                    "typing.Optional[str]"
                ],
                "status_code": [],
                "headers": [
                    "typing.Optional[typing.Dict[str, str]]",
                    "typing.Optional[typing.Any]",
                    "typing.Optional[typing.Mapping[str, str]]",
                    "typing.Any"
                ]
            }
        },
        "RequestValidationError": {
            "__init__": {
                "return": [
                    "None"
                ],
                "body": [],
                "errors": []
            }
        },
        "ResponseValidationError": {
            "__init__": {
                "body": [
                    "typing.Optional[typing.Any]"
                ],
                "errors": [
                    "typing.Any",
                    "Any",
                    "typing.Dict[str, str]",
                    "typing.Union[str, typing.List[str]]",
                    "Dict"
                ],
                "return": [
                    "None",
                    "self"
                ]
            },
            "__str__": {
                "return": []
            }
        },
        "WebSocketException": {
            "__init__": {
                "code": [
                    "int"
                ],
                "reason": [
                    "typing.Optional[str]"
                ],
                "return": []
            }
        },
        "ValidationException": {
            "__init__": {
                "errors": [
                    "list[typing.Any]",
                    "list[Exception]",
                    "typing.Any",
                    "list[Error]"
                ],
                "return": []
            },
            "errors": {
                "return": []
            }
        },
        "global": {
            "global": {
                "RequestErrorModel": [
                    "Model",
                    "type"
                ],
                "WebSocketErrorModel": [
                    "typing.Type",
                    "typing.Any"
                ]
            }
        }
    },
    "fastapi.openapi.docs": {
        "global": {
            "get_redoc_html": {
                "return": [
                    "HTMLResponse"
                ],
                "redoc_favicon_url": [],
                "with_google_fonts": [],
                "title": [
                    "str"
                ],
                "redoc_js_url": [
                    "str"
                ],
                "openapi_url": []
            },
            "get_swagger_ui_html": {
                "return": [
                    "HTMLResponse"
                ],
                "oauth2_redirect_url": [
                    "str",
                    "Optional[str]"
                ],
                "swagger_css_url": [],
                "init_oauth": [
                    "dict",
                    "Optional[Dict]",
                    "Any",
                    "Optional[Any]"
                ],
                "openapi_url": [
                    "str"
                ],
                "swagger_favicon_url": [
                    "str"
                ],
                "swagger_js_url": [
                    "str"
                ],
                "swagger_ui_parameters": [
                    "dict",
                    "Optional[Dict]",
                    "Optional[Any]",
                    "Optional[dict]",
                    "None"
                ],
                "title": []
            },
            "global": {
                "swagger_ui_default_parameters": [
                    "dict[str, typing.Union[str, bool]]"
                ]
            },
            "get_swagger_ui_oauth2_redirect_html": {
                "return": []
            }
        }
    },
    "fastapi.openapi.models": {
        "EmailStr": {
            "__get_pydantic_core_schema__": {
                "return": [
                    "typing.Any"
                ],
                "handler": [],
                "source": []
            },
            "__get_pydantic_json_schema__": {
                "return": [],
                "handler": [
                    "typing.Callable"
                ],
                "core_schema": [
                    "pydantic.BaseModel",
                    "pydantic.Schema",
                    "CoreSchema",
                    "Dict",
                    "dict",
                    "typing.Dict",
                    "pydantic.schema.CoreSchema"
                ]
            },
            "_validate": {
                "_": [
                    "Any"
                ],
                "__input_value": [],
                "return": []
            },
            "__get_validators__": {
                "return": []
            },
            "validate": {
                "return": [
                    "str"
                ],
                "v": []
            }
        },
        "APIKey": {
            "global": {
                "name": [
                    "Tag",
                    "APIKey",
                    "str",
                    "name",
                    "Optional[str]",
                    "Discriminator",
                    "XML",
                    "ServerVariable",
                    "License"
                ],
                "in_": [
                    "APIKeyIn",
                    "ParameterInType",
                    "APIKey",
                    "Parameter",
                    "ParameterInType.query"
                ],
                "type_": [
                    "SecuritySchemeType",
                    "Enum",
                    "OpenIdConnect",
                    "openIdConnect",
                    "APIKey"
                ]
            }
        },
        "Components": {
            "global": {
                "callbacks": [],
                "headers": [
                    "None",
                    "headers",
                    "Response",
                    "Encoding",
                    "Components",
                    "Header",
                    "ParameterBase"
                ],
                "examples": [],
                "pathItems": [
                    "pathItems",
                    "Reference",
                    "PathItem",
                    "typing.Optional[typing.Dict[str, typing.Union[PathItem, Reference]]]",
                    "Union",
                    "Optional[Dict[str, Union[PathItem, Reference]]]",
                    "Optional[dict[str, Union[PathItem, Reference]]]"
                ],
                "requestBodies": [],
                "schemas": [
                    "schemas",
                    "str",
                    "Reference",
                    "Components",
                    "None",
                    "Schema",
                    "typing.Optional[typing.Dict[str, typing.Union[Schema, Reference]]]",
                    "Optional",
                    "Optional[Dict[str, Union[Schema, Reference]]]"
                ],
                "parameters": [
                    "parameters",
                    "Reference",
                    "Union[Parameter, Reference]",
                    "Parameter",
                    "Operation",
                    "PathItem",
                    "Header"
                ],
                "links": [],
                "securitySchemes": [
                    "Reference",
                    "securitySchemes",
                    "HTTPBase",
                    "Components",
                    "SecurityScheme",
                    "OpenIdConnect",
                    "HTTPBearer"
                ],
                "responses": []
            }
        },
        "Discriminator": {
            "global": {
                "propertyName": [],
                "mapping": [
                    "mapping",
                    "str",
                    "None",
                    "Dict[str, str]"
                ]
            }
        },
        "Contact": {
            "global": {
                "url": [],
                "name": [],
                "email": [
                    "typing.Optional[EmailStr]",
                    "Optional[EmailStr]",
                    "str",
                    "EmailStr",
                    "email",
                    "Union[EmailStr, None]",
                    "Contact"
                ]
            }
        },
        "Encoding": {
            "global": {
                "allowReserved": [],
                "contentType": [],
                "headers": [
                    "headers",
                    "Header",
                    "None",
                    "Response",
                    "Encoding",
                    "ParameterBase"
                ],
                "explode": [
                    "typing.Optional[bool]",
                    "None"
                ],
                "style": []
            }
        },
        "Example": {
            "global": {
                "externalValue": [],
                "value": [
                    "Optional[Any]",
                    "typing.Optional[typing.Any]",
                    "value",
                    "Optional",
                    "typing.Any",
                    "Schema",
                    "Any",
                    "Example",
                    "Schema.example"
                ],
                "description": [
                    "typing.Optional[str]",
                    "description",
                    "ServerVariable",
                    "Union[str, None]",
                    "Optional[str]",
                    "Server",
                    "ExternalDocumentation",
                    "Schema",
                    "typing"
                ],
                "summary": []
            }
        },
        "ExternalDocumentation": {
            "global": {
                "description": [
                    "description",
                    "typing.Optional[str]",
                    "Optional[str]",
                    "ServerVariable",
                    "Response",
                    "Server",
                    "ExternalDocumentation",
                    "Info",
                    "str",
                    "Optional",
                    "Union[str, None]",
                    "Example",
                    "Schema",
                    "None"
                ],
                "url": [
                    "Server",
                    "Union[AnyUrl, str]",
                    "url",
                    "ExternalDocumentation",
                    "Example",
                    "OpenIdConnect",
                    "AnyUrl",
                    "Optional",
                    "typing.Union[AnyUrl, str]",
                    "Optional[AnyUrl]"
                ]
            }
        },
        "HTTPBase": {
            "global": {
                "scheme": [],
                "type_": [
                    "SecuritySchemeType",
                    "SecurityBase",
                    "Enum",
                    "apiKey",
                    "APIKey",
                    "OpenIdConnect",
                    "http",
                    "HTTPBase",
                    "Field"
                ]
            }
        },
        "Info": {
            "global": {
                "description": [
                    "typing.Optional[str]",
                    "description",
                    "Info",
                    "ServerVariable",
                    "Response",
                    "Server",
                    "Union[str, None]",
                    "Optional[str]",
                    "Schema",
                    "Contact",
                    "ExternalDocumentation"
                ],
                "contact": [
                    "Optional[Contact]",
                    "None",
                    "typing.Optional[str]",
                    "Contact",
                    "typing.Optional[Contact]",
                    "Union[Contact, None]",
                    "name",
                    "contact",
                    "email"
                ],
                "license": [
                    "Optional[License]",
                    "License",
                    "typing.Optional[License]",
                    "pydantic.BaseModel"
                ],
                "termsOfService": [],
                "version": [],
                "summary": [
                    "PathItem",
                    "Tag",
                    "Operation",
                    "Optional[str]",
                    "summary",
                    "Example",
                    "description",
                    "Union[str, None]"
                ],
                "title": [
                    "str",
                    "Schema",
                    "title",
                    "Info",
                    "Example",
                    "summary",
                    "Optional[str]",
                    "Union[str, None]"
                ]
            }
        },
        "HTTPBearer": {
            "global": {
                "bearerFormat": [],
                "scheme": []
            }
        },
        "License": {
            "global": {
                "url": [
                    "Server",
                    "url",
                    "Union[AnyUrl, str]",
                    "ExternalDocumentation",
                    "Optional[AnyUrl]",
                    "typing.Union[AnyUrl, str]",
                    "AnyUrl",
                    "Example",
                    "None",
                    "typing.Optional[pydantic.AnyUrl]"
                ],
                "name": [],
                "identifier": []
            }
        },
        "Link": {
            "global": {
                "operationRef": [],
                "description": [],
                "server": [
                    "Server",
                    "server",
                    "PathItem",
                    "Union[AnyUrl, str]"
                ],
                "operationId": [],
                "parameters": [],
                "requestBody": []
            }
        },
        "MediaType": {
            "global": {
                "encoding": [
                    "encoding",
                    "Encoding",
                    "MediaType",
                    "BaseModelWithConfig",
                    "style",
                    "Optional"
                ],
                "examples": [
                    "examples",
                    "Example",
                    "Components",
                    "Reference",
                    "MediaType",
                    "Union[Example, Reference]",
                    "str",
                    "ParameterBase",
                    "TypedDict",
                    "None"
                ],
                "schema_": [
                    "Optional[str]",
                    "ParameterBase",
                    "typing.Optional[str]",
                    "typing.Union[Schema, Reference, None]",
                    "None",
                    "Optional[Union[Schema, Reference]]",
                    "MediaType",
                    "schema",
                    "BaseModel"
                ],
                "example": []
            }
        },
        "OAuthFlow": {
            "global": {
                "refreshUrl": [
                    "typing.Optional[str]",
                    "Union[str, None]"
                ],
                "scopes": [
                    "Dict[str, str]",
                    "dict[str, str]",
                    "scopes"
                ]
            }
        },
        "OAuth2": {
            "global": {
                "flows": [],
                "type_": [
                    "SecuritySchemeType",
                    "Field",
                    "Enum",
                    "SecurityBase",
                    "SecurityType",
                    "OpenIdConnect"
                ]
            }
        },
        "OAuthFlowAuthorizationCode": {
            "global": {
                "tokenUrl": [],
                "authorizationUrl": [
                    "str",
                    "OAuthFlowAuthorizationCode"
                ]
            }
        },
        "OAuthFlowClientCredentials": {
            "global": {
                "tokenUrl": [
                    "str",
                    "OAuthFlowAuthorizationCode",
                    "tokenUrl",
                    "OAuthFlowPassword",
                    "OAuthFlowClientCredentials"
                ]
            }
        },
        "OAuthFlows": {
            "global": {
                "clientCredentials": [],
                "password": [
                    "str",
                    "password",
                    "vol.Schema",
                    "Contact",
                    "voluptuous"
                ],
                "authorizationCode": [
                    "authorizationCode",
                    "Optional[OAuthFlowAuthorizationCode]",
                    "OAuthFlows",
                    "OAuthFlowAuthorizationCode",
                    "OAuthFlow",
                    "Dict[str, str]",
                    "BaseModelWithConfig"
                ],
                "implicit": [
                    "typing.Optional[OAuthFlowImplicit]",
                    "Optional[OAuthFlowImplicit]",
                    "OAuthFlowImplicit",
                    "Union[OAuthFlowImplicit, None]",
                    "OAuthFlows",
                    "None",
                    "implicit"
                ]
            }
        },
        "OpenAPI": {
            "global": {
                "externalDocs": [
                    "Optional[ExternalDocumentation]",
                    "typing.Optional[ExternalDocumentation]",
                    "ExternalDocumentation",
                    "OpenAPI",
                    "None",
                    "Optional",
                    "Tag",
                    "BaseModelWithConfig",
                    "url",
                    "description"
                ],
                "components": [],
                "jsonSchemaDialect": [
                    "typing.Optional[str]",
                    "None",
                    "Optional",
                    "OpenAPI",
                    "Optional[str]",
                    "Union[str, None]"
                ],
                "openapi": [],
                "tags": [
                    "tags",
                    "BaseModelWithConfig",
                    "Optional[List[Tag]]",
                    "OpenAPI",
                    "Tag",
                    "description",
                    "typing.Optional[typing.List[Tag]]",
                    "Operation",
                    "name"
                ],
                "security": [
                    "security",
                    "List",
                    "Dict",
                    "OpenAPI",
                    "None",
                    "str",
                    "OpenAPI.security"
                ],
                "servers": [
                    "servers",
                    "Server",
                    "variables",
                    "PathItem",
                    "None",
                    "Optional",
                    "OpenAPI",
                    "typing.List[Server]"
                ],
                "paths": [
                    "typing.Optional[typing.Dict[str, typing.Union[PathItem, typing.Any]]]",
                    "Any",
                    "Optional",
                    "paths",
                    "str"
                ],
                "webhooks": [],
                "info": []
            }
        },
        "OpenIdConnect": {
            "global": {
                "type_": [],
                "openIdConnectUrl": [
                    "str",
                    "openIdConnectUrl",
                    "Union"
                ]
            }
        },
        "Operation": {
            "global": {
                "deprecated": [
                    "typing.Optional[bool]",
                    "None",
                    "deprecated",
                    "Union[bool, None]",
                    "Schema",
                    "True",
                    "Operation",
                    "Parameter",
                    "Optional[bool]"
                ],
                "externalDocs": [],
                "description": [
                    "typing.Optional[str]",
                    "ServerVariable",
                    "Optional[str]",
                    "Union[str, None]",
                    "description",
                    "ExternalDocumentation",
                    "Server",
                    "Response",
                    "Schema",
                    "RequestBody",
                    "typing",
                    "Info"
                ],
                "callbacks": [
                    "Optional[Dict[str, Union[Dict[str, PathItem], Reference]]]",
                    "callbacks",
                    "Components",
                    "Reference",
                    "Operation",
                    "typing.Optional[typing.Dict[str, typing.Union[typing.Dict[str, PathItem], Reference]]]",
                    "Optional[Dict[str, Union[Dict[str, PathItem], Reference, Any]]]"
                ],
                "parameters": [
                    "parameters",
                    "Reference",
                    "Components",
                    "Operation",
                    "Union[Parameter, Reference]",
                    "Parameter",
                    "None",
                    "PathItem",
                    "Header"
                ],
                "requestBody": [
                    "requestBody",
                    "typing.Union[RequestBody, Reference, None]",
                    "RequestBody",
                    "required",
                    "None",
                    "Operation",
                    "ParameterBase",
                    "Reference",
                    "Union[RequestBody, Reference]"
                ],
                "operationId": [
                    "typing.Optional[str]",
                    "Optional[str]",
                    "Union[str, None]",
                    "operationId",
                    "Link",
                    "None"
                ],
                "responses": [
                    "responses",
                    "Any",
                    "Operation",
                    "None",
                    "Components",
                    "str",
                    "Response",
                    "Union[Response, Any]",
                    "typing.Optional[typing.Dict[str, typing.Union[Response, typing.Any]]]"
                ],
                "servers": [],
                "security": [],
                "summary": [
                    "summary",
                    "PathItem",
                    "Optional[str]",
                    "Operation",
                    "Tag",
                    "description",
                    "Example",
                    "License"
                ],
                "tags": []
            }
        },
        "OAuthFlowPassword": {
            "global": {
                "tokenUrl": []
            }
        },
        "OAuthFlowImplicit": {
            "global": {
                "authorizationUrl": [
                    "str",
                    "OAuthFlowAuthorizationCode",
                    "authorizationUrl"
                ]
            }
        },
        "Parameter": {
            "global": {
                "in_": [],
                "name": [
                    "Tag",
                    "APIKey",
                    "name",
                    "XML",
                    "str",
                    "ServerVariable"
                ]
            }
        },
        "ParameterBase": {
            "global": {
                "allowReserved": [
                    "typing.Optional[bool]",
                    "Optional[bool]",
                    "allowReserved",
                    "BaseModelWithConfig",
                    "Union[bool, None]",
                    "False",
                    "None",
                    "ParameterBase"
                ],
                "example": [],
                "content": [
                    "MediaType",
                    "content",
                    "Response",
                    "RequestBody",
                    "Encoding",
                    "Dict[str, MediaType]",
                    "Header",
                    "str",
                    "Optional"
                ],
                "deprecated": [],
                "required": [],
                "schema_": [
                    "Optional[str]",
                    "ParameterBase",
                    "MediaType",
                    "typing.Union[Schema, Reference, None]",
                    "Field",
                    "typing.Optional[str]",
                    "Optional[Union[Schema, Reference]]",
                    "Reference"
                ],
                "examples": [],
                "explode": [],
                "style": [],
                "description": [
                    "typing.Optional[str]",
                    "ServerVariable",
                    "description",
                    "Info",
                    "Union[str, None]",
                    "Optional[str]",
                    "Schema",
                    "typing",
                    "Server",
                    "Response",
                    "Example"
                ]
            }
        },
        "PathItem": {
            "global": {
                "get": [
                    "typing.Optional[Operation]",
                    "Optional[Operation]",
                    "PathItem",
                    "Operation",
                    "Optional",
                    "Union[Operation, None]"
                ],
                "description": [
                    "ServerVariable",
                    "typing.Optional[str]",
                    "description",
                    "Union[str, None]",
                    "Schema",
                    "Optional[str]",
                    "Server",
                    "Info",
                    "Response"
                ],
                "delete": [
                    "Optional[Operation]",
                    "None",
                    "PathItem",
                    "Operation",
                    "Optional",
                    "typing.Optional[Operation]",
                    "typing.Union[Operation, None]",
                    "tags",
                    "delete"
                ],
                "options": [
                    "options",
                    "PathItem",
                    "Operation",
                    "Optional",
                    "Parameter"
                ],
                "head": [],
                "parameters": [
                    "parameters",
                    "Reference",
                    "PathItem",
                    "Operation",
                    "None",
                    "Header",
                    "Union[Parameter, Reference]"
                ],
                "patch": [],
                "ref": [
                    "ref",
                    "Optional[str]",
                    "str",
                    "Reference",
                    "Schema",
                    "typing.Optional[str]",
                    "PathItem",
                    "None"
                ],
                "post": [
                    "Optional[Operation]",
                    "Operation",
                    "PathItem",
                    "None",
                    "post",
                    "typing.Optional[Operation]",
                    "BaseModelWithConfig",
                    "Optional[BaseModelWithConfig]",
                    "Union[Operation, None]",
                    "fastapi.openapi.models"
                ],
                "summary": [
                    "Operation",
                    "Optional[str]",
                    "PathItem",
                    "Example",
                    "summary",
                    "description",
                    "Tag"
                ],
                "servers": [],
                "put": [
                    "Optional[Operation]",
                    "Operation",
                    "None",
                    "typing.Optional[Operation]",
                    "Union[Operation, None]",
                    "PathItem",
                    "PathItem.put",
                    "put",
                    "BaseModelWithConfig"
                ],
                "trace": [
                    "trace",
                    "None",
                    "Operation",
                    "Optional[Operation]",
                    "PathItem"
                ]
            }
        },
        "Reference": {
            "global": {
                "ref": [
                    "ref",
                    "str",
                    "Optional[str]",
                    "PathItem",
                    "Schema",
                    "Reference",
                    "Optional"
                ]
            }
        },
        "RequestBody": {
            "global": {
                "content": [],
                "description": [
                    "typing.Optional[str]",
                    "description",
                    "Union[str, None]",
                    "Optional[str]",
                    "ServerVariable",
                    "Server",
                    "ExternalDocumentation",
                    "Contact",
                    "Response"
                ],
                "required": []
            }
        },
        "Response": {
            "global": {
                "description": [
                    "description",
                    "typing.Optional[str]",
                    "Optional[str]",
                    "Union[str, None]",
                    "ServerVariable",
                    "Info",
                    "None",
                    "Response",
                    "Server"
                ],
                "links": [
                    "links",
                    "Reference",
                    "Link",
                    "str",
                    "Response",
                    "Union[Link, Reference]",
                    "Optional"
                ],
                "headers": [],
                "content": [
                    "MediaType",
                    "Response",
                    "content",
                    "str",
                    "RequestBody",
                    "Encoding",
                    "typing.Dict[str, MediaType]"
                ]
            }
        },
        "Schema": {
            "global": {
                "additionalProperties": [
                    "additionalProperties",
                    "None",
                    "typing.Optional[SchemaOrBool]",
                    "typing.Union[Schema, bool, None]",
                    "Optional[SchemaOrBool]",
                    "Union[Schema, bool]",
                    "Schema",
                    "Union[Schema, bool, None]"
                ],
                "allOf": [],
                "contains": [
                    "contains",
                    "Schema",
                    "None",
                    "False",
                    "Union[Schema, bool]",
                    "SchemaOrBool",
                    "Union[Schema, bool, None]"
                ],
                "const": [],
                "contentEncoding": [
                    "typing.Optional[str]",
                    "Union[str, None]",
                    "Optional[str]"
                ],
                "contentMediaType": [
                    "typing.Optional[str]",
                    "Union[str, None]",
                    "Optional[str]"
                ],
                "anyOf": [],
                "contentSchema": [
                    "contentSchema",
                    "Schema",
                    "typing.Union[Schema, bool, None]",
                    "False"
                ],
                "defs": [
                    "defs",
                    "None",
                    "Optional",
                    "Union[Schema, bool]"
                ],
                "anchor": [
                    "typing.Optional[str]",
                    "anchor",
                    "Union[str, None]",
                    "Optional[str]",
                    "Optional"
                ],
                "default": [],
                "dynamicAnchor": [
                    "typing.Optional[str]",
                    "None",
                    "Union[str, None]",
                    "Optional[str]"
                ],
                "dependentRequired": [],
                "deprecated": [],
                "discriminator": [],
                "dependentSchemas": [
                    "dependentSchemas"
                ],
                "comment": [],
                "enum": [
                    "enum",
                    "Field",
                    "Annotated",
                    "ServerVariable",
                    "None"
                ],
                "else_": [],
                "dynamicRef": [],
                "description": [
                    "typing.Optional[str]",
                    "description",
                    "ServerVariable",
                    "Optional[str]",
                    "Union[str, None]",
                    "Server",
                    "Info",
                    "Operation",
                    "None",
                    "ExternalDocumentation"
                ],
                "exclusiveMinimum": [],
                "examples": [],
                "exclusiveMaximum": [],
                "maxContains": [
                    "typing.Optional[int]",
                    "maxContains",
                    "Field",
                    "None",
                    "int"
                ],
                "items": [
                    "items",
                    "SchemaOrBool",
                    "Union[Schema, bool]"
                ],
                "if_": [
                    "Union[Schema, bool]",
                    "typing.Optional[SchemaOrBool]",
                    "Optional[SchemaOrBool]",
                    "None",
                    "SchemaOrBool",
                    "Union[Schema, bool, None]",
                    "bool",
                    "Field"
                ],
                "id": [
                    "typing.Optional[str]",
                    "Optional[str]",
                    "Field",
                    "Union[str, None]",
                    "id",
                    "None",
                    "Optional"
                ],
                "maxItems": [
                    "typing.Optional[int]",
                    "maxItems"
                ],
                "maxProperties": [],
                "minItems": [
                    "typing.Optional[int]",
                    "minItems",
                    "Field"
                ],
                "minLength": [
                    "typing.Optional[int]",
                    "Field",
                    "minLength",
                    "Optional[int]"
                ],
                "minProperties": [
                    "typing.Optional[int]",
                    "minProperties",
                    "Field"
                ],
                "maxLength": [
                    "typing.Optional[int]",
                    "maxLength",
                    "Optional[int]"
                ],
                "multipleOf": [
                    "typing.Optional[float]",
                    "Field",
                    "Optional[float]",
                    "multipleOf",
                    "Union[float, None]"
                ],
                "minimum": [],
                "not_": [
                    "Union[Schema, bool]",
                    "typing.Optional[SchemaOrBool]",
                    "SchemaOrBool",
                    "typing.Union[Schema, bool, None]",
                    "Optional",
                    "True",
                    "None",
                    "Optional[SchemaOrBool]"
                ],
                "minContains": [
                    "typing.Optional[int]",
                    "minContains",
                    "Field",
                    "Optional[int]"
                ],
                "maximum": [
                    "typing.Optional[float]",
                    "Union[float, None]",
                    "None",
                    "Optional[float]",
                    "maximum"
                ],
                "pattern": [
                    "typing.Optional[str]",
                    "Union[str, None]",
                    "None"
                ],
                "oneOf": [],
                "patternProperties": [
                    "patternProperties",
                    "bool",
                    "Union[Schema, bool]"
                ],
                "prefixItems": [
                    "prefixItems",
                    "Union[Schema, bool]",
                    "Schema",
                    "Optional"
                ],
                "format": [
                    "typing.Optional[str]",
                    "Union[str, None]",
                    "Optional[str]",
                    "None",
                    "format"
                ],
                "properties": [
                    "properties",
                    "bool",
                    "str",
                    "SchemaOrBool",
                    "Optional",
                    "Schema",
                    "Dict[str, SchemaOrBool]"
                ],
                "propertyNames": [],
                "schema_": [],
                "required": [
                    "required",
                    "typing.Optional[bool]",
                    "Union[bool, None]",
                    "None",
                    "ParameterBase",
                    "RequestBody",
                    "True",
                    "Schema"
                ],
                "ref": [],
                "example": [],
                "vocabulary": [
                    "typing.Optional[str]",
                    "vocabulary",
                    "Field",
                    "Optional[str]"
                ],
                "unevaluatedProperties": [
                    "unevaluatedProperties",
                    "SchemaOrBool",
                    "Schema"
                ],
                "uniqueItems": [
                    "typing.Optional[bool]",
                    "None",
                    "False",
                    "Optional[bool]"
                ],
                "then": [
                    "then",
                    "Union[Schema, bool]",
                    "None",
                    "typing.Optional[SchemaOrBool]",
                    "SchemaOrBool",
                    "Schema",
                    "Union[Schema, bool, None]",
                    "typing.Union[Schema, bool, None]",
                    "Optional[SchemaOrBool]"
                ],
                "title": [],
                "xml": [
                    "Optional[XML]",
                    "XML",
                    "typing.Optional[XML]",
                    "xml",
                    "None",
                    "BaseModelWithConfig"
                ],
                "unevaluatedItems": [
                    "unevaluatedItems",
                    "Schema",
                    "Union[Schema, bool, None]",
                    "None"
                ],
                "type": [
                    "SecuritySchemeType",
                    "typing.Optional[str]",
                    "Schema",
                    "SecurityBase",
                    "type",
                    "APIKey",
                    "Field",
                    "None",
                    "HTTPBearer",
                    "http",
                    "Optional[str]"
                ],
                "readOnly": [
                    "typing.Optional[bool]",
                    "Union[bool, None]",
                    "None",
                    "Optional[bool]"
                ],
                "writeOnly": [],
                "externalDocs": [
                    "Optional[ExternalDocumentation]",
                    "typing.Optional[ExternalDocumentation]",
                    "BaseModelWithConfig",
                    "url",
                    "Tag",
                    "ExternalDocumentation",
                    "externalDocs"
                ]
            }
        },
        "SecurityBase": {
            "global": {
                "description": [],
                "type_": [
                    "SecuritySchemeType",
                    "http",
                    "APIKey",
                    "apiKey"
                ]
            }
        },
        "Server": {
            "global": {
                "variables": [
                    "variables",
                    "ServerVariable",
                    "str",
                    "Server",
                    "None"
                ],
                "description": [
                    "ServerVariable",
                    "Optional[str]",
                    "description",
                    "typing.Optional[str]",
                    "Union[str, None]",
                    "Info",
                    "Server",
                    "Response",
                    "Schema",
                    "ExternalDocumentation"
                ],
                "url": [
                    "Union[AnyUrl, str]",
                    "Server",
                    "ExternalDocumentation",
                    "url",
                    "Example",
                    "AnyUrl",
                    "Optional[AnyUrl]",
                    "externalValue",
                    "openIdConnectUrl"
                ]
            }
        },
        "ServerVariable": {
            "global": {
                "description": [
                    "typing.Optional[str]",
                    "description",
                    "Optional[str]",
                    "Union[str, None]",
                    "ServerVariable",
                    "Server",
                    "ExternalDocumentation",
                    "Info",
                    "ParameterBase",
                    "PathItem",
                    "typing"
                ],
                "default": [
                    "None",
                    "ParameterBase",
                    "default",
                    "typing.Optional[typing.Any]",
                    "Optional[Any]",
                    "Schema",
                    "Field",
                    "Header",
                    "str",
                    "ServerVariable",
                    "Optional[typing.Any]",
                    "vol.Optional",
                    "typing.Any",
                    "int",
                    "bool",
                    "Optional"
                ],
                "enum": [
                    "enum",
                    "Field",
                    "None",
                    "Annotated",
                    "List[str]",
                    "ServerVariable"
                ]
            }
        },
        "Tag": {
            "global": {
                "externalDocs": [
                    "Optional[ExternalDocumentation]",
                    "typing.Optional[ExternalDocumentation]",
                    "ExternalDocumentation",
                    "externalDocs",
                    "BaseModelWithConfig",
                    "Union[ExternalDocumentation, None]",
                    "Tag"
                ],
                "description": [
                    "typing.Optional[str]",
                    "ServerVariable",
                    "description",
                    "Union[str, None]",
                    "Server",
                    "None",
                    "Info",
                    "Response",
                    "Optional[str]",
                    "ParameterBase",
                    "Tag",
                    "Schema"
                ],
                "name": []
            }
        },
        "XML": {
            "global": {
                "namespace": [
                    "typing.Optional[str]",
                    "namespace",
                    "Optional[str]",
                    "None"
                ],
                "prefix": [
                    "typing.Optional[str]",
                    "prefix",
                    "Union[str, None]",
                    "None",
                    "Optional[str]"
                ],
                "name": [],
                "wrapped": [],
                "attribute": []
            }
        }
    },
    "fastapi.openapi.utils": {
        "global": {
            "generate_operation_id": {
                "return": [
                    "str"
                ],
                "route": [],
                "method": [
                    "str"
                ]
            },
            "_get_openapi_operation_parameters": {
                "return": [
                    "typing.Any",
                    "typing.List[fastapi.openapi.models.Parameter]",
                    "typing.List[typing.Dict[str, typing.Any]]",
                    "dict"
                ],
                "schema_generator": [
                    "typing.Any",
                    "Any",
                    "SchemaGenerator"
                ],
                "model_name_map": [
                    "dict",
                    "dict[str, typing.Any]"
                ],
                "field_mapping": [],
                "dependant": [],
                "separate_input_output_schemas": []
            },
            "generate_operation_summary": {
                "method": [
                    "str"
                ],
                "return": [
                    "str"
                ],
                "route": []
            },
            "get_openapi": {
                "contact": [
                    "typing.Optional[dict]"
                ],
                "description": [],
                "license_info": [
                    "typing.Optional[dict]"
                ],
                "return": [
                    "dict"
                ],
                "openapi_version": [
                    "str"
                ],
                "separate_input_output_schemas": [],
                "terms_of_service": [],
                "tags": [
                    "typing.Optional[list[dict[str, str]]]",
                    "typing.Optional[list[dict]]",
                    "output"
                ],
                "servers": [],
                "routes": [],
                "version": [
                    "str"
                ],
                "summary": [],
                "title": [],
                "webhooks": []
            },
            "get_fields_from_routes": {
                "routes": [],
                "return": [
                    "list[typing.Any]"
                ]
            },
            "get_openapi_operation_metadata": {
                "method": [
                    "str"
                ],
                "operation_ids": [
                    "set[typing.Any]"
                ],
                "return": [
                    "Any",
                    "dict"
                ],
                "route": []
            },
            "get_openapi_operation_request_body": {
                "body_field": [
                    "typing.Any",
                    "ModelField",
                    "required",
                    "typing.Union[Body, typing.Any]",
                    "typing.Union[ModelField, Body]",
                    "typing.Optional[typing.Any]",
                    "django.db.models.Field"
                ],
                "model_name_map": [],
                "separate_input_output_schemas": [],
                "return": [
                    "typing.Optional[typing.Dict[str, typing.Any]]",
                    "typing.Optional[typing.Dict]",
                    "typing.Optional[typing.Dict[str, typing.Dict[str, typing.Any]]]"
                ],
                "field_mapping": [
                    "typing.Any",
                    "dict[typing.Any, typing.Any]",
                    "dict[str, typing.Any]"
                ],
                "schema_generator": [
                    "typing.Any"
                ]
            },
            "get_openapi_path": {
                "separate_input_output_schemas": [
                    "bool"
                ],
                "schema_generator": [
                    "typing.Any",
                    "SchemaGenerator"
                ],
                "model_name_map": [],
                "operation_ids": [],
                "field_mapping": [
                    "dict[typing.Any, typing.Any]",
                    "typing.Any",
                    "dict[str, typing.Any]"
                ],
                "route": [],
                "return": []
            },
            "get_openapi_security_definitions": {
                "flat_dependant": [
                    "typing.Any"
                ],
                "return": []
            },
            "global": {
                "status_code_ranges": [
                    "dict[str, str]"
                ]
            }
        }
    },
    "fastapi.param_functions": {
        "global": {
            "Body": {
                "alias": [],
                "alias_priority": [],
                "allow_inf_nan": [
                    "bool"
                ],
                "embed": [],
                "decimal_places": [],
                "deprecated": [
                    "bool"
                ],
                "discriminator": [
                    "Union[str, None]",
                    "Dict[str, str]",
                    "Union[str, Dict[str, str]]",
                    "Optional[Dict]",
                    "Dict",
                    "Any",
                    "Optional[str]",
                    "Dict[str, Any]",
                    "Union[str, str]",
                    "Discriminator",
                    "Union",
                    "params.Body"
                ],
                "description": [
                    "str"
                ],
                "example": [
                    "Any",
                    "Optional[Any]"
                ],
                "extra": [],
                "return": [],
                "max_digits": [
                    "int"
                ],
                "gt": [
                    "gt",
                    "Union[int, float]",
                    "Any",
                    "None",
                    "params",
                    "float",
                    "int",
                    "params.Body"
                ],
                "default_factory": [],
                "lt": [
                    "lt",
                    "Union[int, float]",
                    "Any",
                    "params.Body"
                ],
                "ge": [],
                "default": [],
                "include_in_schema": [
                    "bool"
                ],
                "min_length": [
                    "int"
                ],
                "multiple_of": [],
                "serialization_alias": [
                    "str"
                ],
                "json_schema_extra": [
                    "Union[Dict, Callable]",
                    "Optional[Union[Dict, Callable]]",
                    "Optional[Dict]",
                    "Union[Dict, Callable[[], Dict]]",
                    "Optional[Callable]",
                    "Union[Dict, Callable[..., Dict]]",
                    "typing.Any",
                    "Dict"
                ],
                "pattern": [
                    "str"
                ],
                "openapi_examples": [
                    "Dict[str, Any]",
                    "None",
                    "Dict",
                    "params.Body",
                    "Optional[List[Any]]"
                ],
                "le": [],
                "title": [
                    "str"
                ],
                "validation_alias": [
                    "str"
                ],
                "max_length": [
                    "int"
                ],
                "examples": [
                    "Optional[Union[List, Dict]]",
                    "Optional[List]",
                    "Optional[Dict[str, Any]]",
                    "Optional[Any]",
                    "examples",
                    "Optional[List[Any]]",
                    "Dict",
                    "typing.Any",
                    "List[Any]",
                    "example"
                ],
                "media_type": [
                    "str"
                ],
                "regex": [
                    "str"
                ],
                "strict": [
                    "bool"
                ]
            },
            "Cookie": {
                "alias": [
                    "str"
                ],
                "allow_inf_nan": [
                    "bool"
                ],
                "default_factory": [],
                "deprecated": [
                    "bool"
                ],
                "description": [
                    "str"
                ],
                "return": [
                    "params.Cookie",
                    "Any",
                    "params",
                    "CookieParam",
                    "Cookie"
                ],
                "decimal_places": [
                    "int"
                ],
                "discriminator": [],
                "default": [
                    "Any",
                    "Undefined",
                    "default",
                    "Union[Undefined, Any]",
                    "Optional[Any]"
                ],
                "gt": [
                    "Union[int, float]",
                    "gt",
                    "Optional[Union[int, float]]",
                    "params.Cookie",
                    "Undefined",
                    "Union[int, float, None]"
                ],
                "extra": [
                    "Dict[str, Any]"
                ],
                "ge": [],
                "include_in_schema": [],
                "max_digits": [],
                "json_schema_extra": [
                    "Union[Dict, Callable]",
                    "Union[Dict, Callable[..., Dict]]",
                    "Union[Dict, Callable[[], Dict]]",
                    "Dict",
                    "Optional[Union[Dict, Callable]]",
                    "Optional[Dict]"
                ],
                "pattern": [
                    "str"
                ],
                "openapi_examples": [],
                "le": [
                    "Union[int, float]",
                    "le",
                    "Any",
                    "Union[float, int]",
                    "float",
                    "Optional[float]"
                ],
                "max_length": [
                    "int"
                ],
                "min_length": [
                    "int"
                ],
                "serialization_alias": [],
                "alias_priority": [
                    "float",
                    "int",
                    "Optional[int]",
                    "Any",
                    "Union[int, Any]",
                    "Undefined",
                    "Optional[Any]"
                ],
                "strict": [
                    "bool"
                ],
                "title": [],
                "multiple_of": [],
                "example": [],
                "validation_alias": [],
                "regex": [],
                "lt": [
                    "Union[int, float]",
                    "lt"
                ],
                "examples": []
            },
            "Depends": {
                "use_cache": [
                    "bool"
                ],
                "dependency": [
                    "Optional[Any]",
                    "None",
                    "dependency",
                    "Any",
                    "params"
                ],
                "return": [
                    "Depends",
                    "params.Depends",
                    "Any",
                    "dependency",
                    "params"
                ]
            },
            "File": {
                "allow_inf_nan": [
                    "bool"
                ],
                "decimal_places": [],
                "alias": [],
                "alias_priority": [],
                "default": [
                    "Undefined",
                    "Any"
                ],
                "description": [
                    "str"
                ],
                "ge": [
                    "ge",
                    "Any",
                    "Union[int, float]",
                    "int",
                    "Union[int, float, None]",
                    "Optional[int]"
                ],
                "examples": [],
                "gt": [
                    "Optional[int]",
                    "Optional[Union[int, float]]",
                    "Union[int, float]",
                    "Any",
                    "float",
                    "Optional[float]",
                    "None"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "discriminator": [
                    "str",
                    "Discriminator",
                    "Dict",
                    "Union",
                    "Optional[str]",
                    "params.File",
                    "Dict[str, str]",
                    "Optional[Dict]"
                ],
                "example": [
                    "Any",
                    "typing.Any",
                    "Optional[Any]"
                ],
                "json_schema_extra": [
                    "Union[Dict, Callable]",
                    "Dict",
                    "Union[Dict, Callable[..., Dict]]"
                ],
                "max_digits": [],
                "max_length": [],
                "min_length": [
                    "int"
                ],
                "lt": [
                    "Optional[Union[int, float]]",
                    "Any",
                    "lt",
                    "Union[int, float]",
                    "Optional[int]",
                    "params.File",
                    "Optional[float]",
                    "None"
                ],
                "media_type": [
                    "str"
                ],
                "openapi_examples": [
                    "Dict[str, Any]",
                    "List",
                    "Dict",
                    "Optional[Dict]",
                    "Optional[List[Any]]",
                    "params.File",
                    "Optional[List]"
                ],
                "pattern": [
                    "str"
                ],
                "multiple_of": [],
                "serialization_alias": [
                    "str",
                    "Optional[str]",
                    "typing.Optional[str]"
                ],
                "strict": [
                    "bool"
                ],
                "deprecated": [],
                "title": [],
                "regex": [
                    "str"
                ],
                "return": [
                    "params.File",
                    "File"
                ],
                "validation_alias": [],
                "le": [],
                "extra": [
                    "Dict[str, Any]"
                ],
                "default_factory": [
                    "typing.Callable",
                    "typing.Optional[typing.Callable]",
                    "Optional[typing.Callable]"
                ]
            },
            "Form": {
                "allow_inf_nan": [
                    "bool"
                ],
                "return": [
                    "params.Form",
                    "Any",
                    "Form"
                ],
                "deprecated": [],
                "default_factory": [
                    "typing.Callable",
                    "Callable"
                ],
                "alias": [],
                "default": [
                    "Any",
                    "Undefined",
                    "default"
                ],
                "example": [],
                "discriminator": [],
                "description": [],
                "extra": [],
                "include_in_schema": [
                    "bool"
                ],
                "ge": [
                    "ge",
                    "Union[int, float]",
                    "Any",
                    "None",
                    "params.Form",
                    "Union[int, float, None]"
                ],
                "max_digits": [
                    "int"
                ],
                "examples": [],
                "le": [
                    "le",
                    "Optional[int]",
                    "Any",
                    "lt",
                    "params.Form",
                    "Union[int, float]",
                    "Union[int, float, None]",
                    "float"
                ],
                "media_type": [],
                "gt": [
                    "gt",
                    "Any",
                    "None",
                    "Union[int, float]",
                    "Optional[int]",
                    "Union[int, float, None]",
                    "params.Form",
                    "float"
                ],
                "max_length": [
                    "int"
                ],
                "json_schema_extra": [
                    "Union[Dict, Callable]",
                    "Optional[Union[Dict, Callable]]",
                    "Optional[Dict]",
                    "Union[Dict, Callable[..., Dict]]",
                    "Union[Dict, Callable[[], Dict]]",
                    "Dict[str, Any]"
                ],
                "min_length": [],
                "pattern": [
                    "str"
                ],
                "lt": [
                    "lt",
                    "None",
                    "Optional[int]",
                    "Union[int, float]",
                    "Any",
                    "Union[int, float, None]",
                    "int",
                    "Optional[float]"
                ],
                "serialization_alias": [],
                "multiple_of": [],
                "strict": [
                    "bool"
                ],
                "validation_alias": [],
                "openapi_examples": [],
                "title": [
                    "str"
                ],
                "alias_priority": [],
                "decimal_places": [],
                "regex": [
                    "str"
                ]
            },
            "Header": {
                "alias": [
                    "str"
                ],
                "allow_inf_nan": [],
                "alias_priority": [],
                "decimal_places": [],
                "description": [
                    "str"
                ],
                "default": [
                    "Any"
                ],
                "default_factory": [],
                "convert_underscores": [
                    "bool"
                ],
                "return": [
                    "Any",
                    "params.Header",
                    "params"
                ],
                "deprecated": [
                    "bool"
                ],
                "example": [],
                "extra": [
                    "Dict[str, Any]"
                ],
                "discriminator": [
                    "str",
                    "Optional[str]",
                    "Enum",
                    "Dict",
                    "Union[str, None]",
                    "Union",
                    "Discriminator",
                    "Optional[Dict]",
                    "Any"
                ],
                "include_in_schema": [],
                "examples": [
                    "Optional[List]",
                    "Dict",
                    "Optional[Dict[str, Any]]",
                    "List",
                    "List[Any]",
                    "Optional[Any]",
                    "description",
                    "Optional[Any]]",
                    "Optional[List[Any]]",
                    "Dict[str, Any]",
                    "Optional[Dict]",
                    "Optional[Union[List, Dict]]",
                    "Optional[List[Dict]]"
                ],
                "ge": [
                    "ge",
                    "params.Header",
                    "Union[int, float]",
                    "Union[int, float, None]",
                    "None",
                    "float",
                    "Union[float, int]"
                ],
                "max_digits": [
                    "int"
                ],
                "max_length": [
                    "int"
                ],
                "gt": [
                    "gt",
                    "Union[int, float, None]",
                    "params.Header",
                    "Union[int, float]",
                    "Any",
                    "None"
                ],
                "min_length": [
                    "int"
                ],
                "pattern": [
                    "str"
                ],
                "regex": [
                    "str"
                ],
                "le": [],
                "serialization_alias": [
                    "Optional[str]",
                    "str"
                ],
                "title": [
                    "str"
                ],
                "strict": [],
                "validation_alias": [
                    "str"
                ],
                "json_schema_extra": [
                    "typing.Dict",
                    "Union[Dict, Callable]",
                    "Union[Dict, Callable[[], Dict]]",
                    "Dict",
                    "Union[Dict, Callable[..., Dict]]",
                    "Optional[Dict]"
                ],
                "multiple_of": [
                    "Any",
                    "float",
                    "int",
                    "Union[int, float]",
                    "Optional[Union[int, float]]",
                    "Union[float, int]",
                    "Union[int, float, None]",
                    "Optional"
                ],
                "lt": [],
                "openapi_examples": []
            },
            "Path": {
                "allow_inf_nan": [
                    "bool"
                ],
                "description": [
                    "str"
                ],
                "alias_priority": [
                    "float",
                    "int",
                    "Any",
                    "Optional[Any]",
                    "Optional[int]"
                ],
                "default": [
                    "Any",
                    "default"
                ],
                "deprecated": [
                    "bool"
                ],
                "return": [
                    "Any",
                    "params.Path"
                ],
                "discriminator": [
                    "str",
                    "Union[str, Dict]",
                    "Optional[str]",
                    "Union[str, Dict[str, str]]",
                    "Union[str, None]",
                    "Dict"
                ],
                "extra": [],
                "alias": [],
                "ge": [
                    "ge",
                    "Union[int, float]",
                    "params.Path",
                    "Union[int, float, None]",
                    "Decimal",
                    "float",
                    "None",
                    "Any"
                ],
                "max_digits": [],
                "lt": [
                    "lt",
                    "Union[int, float]",
                    "float",
                    "Union[int, float, None]",
                    "Optional[int]",
                    "Any",
                    "params.Path",
                    "int"
                ],
                "le": [
                    "le",
                    "float",
                    "params.Path",
                    "int",
                    "Any",
                    "Union[int, float, None]",
                    "Union[float, int]",
                    "Optional[int]",
                    "Optional[float]",
                    "Union[int, float]"
                ],
                "max_length": [
                    "int"
                ],
                "min_length": [],
                "gt": [
                    "gt",
                    "params.Path",
                    "Union[int, float]",
                    "Any",
                    "Optional[int]",
                    "Union[int, float, None]"
                ],
                "multiple_of": [
                    "float",
                    "typing.Union[int, float]",
                    "Optional[Union[int, float]]",
                    "Union[int, float]",
                    "int",
                    "typing.Any",
                    "Union[float, int]",
                    "Optional"
                ],
                "pattern": [],
                "openapi_examples": [
                    "List",
                    "Dict",
                    "Optional[List]",
                    "Optional[Dict]",
                    "params.Path",
                    "JsonData",
                    "Any"
                ],
                "regex": [
                    "str"
                ],
                "default_factory": [],
                "include_in_schema": [
                    "bool"
                ],
                "serialization_alias": [],
                "json_schema_extra": [
                    "Union[Dict, Callable]",
                    "Optional[Union[Dict, Callable]]",
                    "Optional[Dict]",
                    "Union[Dict, Callable[..., Dict]]",
                    "typing.Any",
                    "Optional[Callable]"
                ],
                "strict": [
                    "bool"
                ],
                "validation_alias": [
                    "str"
                ],
                "title": [
                    "str"
                ],
                "example": [],
                "examples": [],
                "decimal_places": [
                    "int"
                ]
            },
            "Query": {
                "allow_inf_nan": [
                    "bool"
                ],
                "alias": [],
                "return": [
                    "params.Query",
                    "Any",
                    "Query"
                ],
                "alias_priority": [
                    "Optional[int]",
                    "int",
                    "Optional[Union[int, float]]",
                    "Any",
                    "Union[int, Any]",
                    "float"
                ],
                "default": [],
                "description": [
                    "str"
                ],
                "example": [
                    "Any"
                ],
                "decimal_places": [],
                "discriminator": [
                    "str",
                    "Dict[str, str]",
                    "Union[str, Dict[str, str]]",
                    "typing.Callable",
                    "Enum",
                    "Optional[str]",
                    "Union",
                    "Optional[Callable]",
                    "Callable",
                    "Dict",
                    "discriminator"
                ],
                "default_factory": [],
                "gt": [
                    "gt",
                    "Union[int, float]",
                    "None",
                    "params.Query",
                    "float"
                ],
                "examples": [
                    "Optional[List]",
                    "List",
                    "typing.Any",
                    "Dict",
                    "Optional[Dict[str, Any]]",
                    "Optional[Any]",
                    "typing.Sequence",
                    "Any",
                    "Optional[Union[List[Any], Dict[str, Any]]]",
                    "List[Any]"
                ],
                "extra": [
                    "Dict[str, Any]"
                ],
                "max_length": [
                    "int"
                ],
                "min_length": [
                    "int"
                ],
                "le": [],
                "lt": [
                    "lt",
                    "Union[int, float]",
                    "Union[int, float, None]",
                    "Any",
                    "float",
                    "None",
                    "le",
                    "Optional[int]"
                ],
                "max_digits": [
                    "int"
                ],
                "ge": [
                    "ge",
                    "Union[int, float]",
                    "Union[int, float, None]",
                    "None",
                    "float",
                    "Any",
                    "params.Query"
                ],
                "openapi_examples": [],
                "title": [
                    "str"
                ],
                "validation_alias": [
                    "str",
                    "Optional[str]"
                ],
                "pattern": [],
                "multiple_of": [
                    "float",
                    "Optional[Union[int, float]]",
                    "Union[int, float]",
                    "typing.Union[int, float]",
                    "params.Query",
                    "Union[float, int]",
                    "Optional",
                    "int",
                    "Any",
                    "typing.Any"
                ],
                "regex": [
                    "str"
                ],
                "serialization_alias": [
                    "str",
                    "Optional[str]"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "json_schema_extra": [],
                "strict": [
                    "bool"
                ],
                "deprecated": [
                    "bool"
                ]
            },
            "Security": {
                "dependency": [
                    "Optional[Dependency]",
                    "Optional[Any]"
                ],
                "scopes": [
                    "typing.Optional[list]",
                    "typing.Optional[typing.Any]",
                    "typing.Optional[typing.List[str]]",
                    "typing.Any",
                    "typing.Optional[typing.Union[list, set]]",
                    "Optional[List[str]]"
                ],
                "use_cache": [],
                "return": []
            },
            "global": {
                "_Unset": [
                    "Undefined"
                ]
            }
        }
    },
    "fastapi.params": {
        "Body": {
            "__init__": {
                "alias": [],
                "allow_inf_nan": [
                    "bool"
                ],
                "alias_priority": [],
                "description": [],
                "example": [
                    "Any",
                    "Optional[Any]"
                ],
                "default_factory": [
                    "typing.Callable",
                    "typing.Any"
                ],
                "extra": [
                    "typing.Dict[str, typing.Any]",
                    "Dict[str, Any]"
                ],
                "annotation": [
                    "typing.Any",
                    "typing.Optional[typing.Any]",
                    "Optional[typing.Any]",
                    "annotation"
                ],
                "embed": [],
                "examples": [
                    "typing.Any",
                    "typing.Optional[typing.Any]",
                    "typing.Optional[typing.Dict]"
                ],
                "discriminator": [],
                "default": [
                    "Undefined",
                    "typing.Union[Undefined, Any]",
                    "Any",
                    "kwargs",
                    "default",
                    "typing.Any",
                    "None"
                ],
                "json_schema_extra": [
                    "typing.Optional[dict]"
                ],
                "ge": [],
                "max_digits": [
                    "int",
                    "typing.Union[int, None]"
                ],
                "lt": [],
                "gt": [],
                "le": [],
                "max_length": [],
                "include_in_schema": [],
                "openapi_examples": [
                    "typing.Optional[dict]",
                    "typing.Any"
                ],
                "min_length": [
                    "int"
                ],
                "pattern": [
                    "typing.Optional[str]",
                    "typing.Any",
                    "typing.Optional[typing.Any]"
                ],
                "serialization_alias": [],
                "regex": [],
                "title": [],
                "multiple_of": [
                    "Union[int, float, None]",
                    "typing.Union[int, float, None]",
                    "typing.Union[int,float,None]",
                    "typing.Union[int, float,None]"
                ],
                "validation_alias": [
                    "typing.Any",
                    "typing.Optional[typing.Any]",
                    "None",
                    "typing.Optional[str]",
                    "Optional[str]"
                ],
                "decimal_places": [
                    "int"
                ],
                "deprecated": [
                    "typing.Any",
                    "typing.Optional[typing.Any]",
                    "typing.Optional[bool]"
                ],
                "strict": [
                    "strict",
                    "typing.Any",
                    "bool",
                    "typing.Optional[bool]",
                    "None",
                    "Undefined"
                ],
                "media_type": []
            },
            "__repr__": {
                "return": []
            }
        },
        "Cookie": {
            "__init__": {
                "alias": [
                    "str",
                    "typing.Optional[str]"
                ],
                "allow_inf_nan": [],
                "decimal_places": [],
                "default": [
                    "Any",
                    "typing.Any"
                ],
                "annotation": [
                    "typing.Optional[typing.Any]",
                    "typing.Any"
                ],
                "discriminator": [
                    "typing.Union[str, None]"
                ],
                "default_factory": [],
                "example": [
                    "typing.Any",
                    "Any",
                    "example"
                ],
                "examples": [
                    "typing.Optional[typing.List[typing.Any]]"
                ],
                "include_in_schema": [],
                "deprecated": [
                    "bool"
                ],
                "gt": [],
                "description": [
                    "str"
                ],
                "json_schema_extra": [
                    "typing.Dict",
                    "Optional[Union[Dict, Callable]]",
                    "Union[Dict, Callable]",
                    "Dict",
                    "typing.Optional[typing.Dict]",
                    "Optional[Callable]",
                    "typing.Dict[str, Any]",
                    "Dict[str, Any]"
                ],
                "ge": [
                    "typing.Union[int, float, None]",
                    "ge",
                    "typing.Any",
                    "Union[int, float, None]",
                    "Any"
                ],
                "max_digits": [],
                "min_length": [
                    "int"
                ],
                "lt": [
                    "typing.Union[int, float, None]",
                    "lt",
                    "typing.Any",
                    "Union[int, float, None]",
                    "typing.Union[int, float,None]",
                    "None"
                ],
                "le": [
                    "le",
                    "None",
                    "typing.Union[int, float, None]"
                ],
                "extra": [],
                "max_length": [],
                "openapi_examples": [
                    "Optional[Dict[str, Any]]",
                    "Optional[Dict]",
                    "Optional[List]",
                    "Dict",
                    "None",
                    "List",
                    "Optional"
                ],
                "title": [
                    "str"
                ],
                "multiple_of": [],
                "validation_alias": [
                    "str",
                    "typing.Optional[str]"
                ],
                "pattern": [
                    "typing.Union[str, None]",
                    "str"
                ],
                "regex": [
                    "typing.Union[str, None]"
                ],
                "strict": [
                    "bool"
                ],
                "alias_priority": [
                    "typing.Any",
                    "int",
                    "typing.Union[int, typing.Any]",
                    "typing.Optional[int]"
                ],
                "serialization_alias": [
                    "str",
                    "typing.Optional[str]"
                ]
            }
        },
        "Depends": {
            "__init__": {
                "dependency": [
                    "dependency",
                    "None",
                    "Dependency"
                ],
                "use_cache": [
                    "bool"
                ]
            },
            "__repr__": {
                "return": []
            }
        },
        "File": {
            "__init__": {
                "allow_inf_nan": [
                    "bool"
                ],
                "default": [],
                "alias": [],
                "annotation": [],
                "default_factory": [
                    "typing.Callable",
                    "typing.Any",
                    "typing.Union[typing.Callable, typing.Any]"
                ],
                "deprecated": [],
                "alias_priority": [],
                "ge": [
                    "ge",
                    "typing.Any",
                    "None",
                    "typing.Optional[int]",
                    "typing.Union[int, float, None]",
                    "typing.Optional[typing.Union[int, float]]",
                    "le",
                    "float"
                ],
                "gt": [
                    "gt",
                    "None",
                    "typing.Any",
                    "float",
                    "typing.Union[int, float, None]",
                    "typing.Optional[typing.Union[int, float]]"
                ],
                "description": [
                    "str"
                ],
                "json_schema_extra": [
                    "typing.Dict",
                    "typing.Dict[str, typing.Any]",
                    "typing.Optional[typing.Union[typing.Dict, typing.Callable]]",
                    "typing.Optional[typing.Dict]",
                    "typing.Union[typing.Dict, typing.Callable]",
                    "typing.Any"
                ],
                "max_length": [],
                "discriminator": [
                    "typing.Optional[str]",
                    "typing.Any",
                    "typing.Optional[typing.Union[str, typing.Callable]]",
                    "typing.Union[str, None]"
                ],
                "decimal_places": [],
                "le": [
                    "le",
                    "typing.Any",
                    "None",
                    "typing.Union[int, float, None]",
                    "float",
                    "int"
                ],
                "media_type": [],
                "max_digits": [
                    "int"
                ],
                "min_length": [
                    "int",
                    "typing.Optional[int]",
                    "Optional[int]"
                ],
                "example": [
                    "typing.Any"
                ],
                "multiple_of": [],
                "pattern": [
                    "str"
                ],
                "openapi_examples": [
                    "typing.Optional[typing.Dict[str, typing.Any]]",
                    "typing.Optional[typing.Dict]",
                    "typing.Any",
                    "typing.Dict"
                ],
                "examples": [
                    "typing.Optional[typing.List[typing.Any]]",
                    "typing.Optional[typing.Any]",
                    "Optional[typing.Any]",
                    "typing.Any",
                    "typing.Optional[typing.Union[list, dict]]",
                    "Optional[List[Any]]",
                    "Optional[List[Dict[str, Any]]]",
                    "None",
                    "typing.Optional[typing.List[typing.Dict[str, typing.Any]]]",
                    "typing.List[typing.Any]",
                    "typing.List[typing.Dict[str, typing.Any]]"
                ],
                "extra": [
                    "Dict[str, typing.Any]",
                    "dict",
                    "typing.Dict[str, typing.Any]",
                    "Dict[str, Any]"
                ],
                "strict": [],
                "regex": [],
                "title": [],
                "serialization_alias": [],
                "validation_alias": [],
                "lt": [],
                "include_in_schema": [
                    "bool"
                ]
            }
        },
        "Form": {
            "__init__": {
                "alias": [
                    "Optional[str]",
                    "None"
                ],
                "default": [
                    "Undefined",
                    "typing.Any"
                ],
                "annotation": [],
                "decimal_places": [
                    "int",
                    "typing.Optional[int]"
                ],
                "deprecated": [
                    "bool"
                ],
                "default_factory": [],
                "allow_inf_nan": [
                    "bool"
                ],
                "alias_priority": [
                    "typing.Any",
                    "int"
                ],
                "description": [
                    "str"
                ],
                "discriminator": [
                    "typing.Optional[str]",
                    "typing.Union[str, None]",
                    "typing.Union[str, typing.Dict[str, str]]",
                    "typing.Union"
                ],
                "example": [
                    "typing.Any"
                ],
                "examples": [
                    "typing.Optional[typing.List[typing.Any]]",
                    "typing.Optional[typing.Any]",
                    "typing.Any",
                    "Optional[List[Dict[str, Any]]]",
                    "typing.List[typing.Any]",
                    "Optional[List[Any]]",
                    "typing.Union[typing.List[typing.Any], typing.Dict[str, typing.Any], None]",
                    "None",
                    "typing.Optional[typing.Union[list, dict]]",
                    "typing.Union[typing.List[typing.Any], typing.Dict[typing.Any, typing.Any], None]"
                ],
                "ge": [
                    "ge",
                    "typing.Any",
                    "None",
                    "typing.Union[int, float, None]",
                    "typing.Optional[int]",
                    "float"
                ],
                "max_digits": [],
                "include_in_schema": [
                    "bool"
                ],
                "media_type": [],
                "lt": [
                    "lt",
                    "typing.Any",
                    "None",
                    "typing.Union[int, float]",
                    "typing.Union[int, float, None]",
                    "float",
                    "ge"
                ],
                "multiple_of": [],
                "pattern": [],
                "openapi_examples": [
                    "typing.Optional[typing.Dict[str, typing.Any]]",
                    "typing.Optional[typing.Dict]",
                    "typing.Any",
                    "typing.Optional[typing.List[typing.Any]]"
                ],
                "min_length": [
                    "int",
                    "typing.Optional[int]"
                ],
                "strict": [
                    "bool"
                ],
                "regex": [],
                "serialization_alias": [],
                "title": [],
                "le": [],
                "validation_alias": [],
                "extra": [
                    "Dict[str, typing.Any]",
                    "typing.Dict[str, typing.Any]",
                    "dict",
                    "Dict[str, Any]"
                ],
                "max_length": [
                    "int",
                    "typing.Optional[int]"
                ],
                "json_schema_extra": [],
                "gt": [
                    "gt",
                    "typing.Any",
                    "None",
                    "typing.Union[int, float, None]",
                    "typing.Optional[typing.Union[int, float]]",
                    "float"
                ]
            }
        },
        "Header": {
            "__init__": {
                "allow_inf_nan": [
                    "bool"
                ],
                "convert_underscores": [
                    "bool"
                ],
                "annotation": [
                    "typing.Optional[typing.Any]"
                ],
                "alias_priority": [],
                "decimal_places": [],
                "discriminator": [
                    "typing.Union[str, None]"
                ],
                "example": [],
                "extra": [],
                "default_factory": [],
                "examples": [
                    "typing.Optional[typing.List[typing.Any]]",
                    "examples"
                ],
                "gt": [
                    "typing.Union[int, float, None]",
                    "gt",
                    "None",
                    "float",
                    "int",
                    "typing.Any"
                ],
                "json_schema_extra": [
                    "typing.Optional[typing.Dict]",
                    "typing.Dict",
                    "Dict",
                    "Union[Dict, Callable]",
                    "Optional[Dict]",
                    "Dict[str, Any]",
                    "typing.Any",
                    "Union[Dict, Callable[[], Dict]]",
                    "dict"
                ],
                "le": [],
                "max_digits": [
                    "int"
                ],
                "deprecated": [],
                "lt": [],
                "max_length": [
                    "int"
                ],
                "multiple_of": [
                    "float",
                    "Optional[Union[int, float]]",
                    "Any",
                    "Optional"
                ],
                "regex": [
                    "typing.Union[str, None]"
                ],
                "include_in_schema": [],
                "serialization_alias": [
                    "str"
                ],
                "min_length": [
                    "int"
                ],
                "strict": [],
                "default": [],
                "title": [
                    "str",
                    "typing.Optional[str]"
                ],
                "validation_alias": [
                    "str",
                    "typing.Optional[str]"
                ],
                "description": [],
                "openapi_examples": [
                    "Optional[Dict[str, Any]]",
                    "Any",
                    "Optional[JsonData]"
                ],
                "pattern": [
                    "typing.Union[str, None]",
                    "str"
                ],
                "alias": [],
                "ge": []
            }
        },
        "Param": {
            "__init__": {
                "alias": [],
                "allow_inf_nan": [
                    "bool"
                ],
                "alias_priority": [],
                "decimal_places": [],
                "default_factory": [],
                "annotation": [
                    "typing.Any",
                    "typing.Optional[typing.Any]",
                    "annotation",
                    "None",
                    "int",
                    "typing.Optional[typing.Type]"
                ],
                "discriminator": [
                    "typing.Union[str, None]",
                    "str"
                ],
                "example": [
                    "Any",
                    "typing.Any"
                ],
                "description": [
                    "str"
                ],
                "examples": [
                    "typing.Optional[typing.List[typing.Any]]",
                    "typing.Any",
                    "typing.Optional[typing.Sequence[typing.Any]]",
                    "typing.Optional[typing.Union[typing.List[typing.Any], typing.Dict[str, typing.Any]]]",
                    "typing.Optional[typing.Union[list, dict]]",
                    "typing.Optional[typing.List[typing.Dict[str, typing.Any]]]"
                ],
                "gt": [
                    "typing.Union[int, float, None]"
                ],
                "deprecated": [
                    "bool",
                    "typing.Optional[bool]"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "extra": [
                    "typing.Dict[str, typing.Any]"
                ],
                "ge": [
                    "typing.Union[int, float, None]"
                ],
                "json_schema_extra": [
                    "typing.Optional[dict]"
                ],
                "max_length": [
                    "typing.Optional[int]",
                    "typing.Union[int,None]"
                ],
                "lt": [
                    "typing.Union[int, float, None]",
                    "typing.Any",
                    "Optional[Union[int, float]]",
                    "lt",
                    "None",
                    "Union[int, float, None]",
                    "Any"
                ],
                "le": [
                    "typing.Union[int, float, None]",
                    "typing.Any",
                    "le",
                    "Union[int, float, None]",
                    "float"
                ],
                "min_length": [
                    "int",
                    "typing.Optional[int]"
                ],
                "title": [
                    "str",
                    "typing.Optional[str]"
                ],
                "max_digits": [],
                "validation_alias": [
                    "typing.Any",
                    "typing.Optional[typing.Any]",
                    "None"
                ],
                "openapi_examples": [
                    "typing.Optional[dict]",
                    "typing.Optional[list]",
                    "typing.Any"
                ],
                "strict": [],
                "regex": [
                    "typing.Optional[str]"
                ],
                "multiple_of": [],
                "serialization_alias": [],
                "default": [],
                "pattern": [
                    "typing.Optional[str]",
                    "or",
                    "pattern",
                    "regex",
                    "None"
                ]
            },
            "__repr__": {
                "return": []
            },
            "global": {
                "in_": []
            }
        },
        "Path": {
            "__init__": {
                "alias": [
                    "str"
                ],
                "allow_inf_nan": [
                    "bool"
                ],
                "alias_priority": [],
                "default_factory": [],
                "default": [
                    "typing.Any"
                ],
                "description": [
                    "str"
                ],
                "discriminator": [],
                "example": [
                    "typing.Any",
                    "example"
                ],
                "examples": [
                    "typing.Optional[typing.List[typing.Any]]"
                ],
                "decimal_places": [],
                "extra": [
                    "Dict[str, Any]",
                    "typing.Dict[str, typing.Any]"
                ],
                "annotation": [],
                "max_digits": [
                    "int"
                ],
                "json_schema_extra": [
                    "Dict",
                    "Optional[Dict]",
                    "typing.Dict",
                    "Dict[str, Any]",
                    "typing.Optional[typing.Dict]",
                    "Optional[Union[Dict, Callable]]",
                    "Union[Dict, Callable]",
                    "Optional[Callable]",
                    "typing.Any"
                ],
                "ge": [
                    "typing.Union[int, float, None]",
                    "ge",
                    "None",
                    "typing.Any"
                ],
                "max_length": [],
                "lt": [],
                "include_in_schema": [
                    "bool"
                ],
                "pattern": [
                    "typing.Union[str, None]"
                ],
                "min_length": [
                    "int"
                ],
                "gt": [
                    "typing.Union[int, float, None]",
                    "gt",
                    "typing.Any",
                    "float",
                    "None",
                    "int"
                ],
                "multiple_of": [
                    "float",
                    "Optional[Union[int, float]]",
                    "Union[int, float]",
                    "int",
                    "Optional",
                    "Any"
                ],
                "regex": [
                    "typing.Union[str, None]"
                ],
                "strict": [
                    "bool"
                ],
                "validation_alias": [
                    "str",
                    "typing.Optional[str]"
                ],
                "le": [],
                "serialization_alias": [
                    "str",
                    "typing.Optional[str]"
                ],
                "title": [
                    "str"
                ],
                "deprecated": [
                    "bool"
                ],
                "openapi_examples": [
                    "Optional[List]",
                    "Optional[Dict]",
                    "Optional[Dict[str, Any]]",
                    "None",
                    "Dict"
                ]
            }
        },
        "Query": {
            "__init__": {
                "alias": [
                    "str",
                    "typing.Optional[str]"
                ],
                "alias_priority": [
                    "typing.Any",
                    "int",
                    "typing.Optional[int]",
                    "typing.Union[int, float, typing.Any]",
                    "typing.Union[int, float]"
                ],
                "decimal_places": [],
                "annotation": [],
                "allow_inf_nan": [
                    "bool"
                ],
                "deprecated": [],
                "default_factory": [
                    "typing.Callable"
                ],
                "example": [],
                "examples": [],
                "gt": [
                    "typing.Union[int, float, None]",
                    "gt",
                    "None",
                    "typing.Any",
                    "float"
                ],
                "ge": [
                    "typing.Union[int, float, None]",
                    "typing.Any",
                    "ge",
                    "Optional[Union[int, float]]",
                    "Union[int, float, None]"
                ],
                "include_in_schema": [],
                "json_schema_extra": [
                    "typing.Dict",
                    "Union[Dict, Callable]",
                    "typing.Optional[typing.Dict]",
                    "Optional[Union[Dict, Callable]]",
                    "Dict",
                    "Optional[Dict]",
                    "typing.Any"
                ],
                "max_length": [],
                "default": [],
                "le": [],
                "max_digits": [],
                "lt": [
                    "typing.Union[int, float, None]",
                    "typing.Any",
                    "lt",
                    "Union[int, float, None]",
                    "None"
                ],
                "min_length": [
                    "int"
                ],
                "multiple_of": [
                    "float",
                    "Optional[Union[int, float]]",
                    "Optional"
                ],
                "openapi_examples": [
                    "Optional[Dict[str, Any]]",
                    "typing.Dict"
                ],
                "strict": [
                    "bool"
                ],
                "extra": [],
                "regex": [
                    "typing.Union[str, None]"
                ],
                "pattern": [],
                "serialization_alias": [
                    "str",
                    "typing.Optional[str]"
                ],
                "validation_alias": [],
                "description": [
                    "str",
                    "typing.Optional[str]"
                ],
                "discriminator": [
                    "typing.Union[str, None]"
                ],
                "title": []
            }
        },
        "Security": {
            "__init__": {
                "scopes": [
                    "typing.Optional[typing.List[typing.Any]]",
                    "typing.Optional[typing.Any]",
                    "typing.Optional[list]"
                ],
                "dependency": [],
                "use_cache": [
                    "bool"
                ]
            }
        },
        "global": {
            "global": {
                "_Unset": []
            }
        }
    },
    "fastapi.responses": {
        "ORJSONResponse": {
            "render": {
                "content": [
                    "Union[dict, numpy.ndarray]",
                    "dict",
                    "Union[Dict[Any, Any], numpy.ndarray]"
                ],
                "return": [
                    "str"
                ]
            }
        },
        "UJSONResponse": {
            "render": {
                "return": [
                    "bytes"
                ],
                "content": [
                    "Any",
                    "str",
                    "content"
                ]
            }
        }
    },
    "fastapi.routing": {
        "APIRoute": {
            "__init__": {
                "dependency_overrides_provider": [
                    "Any"
                ],
                "deprecated": [
                    "bool",
                    "Optional[bool]"
                ],
                "description": [],
                "return": [
                    "None"
                ],
                "callbacks": [
                    "typing.Optional[list]",
                    "typing.Optional[list[typing.Any]]",
                    "typing.Optional[typing.List[typing.Any]]"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "generate_unique_id_function": [
                    "typing.Callable",
                    "typing.Union[typing.Callable, DefaultPlaceholder]",
                    "typing.Callable[..., str]"
                ],
                "endpoint": [
                    "Callable",
                    "method",
                    "Any",
                    "callable",
                    "call"
                ],
                "name": [
                    "Optional[str]",
                    "typing.Optional[str]"
                ],
                "methods": [
                    "typing.Optional[typing.List[str]]",
                    "typing.Optional[typing.Set[str]]",
                    "self.methods"
                ],
                "openapi_extra": [
                    "typing.Optional[dict]",
                    "typing.Any"
                ],
                "response_description": [
                    "str"
                ],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model": [
                    "typing.Union[typing.Any, DefaultPlaceholder]",
                    "typing.Union[typing.Any, None]",
                    "typing.Union[typing.Any, fastapi.utils.DefaultPlaceholder]"
                ],
                "response_class": [],
                "operation_id": [
                    "Optional[str]",
                    "str"
                ],
                "path": [
                    "str"
                ],
                "response_model_exclude_unset": [],
                "response_model_exclude": [
                    "Optional[Union[Set, List]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Any",
                    "Optional[Union[Set, List, Dict]]",
                    "Optional[Any]"
                ],
                "status_code": [
                    "Optional[int]",
                    "Optional[Union[int, IntEnum]]",
                    "Optional[Union[IntEnum, int]]",
                    "Union[IntEnum, int]"
                ],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "response_model_exclude_none": [
                    "bool"
                ],
                "responses": [
                    "Optional[Dict]",
                    "Dict"
                ],
                "response_model_include": [],
                "summary": [
                    "Optional[str]",
                    "str"
                ],
                "tags": [],
                "dependencies": [
                    "typing.Optional[typing.List[typing.Any]]",
                    "typing.Optional[typing.Iterable[typing.Any]]"
                ]
            },
            "get_route_handler": {
                "return": []
            },
            "matches": {
                "return": [
                    "tuple[typing.Any, typing.Any]"
                ],
                "scope": [
                    "dict"
                ]
            }
        },
        "APIRouter": {
            "__init__": {
                "callbacks": [
                    "list",
                    "list[typing.Callable]"
                ],
                "return": [
                    "None"
                ],
                "default": [],
                "deprecated": [
                    "typing.Optional[bool]"
                ],
                "default_response_class": [
                    "typing.Any",
                    "JSONResponse",
                    "typing.Callable[..., typing.Any]",
                    "typing.Type[JSONResponse]",
                    "typing.Type[fastapi.responses.JSONResponse]",
                    "typing.Union[typing.Type[JSONResponse], typing.Any]",
                    "typing.Callable[[], typing.Any]",
                    "Default",
                    "typing.Union[typing.Type[JSONResponse], Default]",
                    "typing.Callable[[], typing.Type[JSONResponse]]",
                    "typing.Union[typing.Type[JSONResponse], typing.Callable[..., JSONResponse]]"
                ],
                "dependencies": [
                    "self.dependencies",
                    "typing.Optional[list]",
                    "typing.Optional[typing.Iterable[typing.Any]]",
                    "None",
                    "typing.Optional[list[typing.Any]]"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "generate_unique_id_function": [],
                "on_shutdown": [],
                "dependency_overrides_provider": [
                    "typing.Any"
                ],
                "redirect_slashes": [
                    "bool"
                ],
                "on_startup": [],
                "prefix": [
                    "str"
                ],
                "responses": [],
                "routes": [],
                "lifespan": [],
                "tags": [
                    "tags"
                ],
                "route_class": []
            },
            "add_api_route": {
                "callbacks": [],
                "deprecated": [
                    "Optional[bool]"
                ],
                "return": [
                    "None"
                ],
                "dependencies": [],
                "generate_unique_id_function": [],
                "description": [],
                "include_in_schema": [],
                "endpoint": [],
                "operation_id": [],
                "methods": [
                    "Optional[List[str]]"
                ],
                "name": [
                    "Optional[str]",
                    "None",
                    "typing.Any",
                    "typing.Optional[str]"
                ],
                "response_description": [
                    "str"
                ],
                "response_class": [],
                "path": [
                    "str"
                ],
                "openapi_extra": [
                    "typing.Any",
                    "typing.Optional[typing.Dict[str, typing.Any]]",
                    "typing.Optional[dict]",
                    "typing.Optional[typing.Any]"
                ],
                "response_model_exclude_none": [],
                "responses": [
                    "typing.Optional[dict[str, typing.Any]]"
                ],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "response_model_include": [
                    "typing.Optional[typing.Union[typing.Set[typing.Union[str, typing.Pattern]], typing.List[typing.Union[str, typing.Pattern]]]]",
                    "typing.Optional[typing.Union[set, frozenset]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[SetIntStr, DictIntStrAny]]"
                ],
                "response_model_by_alias": [],
                "status_code": [
                    "Optional[int]",
                    "None"
                ],
                "route_class_override": [
                    "typing.Optional[typing.Type[fastapi.routing.APIRoute]]",
                    "None",
                    "APIRoute",
                    "typing.Optional[typing.Type]",
                    "fastapi.routing.APIRoute",
                    "typing.Type[Route]",
                    "typing.Optional[typing.Type[APIRoute]]",
                    "typing.Optional[typing.Any]",
                    "or",
                    "typing.Type[fastapi.routing.APIRoute]"
                ],
                "tags": [],
                "summary": [],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "response_model_exclude": [],
                "response_model": [
                    "Optional[Type[Any]]",
                    "None"
                ]
            },
            "add_api_websocket_route": {
                "return": [
                    "None"
                ],
                "dependencies": [
                    "typing.Optional[typing.Iterable[typing.Any]]",
                    "typing.Optional[list[typing.Any]]"
                ],
                "name": [],
                "path": [
                    "str"
                ],
                "endpoint": []
            },
            "api_route": {
                "return": [
                    "function"
                ],
                "deprecated": [
                    "bool"
                ],
                "dependencies": [
                    "Optional[List[Depends]]",
                    "List[Depends]",
                    "Optional",
                    "None",
                    "Depends"
                ],
                "callbacks": [
                    "Optional[List[Callable]]",
                    "Optional[List[Any]]",
                    "Callable",
                    "List",
                    "List[Callable]",
                    "Optional[Dict[str, Callable]]",
                    "Optional[Union[List[Callable], Dict[str, Callable]]]"
                ],
                "description": [],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "response_description": [
                    "str"
                ],
                "response_class": [
                    "Default[Type[JSONResponse]]",
                    "Default[JSONResponse]",
                    "JSONResponse"
                ],
                "openapi_extra": [],
                "name": [
                    "str",
                    "Optional[str]"
                ],
                "path": [
                    "str"
                ],
                "response_model": [
                    "Optional[Type[Any]]",
                    "Optional[Any]",
                    "Default",
                    "Any"
                ],
                "response_model_by_alias": [],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "methods": [],
                "operation_id": [],
                "status_code": [
                    "Optional[int]"
                ],
                "response_model_exclude_none": [
                    "bool"
                ],
                "summary": [
                    "str",
                    "Optional[str]"
                ],
                "response_model_include": [
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[Set, List]]",
                    "Optional[Dict]",
                    "Optional[Set[str]]",
                    "List",
                    "Optional[List[str]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]"
                ],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "responses": [
                    "Dict",
                    "Optional[Dict]",
                    "responses"
                ],
                "response_model_exclude": [],
                "tags": []
            },
            "delete": {
                "dependencies": [],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "callbacks": [
                    "Optional[List[fastapi.routing.APIRoute]]",
                    "Optional[List[Callable]]",
                    "Optional[List[BaseRoute]]",
                    "callbacks",
                    "Optional[Dict[str, Callable]]",
                    "Route",
                    "None"
                ],
                "name": [],
                "include_in_schema": [],
                "description": [],
                "deprecated": [],
                "response_description": [],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model": [
                    "Default",
                    "Optional[Type[Any]]",
                    "Union[Type[Any], Default]",
                    "typing.Optional[typing.Type[typing.Any]]",
                    "typing.Optional[typing.Any]",
                    "typing.Union[typing.Type[typing.Any], None]"
                ],
                "response_class": [],
                "response_model_exclude": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[Set[str], Dict[str, Any]]]",
                    "Optional[Union[Set[Union[str, int]], Mapping[Union[str, int], Any]]]",
                    "Optional[Union[str, List[str]]]",
                    "Optional[Set[str]]",
                    "List"
                ],
                "path": [
                    "str",
                    "Any",
                    "path"
                ],
                "openapi_extra": [
                    "Optional[Dict[str, Any]]",
                    "Any",
                    "Optional[Dict]",
                    "self"
                ],
                "response_model_exclude_none": [
                    "bool"
                ],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "response_model_exclude_defaults": [],
                "response_model_include": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Any]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Any, Any]]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], str, int]]"
                ],
                "operation_id": [],
                "tags": [],
                "status_code": [
                    "Optional[int]"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "responses",
                    "Optional[Dict]",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], List[Dict[str, Any]]]]",
                    "Any"
                ],
                "summary": [
                    "Optional[str]",
                    "None",
                    "summary"
                ],
                "return": []
            },
            "get": {
                "dependencies": [
                    "Optional[List[Depends]]",
                    "dependencies",
                    "None",
                    "Depends"
                ],
                "deprecated": [
                    "Optional[bool]",
                    "bool"
                ],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "description": [],
                "openapi_extra": [
                    "Optional[Dict[str, Any]]",
                    "Optional[Dict]",
                    "Any",
                    "None"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "name": [
                    "Optional[str]",
                    "str"
                ],
                "operation_id": [
                    "Optional[str]",
                    "str",
                    "Any",
                    "None"
                ],
                "response_class": [
                    "Default[Type[JSONResponse]]",
                    "Default[JSONResponse]",
                    "Default[Type[Response]]"
                ],
                "response_description": [
                    "str"
                ],
                "callbacks": [
                    "Optional[List[BaseRoute]]",
                    "Optional[List[Callable]]",
                    "Optional[List[fastapi.routing.APIRoute]]",
                    "callbacks",
                    "Optional[List[Any]]"
                ],
                "return": [],
                "path": [],
                "response_model": [
                    "Optional[Type[Any]]"
                ],
                "response_model_exclude": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[str, List[str]]]",
                    "Optional[Union[Set[Union[int, str]], List[Union[int, str]]]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Set[str]]"
                ],
                "response_model_exclude_defaults": [],
                "responses": [],
                "summary": [],
                "response_model_exclude_none": [],
                "tags": [
                    "Optional[List[str]]",
                    "None",
                    "List[str]",
                    "tags"
                ],
                "response_model_exclude_unset": [],
                "status_code": [],
                "response_model_include": [
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Any]",
                    "Optional[Union[Set[str], Dict[str, Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], str, int]]",
                    "Optional[Union[Set, List]]"
                ],
                "response_model_by_alias": []
            },
            "head": {
                "description": [],
                "deprecated": [
                    "Optional[bool]",
                    "bool",
                    "None",
                    "Any"
                ],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "name": [
                    "Optional[str]"
                ],
                "include_in_schema": [],
                "callbacks": [],
                "operation_id": [],
                "response_description": [
                    "str"
                ],
                "response_class": [],
                "dependencies": [],
                "path": [],
                "response_model": [
                    "Default",
                    "Optional[Type[Any]]"
                ],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude_defaults": [],
                "response_model_exclude": [],
                "return": [],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "status_code": [],
                "summary": [
                    "Optional[str]",
                    "None"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "responses",
                    "None",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], List[Dict[str, Any]]]]",
                    "Optional[Dict]",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], List[Any]]]"
                ],
                "response_model_include": [],
                "tags": [],
                "openapi_extra": [],
                "response_model_exclude_none": [
                    "bool"
                ]
            },
            "include_router": {
                "callbacks": [],
                "dependencies": [],
                "default_response_class": [
                    "Type[Response]",
                    "Default[Type[JSONResponse]]",
                    "typing.Any",
                    "typing.Type[Response]",
                    "Default",
                    "Default[Type[Response]]",
                    "Type[Default[JSONResponse]]",
                    "Type",
                    "Type[JSONResponse]",
                    "Type[Default[Response]]",
                    "typing.Callable[..., Response]",
                    "Default[typing.Type[JSONResponse]]",
                    "Union[Default[Type[JSONResponse]], Type[JSONResponse]]"
                ],
                "deprecated": [
                    "bool",
                    "Optional[bool]"
                ],
                "generate_unique_id_function": [],
                "tags": [],
                "return": [
                    "None"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "router": [],
                "prefix": [
                    "str"
                ],
                "responses": [
                    "Optional[dict]",
                    "dict",
                    "Optional[Dict]"
                ]
            },
            "on_event": {
                "event_type": [
                    "str",
                    "Any"
                ],
                "return": [
                    "Callable",
                    "function",
                    "decorator",
                    "callable",
                    "func",
                    "Callable[..., Any]"
                ]
            },
            "options": {
                "callbacks": [
                    "Optional[List[Callable]]",
                    "Optional[List[Any]]",
                    "callbacks",
                    "Optional[List[BaseRoute]]",
                    "None",
                    "Optional[Dict[str, Callable]]"
                ],
                "dependencies": [],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "description": [
                    "Optional[str]",
                    "Any",
                    "str",
                    "None"
                ],
                "include_in_schema": [],
                "operation_id": [],
                "deprecated": [
                    "Optional[bool]",
                    "bool",
                    "Any"
                ],
                "name": [
                    "Optional[str]",
                    "Any",
                    "None",
                    "str"
                ],
                "path": [
                    "str"
                ],
                "return": [],
                "openapi_extra": [
                    "Any",
                    "Optional[Dict[str, Any]]",
                    "None"
                ],
                "response_model": [
                    "Optional[Type[Any]]",
                    "Optional[Any]"
                ],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Set[str]]",
                    "Optional[Union[str, List[str]]]",
                    "Union[Set[Union[str, Pattern]], None]",
                    "Union[Set[Union[str, int]], Set[str], Set[int], None]"
                ],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "response_description": [],
                "response_model_exclude_none": [],
                "status_code": [
                    "Optional[int]"
                ],
                "response_model_include": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Union[Set[str], Dict[str, Any], None]",
                    "Optional[Any]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[str, List[str]]]",
                    "Union[Set[str], Dict[int, Set[str]]]",
                    "Union[Set[str], Dict[str, Any]]",
                    "Optional[Union[Set[Union[str, int]], Mapping[Union[str, int], Any]]]"
                ],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "None",
                    "Dict",
                    "Optional[Dict]"
                ],
                "summary": [
                    "Optional[str]",
                    "None",
                    "Any"
                ],
                "tags": [],
                "response_class": []
            },
            "patch": {
                "callbacks": [
                    "Optional[List[Any]]",
                    "Optional[List[Callable]]",
                    "callbacks",
                    "None",
                    "Callable",
                    "Optional[List[fastapi.routing.APIRoute]]"
                ],
                "deprecated": [],
                "include_in_schema": [
                    "bool"
                ],
                "description": [],
                "name": [
                    "Optional[str]",
                    "name"
                ],
                "operation_id": [
                    "Optional[str]"
                ],
                "openapi_extra": [],
                "return": [],
                "path": [
                    "str",
                    "self",
                    "path"
                ],
                "response_class": [
                    "Default[Type[JSONResponse]]",
                    "Default[Type[Response]]"
                ],
                "response_description": [
                    "str"
                ],
                "response_model_exclude_defaults": [],
                "response_model_exclude": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[Set[Union[int, str]], List[Union[int, str]]]]",
                    "Optional[Union[str, List[str]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Any, Any]]]",
                    "Optional[Union[Any, Set[Any]]]",
                    "Optional[Union[Any]]",
                    "Optional[Union[Set[Union[str, int]], Set[str], Set[int]]]",
                    "Optional[Set[str]]",
                    "Optional[Union[Set[str], Dict[str, Any]]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[Set[Union[str, int]], Mapping[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[Set[Union[int, str]], List[Union[int, str]], Dict[Union[int, str], Any]]]"
                ],
                "response_model_exclude_unset": [],
                "response_model_exclude_none": [],
                "response_model_include": [
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Any]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Any, Any]]]",
                    "Optional[Union[SetUnion[str]]]",
                    "Optional[Union[Set[Union[str, ForwardRef]], List[Union[str, ForwardRef]], str]]",
                    "Optional",
                    "Optional[Union[Set[Union[str, ForwardRef]], List[Union[str, ForwardRef]], Dict[Union[str, ForwardRef], Any]]]"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "Optional[Dict]",
                    "None"
                ],
                "status_code": [
                    "Optional[int]"
                ],
                "tags": [],
                "summary": [
                    "Optional[str]",
                    "None"
                ],
                "generate_unique_id_function": [
                    "Callable"
                ],
                "dependencies": [
                    "Optional[List[Depends]]",
                    "dependencies",
                    "None",
                    "Optional[Any]",
                    "Depends"
                ],
                "response_model": [
                    "Default[Optional[Any]]",
                    "Default",
                    "Optional[Any]",
                    "None"
                ],
                "response_model_by_alias": [
                    "bool"
                ]
            },
            "post": {
                "dependencies": [
                    "Optional[List[Depends]]",
                    "Depends",
                    "dependencies",
                    "None"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "description": [],
                "generate_unique_id_function": [],
                "deprecated": [],
                "name": [
                    "Optional[str]",
                    "None",
                    "Any",
                    "str",
                    "name"
                ],
                "operation_id": [
                    "Optional[str]",
                    "Any",
                    "str",
                    "Optional[Any]"
                ],
                "response_class": [],
                "return": [],
                "response_description": [
                    "str"
                ],
                "response_model": [
                    "Default[None]",
                    "Optional[Any]",
                    "Default[Optional[Any]]",
                    "Default"
                ],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude_none": [
                    "bool"
                ],
                "response_model_exclude_defaults": [],
                "response_model_exclude": [],
                "response_model_exclude_unset": [],
                "status_code": [],
                "response_model_include": [
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], str, int]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Optional[Union[Set, List, Dict]]",
                    "Optional",
                    "Any",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Any, Any]]]",
                    "Optional[Union[Any]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], None]]",
                    "Optional[Union[Set, List]]",
                    "Optional[Union[Any, Set[Any]]]"
                ],
                "summary": [
                    "Optional[str]",
                    "Any"
                ],
                "responses": [],
                "tags": [],
                "openapi_extra": [
                    "Optional[Dict]",
                    "Any",
                    "Optional[Dict[str, Any]]"
                ],
                "callbacks": [
                    "Optional[List[Callable]]",
                    "Optional[List[BaseRoute]]",
                    "Route",
                    "Optional[Dict[str, Callable]]",
                    "Optional[List[Any]]",
                    "Optional[List[fastapi.routing.APIRoute]]",
                    "callbacks"
                ],
                "path": []
            },
            "put": {
                "callbacks": [
                    "Optional[List[Any]]",
                    "Optional[List[BaseRoute]]",
                    "Optional[List[fastapi.routing.APIRoute]]",
                    "callbacks",
                    "Optional[List[Callable]]",
                    "Route",
                    "Any"
                ],
                "deprecated": [
                    "Optional[bool]",
                    "bool",
                    "None",
                    "deprecated"
                ],
                "generate_unique_id_function": [],
                "description": [],
                "name": [],
                "openapi_extra": [
                    "Optional[Dict[str, Any]]",
                    "Any",
                    "None"
                ],
                "dependencies": [],
                "operation_id": [],
                "response_description": [
                    "str"
                ],
                "response_model": [
                    "Optional[Type[Any]]",
                    "Default",
                    "None"
                ],
                "response_model_by_alias": [
                    "bool"
                ],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "response_model_exclude_none": [],
                "path": [
                    "str"
                ],
                "status_code": [],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "None",
                    "Optional[Dict]",
                    "responses",
                    "Optional"
                ],
                "summary": [],
                "response_model_exclude": [],
                "return": [
                    "Callable"
                ],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "tags": [
                    "Optional[List[str]]",
                    "None",
                    "tags",
                    "Optional",
                    "List[str]"
                ],
                "response_model_include": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Optional[Any]",
                    "None",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Any, Any]]]",
                    "Optional[Union[str, List[str]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], str, int]]"
                ],
                "include_in_schema": [],
                "response_class": [
                    "Default[Type[JSONResponse]]",
                    "Default[JSONResponse]",
                    "Default[Type[Response]]",
                    "JSONResponse"
                ]
            },
            "route": {
                "methods": [],
                "name": [],
                "path": [
                    "str"
                ],
                "include_in_schema": [
                    "bool"
                ],
                "return": [
                    "typing.Callable"
                ]
            },
            "trace": {
                "deprecated": [
                    "Optional[bool]",
                    "bool"
                ],
                "callbacks": [],
                "description": [],
                "include_in_schema": [
                    "bool"
                ],
                "name": [
                    "Optional[str]",
                    "Any",
                    "str"
                ],
                "openapi_extra": [],
                "response_class": [
                    "Default[JSONResponse]",
                    "Default[Type[Response]]"
                ],
                "response_description": [
                    "str"
                ],
                "dependencies": [
                    "Optional[List[Depends]]",
                    "dependencies",
                    "None",
                    "Depends"
                ],
                "response_model": [
                    "Optional[Type[Any]]",
                    "Default",
                    "Union[Type[Any], Default]",
                    "Union[Type[Any], None]",
                    "typing.Optional[typing.Any]"
                ],
                "response_model_by_alias": [],
                "response_model_exclude_none": [
                    "bool"
                ],
                "response_model_exclude_defaults": [
                    "bool"
                ],
                "path": [],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "operation_id": [],
                "response_model_exclude": [],
                "response_model_include": [
                    "Optional[Union[SetIntStr, DictIntStrAny]]",
                    "Optional[Any]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]], Dict[Union[str, int], Any]]]",
                    "Optional[Union[Set[Union[str, int]], List[Union[str, int]]]]",
                    "Union[Set[Union[str, int]], None]",
                    "Optional[Union[Set[str], List[str]]]",
                    "Union[Set[str], Dict[str, Any]]",
                    "Optional[Union[Set[str], Dict[str, Any]]]"
                ],
                "status_code": [],
                "return": [
                    "trace"
                ],
                "responses": [
                    "Optional[Dict[Union[int, str], Dict[str, Any]]]",
                    "Optional[Dict]",
                    "Optional[Union[Dict[Union[int, str], Dict[str, Any]], List[Dict[str, Any]]]]",
                    "None",
                    "Optional",
                    "responses",
                    "Dict"
                ],
                "summary": [
                    "Optional[str]",
                    "None",
                    "summary"
                ],
                "tags": [
                    "Optional[List[str]]",
                    "tags",
                    "Optional"
                ],
                "generate_unique_id_function": []
            },
            "websocket": {
                "name": [
                    "typing.Optional[str]"
                ],
                "path": [
                    "str"
                ],
                "return": [],
                "dependencies": [
                    "typing.Optional[list[str]]",
                    "dependencies"
                ]
            },
            "websocket_route": {
                "name": [
                    "typing.Optional[str]"
                ],
                "path": [
                    "str"
                ],
                "return": []
            }
        },
        "APIWebSocketRoute": {
            "__init__": {
                "return": [],
                "dependencies": [
                    "typing.Optional[typing.Iterable[str]]",
                    "typing.Optional[typing.Iterable[typing.Any]]",
                    " function. Based on the usage and naming convention, it is reasonable to assume that the type of the argument dependencies is typing.Optional[typing.Iterable[str]]. Therefore, the type of the argument dependencies is "
                ],
                "endpoint": [
                    "typing.Callable"
                ],
                "name": [
                    "str",
                    "Optional[str]"
                ],
                "path": [
                    "str"
                ],
                "dependency_overrides_provider": []
            },
            "matches": {
                "scope": [
                    "dict"
                ],
                "return": [
                    "tuple[typing.Any, typing.Any]"
                ]
            }
        },
        "global": {
            "_merge_lifespan_context": {
                "return": [
                    "typing.AsyncContextManager[typing.Any]",
                    "typing.AsyncContextManager"
                ],
                "original_context": [
                    "dict",
                    "Context",
                    "ContextManager",
                    "ContextVar",
                    "Any"
                ],
                "nested_context": [
                    "app",
                    "asynccontextmanager",
                    "dict"
                ]
            },
            "_prepare_response_content": {
                "exclude_unset": [],
                "return": [],
                "res": [],
                "exclude_none": [
                    "bool"
                ],
                "exclude_defaults": [
                    "bool"
                ]
            },
            "get_request_handler": {
                "body_field": [],
                "dependency_overrides_provider": [],
                "dependant": [],
                "response_model_by_alias": [],
                "response_field": [],
                "return": [
                    "request",
                    "app",
                    "Callable[[Request], Awaitable[Any]]"
                ],
                "response_model_exclude_defaults": [],
                "response_model_exclude_none": [
                    "bool"
                ],
                "response_model_include": [
                    "typing.Optional[typing.Union[typing.Set[str], typing.Set[int]]]",
                    "typing.Optional[typing.Union[typing.Set[str], typing.List[str]]]",
                    "typing.Optional[typing.Union[set, dict]]",
                    "typing.Optional[typing.Set[str]]",
                    "typing.Optional[typing.Union[typing.Set[str], typing.Dict[str, typing.Any]]]"
                ],
                "response_model_exclude": [
                    "typing.Optional[typing.Union[typing.Set[str], typing.Set[int]]]",
                    "typing.Optional[typing.Set[str]]",
                    "typing.Optional[typing.Union[typing.Set[str], typing.Dict[str, typing.Any]]]"
                ],
                "response_model_exclude_unset": [
                    "bool"
                ],
                "status_code": [],
                "embed_body_fields": [
                    "bool"
                ],
                "response_class": [
                    "Union[DefaultPlaceholder, JSONResponse]",
                    "JSONResponse",
                    "typing.Union[DefaultPlaceholder, JSONResponse]",
                    "Union[DefaultPlaceholder, Type[Response]]",
                    "Union[DefaultPlaceholder, Type[JSONResponse]]",
                    "DefaultPlaceholder"
                ]
            },
            "get_websocket_app": {
                "embed_body_fields": [
                    "bool"
                ],
                "dependant": [
                    "typing.Any",
                    "dependant"
                ],
                "return": [
                    "Callable[[Any], Coroutine[Any, Any, None]]",
                    "Callable",
                    "Callable[[Any], Any]",
                    "Callable[[Any], Awaitable[None]]",
                    "Callable[[Any], Awaitable[Any]]",
                    "Callable[[Any], None]",
                    "app"
                ],
                "dependency_overrides_provider": []
            },
            "run_endpoint_function": {
                "values": [
                    "dict[typing.Any, typing.Any]",
                    "dict[str, typing.Any]"
                ],
                "dependant": [
                    "typing.Any"
                ],
                "is_coroutine": [
                    "bool"
                ],
                "return": [
                    "typing.Any",
                    "typing.Awaitable[typing.Any]",
                    "dependant.call",
                    "typing.Coroutine[typing.Any, typing.Any, typing.Any]",
                    "dependant",
                    "await"
                ]
            },
            "serialize_response": {
                "by_alias": [
                    "bool"
                ],
                "is_coroutine": [
                    "bool"
                ],
                "exclude_unset": [],
                "exclude": [],
                "field": [
                    "typing.Any"
                ],
                "response_content": [
                    "typing.Any"
                ],
                "include": [
                    "typing.Optional[typing.Any]",
                    "include",
                    "typing.Optional[typing.Union[set[str], list[str]]]",
                    "typing.Optional[typing.Union[set, list]]",
                    "typing.Any",
                    "field.serialize"
                ],
                "return": [
                    "typing.Any",
                    "list",
                    "field",
                    "serialize",
                    "None",
                    "str",
                    "dict"
                ],
                "exclude_none": [
                    "bool"
                ],
                "exclude_defaults": [
                    "bool"
                ]
            }
        }
    },
    "fastapi.security.api_key": {
        "APIKeyHeader": {
            "__call__": {
                "request": [
                    "typing.Any",
                    "HttpRequest",
                    "request",
                    "Request"
                ],
                "return": []
            },
            "__init__": {
                "auto_error": [
                    "bool"
                ],
                "description": [],
                "name": [
                    "str"
                ],
                "scheme_name": [
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "APIKeyQuery": {
            "__call__": {
                "return": [
                    "bool"
                ],
                "request": [
                    "object",
                    "HttpRequest",
                    "request",
                    "typing.Any"
                ]
            },
            "__init__": {
                "auto_error": [
                    "bool"
                ],
                "description": [],
                "name": [
                    "str"
                ],
                "scheme_name": []
            }
        },
        "APIKeyCookie": {
            "__init__": {
                "description": [],
                "name": [],
                "scheme_name": [
                    "Optional[str]"
                ],
                "auto_error": [
                    "bool"
                ]
            },
            "__call__": {
                "request": [],
                "return": [
                    "bool"
                ]
            }
        },
        "APIKeyBase": {
            "check_api_key": {
                "api_key": [],
                "auto_error": [],
                "return": [
                    "typing.Optional[str]"
                ]
            }
        }
    },
    "fastapi.security.base": {
        "SecurityBase": {
            "global": {
                "scheme_name": [
                    "str"
                ],
                "model": []
            }
        }
    },
    "fastapi.security.http": {
        "HTTPBasic": {
            "__call__": {
                "return": [
                    "typing.Optional[HTTPBasicCredentials]",
                    "typing.Union[None, HTTPBasicCredentials]"
                ],
                "request": [
                    "object",
                    "typing.Any",
                    "HttpRequest",
                    "Request",
                    "request",
                    "Any"
                ]
            },
            "__init__": {
                "auto_error": [
                    "bool"
                ],
                "realm": [
                    "str"
                ],
                "description": [],
                "scheme_name": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "HTTPBase": {
            "__call__": {
                "request": [],
                "return": [
                    "typing.Union[None, HTTPAuthorizationCredentials]",
                    "typing.Union[HTTPAuthorizationCredentials, None]"
                ]
            },
            "__init__": {
                "auto_error": [],
                "description": [],
                "scheme_name": [
                    "Optional[str]",
                    "str"
                ],
                "scheme": [
                    "str",
                    "AuthBase",
                    "TokenAuthentication"
                ]
            }
        },
        "HTTPDigest": {
            "__call__": {
                "request": [
                    "HttpRequest",
                    "request",
                    "object",
                    "typing.Any",
                    "Request",
                    "aiohttp.web.Request"
                ],
                "return": [
                    "Union[None, HTTPAuthorizationCredentials]",
                    "Optional[HTTPAuthorizationCredentials]",
                    "HTTPAuthorizationCredentials"
                ]
            },
            "__init__": {
                "description": [],
                "auto_error": [
                    "bool"
                ],
                "scheme_name": [
                    "Optional[str]"
                ]
            }
        },
        "HTTPBearer": {
            "__call__": {
                "request": [
                    "HttpRequest",
                    "object",
                    "Request",
                    "typing.Any"
                ],
                "return": [
                    "Union[None, HTTPAuthorizationCredentials]",
                    "Union[HTTPAuthorizationCredentials, None]",
                    "HTTPAuthorizationCredentials",
                    "Optional[HTTPAuthorizationCredentials]"
                ]
            },
            "__init__": {
                "bearerFormat": [],
                "scheme_name": [],
                "description": [
                    "str"
                ],
                "auto_error": []
            }
        },
        "HTTPAuthorizationCredentials": {
            "global": {
                "scheme": [
                    "str",
                    "Authorization"
                ],
                "credentials": [
                    "str",
                    "HTTPBasic",
                    "param",
                    "HTTPBasicCredentials",
                    "credentials"
                ]
            }
        },
        "HTTPBasicCredentials": {
            "global": {
                "username": [],
                "password": []
            }
        }
    },
    "fastapi.security.oauth2": {
        "OAuth2PasswordBearer": {
            "__call__": {
                "return": [
                    "typing.Union[str,None]",
                    "typing.Union[None,typing.Any]",
                    "typing.Union[None, typing.Any]",
                    "typing.Union[None, str]",
                    "typing.Union[None,str]"
                ],
                "request": []
            },
            "__init__": {
                "description": [],
                "refreshUrl": [
                    "Optional[str]",
                    "str"
                ],
                "auto_error": [
                    "bool"
                ],
                "tokenUrl": [],
                "scopes": [],
                "scheme_name": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "OAuth2": {
            "__call__": {
                "return": [
                    "Optional[Any]",
                    "typing.Optional[Any]",
                    "typing.Optional[unknown]",
                    "None",
                    "authorization"
                ],
                "request": [
                    "typing.Any",
                    "request",
                    "object",
                    "Request",
                    "HttpRequest",
                    "Any"
                ]
            },
            "__init__": {
                "auto_error": [
                    "bool"
                ],
                "description": [
                    "Optional[str]",
                    "typing.Optional[str]"
                ],
                "scheme_name": [
                    "Optional[str]",
                    "str"
                ],
                "flows": []
            }
        },
        "OAuth2AuthorizationCodeBearer": {
            "__call__": {
                "return": [],
                "request": [
                    "object",
                    "HttpRequest",
                    "Request",
                    "typing.Any",
                    "Any",
                    "request"
                ]
            },
            "__init__": {
                "auto_error": [
                    "bool"
                ],
                "scheme_name": [
                    "str",
                    "Optional[str]"
                ],
                "refreshUrl": [],
                "authorizationUrl": [],
                "tokenUrl": [],
                "description": [],
                "scopes": [
                    "typing.Optional[dict]",
                    "typing.Optional[dict[typing.Any, typing.Any]]"
                ]
            }
        },
        "OAuth2PasswordRequestForm": {
            "__init__": {
                "grant_type": [
                    "typing.Optional[str]",
                    "typing.Optional[typing.Any]"
                ],
                "client_id": [
                    "Optional[str]",
                    "str"
                ],
                "client_secret": [],
                "password": [],
                "scope": [],
                "username": [
                    "str"
                ]
            }
        },
        "OAuth2PasswordRequestFormStrict": {
            "__init__": {
                "grant_type": [],
                "client_id": [],
                "client_secret": [
                    "Optional[str]"
                ],
                "username": [],
                "password": [
                    "str"
                ],
                "scope": [
                    "str"
                ]
            }
        },
        "SecurityScopes": {
            "__init__": {
                "scopes": []
            }
        }
    },
    "fastapi.security.open_id_connect_url": {
        "OpenIdConnect": {
            "__init__": {
                "auto_error": [],
                "description": [
                    "Optional[str]",
                    "str"
                ],
                "scheme_name": [
                    "Optional[str]",
                    "str"
                ],
                "openIdConnectUrl": [
                    "str"
                ]
            },
            "__call__": {
                "return": [],
                "request": [
                    "typing.Any",
                    "HttpRequest",
                    "request",
                    "Any"
                ]
            }
        }
    },
    "fastapi.utils": {
        "global": {
            "create_cloned_field": {
                "cloned_types": [
                    "dict[typing.Any, typing.Any]",
                    "dict",
                    "Optional[Dict[Type[BaseModel], Type[BaseModel]]]",
                    "Optional[Dict[type, type]]",
                    "Optional[typing.Dict[typing.Type, typing.Type]]",
                    "dict[typing.Type, typing.Type]",
                    "Optional[dict]",
                    "Optional[Dict[Type, Type]]"
                ],
                "field": [
                    "Field",
                    "pydantic.Field",
                    "typing.Any",
                    "pydantic.fields.ModelField"
                ],
                "return": []
            },
            "create_model_field": {
                "alias": [
                    "typing.Any",
                    "typing.Optional[str]",
                    "typing.Optional[typing.Any]"
                ],
                "return": [],
                "default": [
                    "typing.Any",
                    "default",
                    "Undefined"
                ],
                "class_validators": [
                    "typing.Optional[dict]"
                ],
                "name": [
                    "str",
                    "typing.Any"
                ],
                "mode": [
                    "str"
                ],
                "field_info": [
                    "FieldInfo"
                ],
                "required": [
                    "typing.Any",
                    "Undefined",
                    "required"
                ],
                "model_config": [],
                "type_": [
                    "typing.Any",
                    "typing.Type[typing.Any]",
                    "kwargs",
                    "annotation"
                ]
            },
            "generate_operation_id_for_path": {
                "return": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "path": [
                    "str"
                ],
                "name": []
            },
            "deep_dict_update": {
                "main_dict": [
                    "dict"
                ],
                "return": [],
                "update_dict": []
            },
            "generate_unique_id": {
                "return": [
                    "str"
                ],
                "route": [
                    "Function",
                    "ApiParser",
                    "name",
                    "Route"
                ]
            },
            "get_path_param_names": {
                "path": [
                    "str"
                ],
                "return": [
                    "set[str]"
                ]
            },
            "get_value_or_default": {
                "extra_items": [
                    "tuple"
                ],
                "first_item": [
                    "Any"
                ],
                "return": []
            },
            "global": {
                "_CLONED_TYPES_CACHE": [
                    "WeakKeyDictionary"
                ]
            },
            "is_body_allowed_for_status_code": {
                "return": [
                    "bool"
                ],
                "status_code": []
            }
        }
    },
    "fastapi.security.utils": {
        "global": {
            "get_authorization_scheme_param": {
                "authorization_header_value": [
                    "str"
                ],
                "return": []
            }
        }
    }
}