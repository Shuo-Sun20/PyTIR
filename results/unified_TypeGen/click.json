{
    "click._compat": {
        "_AtomicFile": {
            "__exit__": {
                "exc_type": [],
                "exc_value": [
                    "Optional[BaseException]"
                ],
                "tb": [
                    "types.TracebackType"
                ],
                "return": [
                    "None"
                ]
            },
            "__getattr__": {
                "name": [
                    "name"
                ],
                "return": []
            },
            "__init__": {
                "return": [
                    "None"
                ],
                "tmp_filename": [
                    "str"
                ],
                "real_filename": [
                    "str"
                ],
                "f": [
                    "f"
                ]
            },
            "__enter__": {
                "return": [
                    "Self"
                ]
            },
            "__repr__": {
                "return": [
                    "str"
                ]
            },
            "close": {
                "return": [],
                "delete": []
            }
        },
        "_NonClosingTextIOWrapper": {
            "__del__": {
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "encoding": [
                    "None"
                ],
                "force_readable": [
                    "bool"
                ],
                "errors": [],
                "extra": [],
                "stream": [
                    "BinaryIO"
                ],
                "force_writable": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "isatty": {
                "return": [
                    "isatty"
                ]
            }
        },
        "_FixupStream": {
            "__getattr__": {
                "return": [],
                "name": [
                    "None"
                ]
            },
            "__init__": {
                "force_readable": [
                    "False"
                ],
                "force_writable": [
                    "False"
                ],
                "stream": [
                    "None"
                ]
            },
            "read1": {
                "return": [],
                "size": [
                    "int"
                ]
            },
            "writable": {
                "return": []
            },
            "readable": {
                "return": [
                    "False"
                ]
            },
            "seekable": {
                "return": [
                    "bool"
                ]
            }
        },
        "global": {
            "_find_binary_writer": {
                "return": [
                    "Optional[t.BinaryIO]"
                ],
                "stream": [
                    "BinaryIO"
                ]
            },
            "_force_correct_text_reader": {
                "encoding": [],
                "force_readable": [
                    "bool"
                ],
                "errors": [],
                "return": [],
                "text_reader": []
            },
            "_find_binary_reader": {
                "return": [],
                "stream": [
                    "TextIO"
                ]
            },
            "_force_correct_text_stream": {
                "find_binary": [],
                "encoding": [
                    "encoding"
                ],
                "is_binary": [
                    "bool"
                ],
                "errors": [
                    "None"
                ],
                "force_writable": [
                    "bool"
                ],
                "force_readable": [
                    "None"
                ],
                "return": [
                    "TextIOBase"
                ],
                "text_stream": [
                    "TextIO"
                ]
            },
            "_get_argv_encoding": {
                "return": []
            },
            "_force_correct_text_writer": {
                "encoding": [],
                "errors": [
                    "str"
                ],
                "return": [],
                "force_writable": [
                    "True"
                ],
                "text_writer": []
            },
            "_get_windows_console_stream": {
                "return": [
                    "None"
                ],
                "f": [
                    "TextIOBase"
                ],
                "errors": [
                    "str"
                ],
                "encoding": [
                    "str"
                ]
            },
            "_is_binary_reader": {
                "return": [
                    "False"
                ],
                "default": [
                    "bool"
                ],
                "stream": [
                    "IOBase"
                ]
            },
            "_is_binary_writer": {
                "return": [
                    "True"
                ],
                "default": [
                    "bool"
                ],
                "stream": [
                    "io"
                ]
            },
            "_is_compat_stream_attr": {
                "attr": [],
                "return": [
                    "bool"
                ],
                "stream": [
                    "BufferedIOBase"
                ],
                "value": [
                    "value"
                ]
            },
            "_is_compatible_text_stream": {
                "encoding": [
                    "str"
                ],
                "errors": [
                    "errors"
                ],
                "return": [
                    "and"
                ],
                "stream": [
                    "TextIOBase"
                ]
            },
            "_is_jupyter_kernel_output": {
                "return": [
                    "bool"
                ],
                "stream": [
                    "stream"
                ]
            },
            "_make_cached_stream_func": {
                "return": [
                    "func"
                ],
                "src_func": [
                    "Callable"
                ],
                "wrapper_func": [
                    "Callable"
                ]
            },
            "_make_text_stream": {
                "return": [],
                "force_writable": [
                    "bool"
                ],
                "errors": [
                    "None"
                ],
                "force_readable": [
                    "bool"
                ],
                "encoding": [
                    "str"
                ],
                "stream": [
                    "io.BufferedIOBase"
                ]
            },
            "_stream_is_misconfigured": {
                "return": [
                    "bool"
                ],
                "stream": [
                    "stream"
                ]
            },
            "_wrap_io_open": {
                "mode": [
                    "mode"
                ],
                "errors": [
                    "str"
                ],
                "encoding": [
                    "encoding"
                ],
                "return": [
                    "IO[Any]"
                ],
                "file": [
                    "str"
                ]
            },
            "auto_wrap_for_ansi": {
                "return": [
                    "rv"
                ],
                "color": [
                    "None"
                ],
                "stream": [
                    "io"
                ]
            },
            "get_best_encoding": {
                "return": [
                    "str"
                ],
                "stream": [
                    "StringIO"
                ]
            },
            "get_binary_stderr": {
                "return": [
                    "writer"
                ]
            },
            "get_text_stderr": {
                "encoding": [
                    "encoding"
                ],
                "errors": [
                    "None"
                ],
                "return": [
                    "IO"
                ]
            },
            "get_text_stdin": {
                "return": [],
                "errors": [
                    "None"
                ],
                "encoding": [
                    "Optional[str]"
                ]
            },
            "global": {
                "_ansi_stream_wrappers": [
                    "WeakKeyDictionary"
                ],
                "auto_wrap_for_ansi": [
                    "None"
                ],
                "binary_streams": [
                    "Dict[str, Callable[..., Any]]"
                ],
                "text_streams": [
                    "dict"
                ]
            },
            "is_ascii_encoding": {
                "encoding": [],
                "return": []
            },
            "get_text_stdout": {
                "encoding": [
                    "None"
                ],
                "errors": [
                    "errors"
                ],
                "return": [
                    "rv"
                ]
            },
            "open_stream": {
                "encoding": [
                    "None"
                ],
                "atomic": [
                    "Optional[bool]"
                ],
                "mode": [
                    "str"
                ],
                "errors": [
                    "errors"
                ],
                "return": [
                    "None"
                ],
                "filename": [
                    "Union[str, os.PathLike]"
                ]
            },
            "get_binary_stdin": {
                "return": [
                    "loop"
                ]
            },
            "isatty": {
                "return": [
                    "bool"
                ],
                "stream": [
                    "io.IOBase"
                ]
            },
            "strip_ansi": {
                "return": [],
                "value": [
                    "value"
                ]
            },
            "get_binary_stdout": {
                "return": [
                    "None"
                ]
            },
            "should_strip_ansi": {
                "return": [
                    "False"
                ],
                "color": [
                    "color"
                ],
                "stream": [
                    "IO"
                ]
            },
            "term_len": {
                "return": [
                    "int"
                ],
                "x": [
                    "x"
                ]
            }
        }
    },
    "click": {
        "global": {
            "__getattr__": {
                "name": [
                    "str"
                ],
                "return": [
                    "None"
                ]
            }
        }
    },
    "click._termui_impl": {
        "ProgressBar": {
            "__enter__": {
                "return": [
                    "self"
                ]
            },
            "__init__": {
                "return": [],
                "bar_template": [
                    "str"
                ],
                "empty_char": [
                    "str"
                ],
                "length": [],
                "fill_char": [],
                "item_show_func": [],
                "info_sep": [
                    "str"
                ],
                "file": [
                    "StringIO"
                ],
                "show_eta": [
                    "bool"
                ],
                "color": [
                    "str"
                ],
                "show_percent": [
                    "False"
                ],
                "show_pos": [
                    "bool"
                ],
                "label": [
                    "None"
                ],
                "iterable": [
                    "cabc.Iterable[V]"
                ],
                "width": [
                    "self.width"
                ],
                "hidden": [
                    "None"
                ],
                "update_min_steps": [
                    "int"
                ]
            },
            "__exit__": {
                "tb": [
                    "TracebackType"
                ],
                "exc_value": [
                    "None"
                ],
                "exc_type": [
                    "Optional[TracebackType]"
                ],
                "return": [
                    "pass"
                ]
            },
            "__iter__": {
                "return": []
            },
            "__next__": {
                "return": [
                    "self"
                ]
            },
            "finish": {
                "return": [
                    "None"
                ]
            },
            "format_bar": {
                "return": [
                    "bar"
                ]
            },
            "generator": {
                "return": [
                    "yield"
                ]
            },
            "format_pos": {
                "return": [
                    "None"
                ]
            },
            "format_progress_line": {
                "return": []
            },
            "format_pct": {
                "return": [
                    "str"
                ]
            },
            "make_step": {
                "n_steps": [],
                "return": [
                    "None"
                ]
            },
            "format_eta": {
                "return": [
                    "str"
                ]
            },
            "render_progress": {
                "return": [
                    "None"
                ]
            },
            "render_finish": {
                "return": [
                    "None"
                ]
            },
            "update": {
                "return": [
                    "update"
                ],
                "current_item": [
                    "None"
                ],
                "n_steps": [
                    "update"
                ]
            }
        },
        "Editor": {
            "__init__": {
                "extension": [],
                "return": [
                    "None"
                ],
                "require_save": [
                    "bool"
                ],
                "env": [
                    "dict"
                ],
                "editor": [
                    "editor"
                ]
            },
            "edit_files": {
                "return": [
                    "None"
                ],
                "filenames": [
                    "List[str]"
                ]
            },
            "get_editor": {
                "return": []
            }
        },
        "global": {
            "_nullpager": {
                "return": [
                    "None"
                ],
                "color": [
                    "bool"
                ],
                "generator": [
                    "generator"
                ],
                "stream": [
                    "TextIOBase"
                ]
            },
            "_tempfilepager": {
                "return": [],
                "generator": [
                    "generator"
                ],
                "color": [
                    "color"
                ],
                "cmd_parts": [
                    "list"
                ]
            },
            "_translate_ch_to_exc": {
                "ch": [],
                "return": [
                    "None"
                ]
            },
            "_pipepager": {
                "return": [
                    "bool"
                ],
                "cmd_parts": [
                    "List[str]"
                ],
                "color": [
                    "Optional[bool]"
                ],
                "generator": [
                    "generator"
                ]
            },
            "open_url": {
                "wait": [
                    "False"
                ],
                "locate": [
                    "wait"
                ],
                "return": [
                    "int"
                ],
                "url": [
                    "url"
                ]
            },
            "getchar": {
                "echo": [
                    "if"
                ],
                "return": [
                    "None"
                ]
            },
            "pager": {
                "color": [
                    "color"
                ],
                "generator": [
                    "generator"
                ],
                "return": []
            },
            "raw_terminal": {
                "return": [
                    "ContextManager[None]"
                ]
            }
        }
    },
    "click._textwrap": {
        "TextWrapper": {
            "_handle_long_word": {
                "return": [
                    "None"
                ],
                "cur_line": [],
                "width": [
                    "None"
                ],
                "cur_len": [],
                "reversed_chunks": []
            },
            "indent_only": {
                "return": [
                    "rv"
                ],
                "text": [
                    "str"
                ]
            },
            "extra_indent": {
                "indent": [
                    "indent"
                ],
                "return": [
                    "contextlib"
                ]
            }
        }
    },
    "click._winconsole": {
        "ConsoleStream": {
            "__init__": {
                "return": [
                    "None"
                ],
                "byte_stream": [
                    "io.BufferedIOBase"
                ],
                "text_stream": [
                    "TextIOBase"
                ]
            },
            "__getattr__": {
                "return": [],
                "name": [
                    "str"
                ]
            },
            "__repr__": {
                "return": [
                    "None"
                ]
            },
            "isatty": {
                "return": [
                    "False"
                ]
            },
            "write": {
                "x": [],
                "return": [
                    "int"
                ]
            },
            "writelines": {
                "return": [
                    "None"
                ],
                "lines": [
                    "lines"
                ]
            }
        },
        "_WindowsConsoleRawIOBase": {
            "__init__": {
                "handle": [
                    "handle"
                ],
                "return": [
                    "None"
                ]
            },
            "isatty": {
                "return": [
                    "True"
                ]
            }
        },
        "_WindowsConsoleWriter": {
            "_get_error_message": {
                "return": [
                    "str"
                ],
                "errno": [
                    "int"
                ]
            },
            "writable": {
                "return": [
                    "True"
                ]
            },
            "write": {
                "b": [
                    "b"
                ],
                "return": [
                    "int"
                ]
            }
        },
        "global": {
            "_get_text_stderr": {
                "buffer_stream": [],
                "return": [
                    "None"
                ]
            },
            "_get_text_stdin": {
                "return": [
                    "typing"
                ],
                "buffer_stream": [
                    "t.cast"
                ]
            },
            "_get_windows_console_stream": {
                "encoding": [],
                "return": [
                    "None"
                ],
                "errors": [
                    "None"
                ],
                "f": [
                    "f.buffer"
                ]
            },
            "_get_text_stdout": {
                "return": [
                    "t.TextIO"
                ],
                "buffer_stream": [
                    "ConsoleStream"
                ]
            },
            "get_buffer": {
                "return": [],
                "obj": [
                    "obj"
                ],
                "writable": [
                    "False"
                ]
            },
            "_is_console": {
                "return": [
                    "GetConsoleMode"
                ],
                "f": [
                    "f"
                ]
            },
            "global": {
                "_stream_factories": [
                    "Dict[int, function]"
                ]
            }
        },
        "_WindowsConsoleReader": {
            "readable": {
                "return": [
                    "bool"
                ]
            },
            "readinto": {
                "return": [
                    "int"
                ],
                "b": [
                    "bytearray"
                ]
            }
        }
    },
    "click.core": {
        "Context": {
            "__exit__": {
                "exc_value": [],
                "return": [],
                "tb": [
                    "TracebackType"
                ],
                "exc_type": [
                    "None"
                ]
            },
            "__enter__": {
                "return": [
                    "typing"
                ]
            },
            "__init__": {
                "return": [
                    "pass"
                ],
                "max_content_width": [],
                "command": [
                    "command"
                ],
                "allow_interspersed_args": [
                    "None"
                ],
                "allow_extra_args": [],
                "resilient_parsing": [
                    "False"
                ],
                "auto_envvar_prefix": [
                    "str"
                ],
                "default_map": [
                    "Dict"
                ],
                "help_option_names": [
                    "List[str]"
                ],
                "color": [
                    "self.color"
                ],
                "terminal_width": [
                    "None"
                ],
                "obj": [
                    "obj"
                ],
                "info_name": [
                    "None"
                ],
                "parent": [
                    "None"
                ],
                "ignore_unknown_options": [
                    "bool"
                ],
                "show_default": [
                    "Optional[bool]"
                ],
                "token_normalize_func": [
                    "Optional[Callable]"
                ]
            },
            "_make_sub_context": {
                "command": [
                    "command"
                ],
                "return": [
                    "self"
                ]
            },
            "abort": {
                "return": []
            },
            "close": {
                "return": []
            },
            "call_on_close": {
                "return": [
                    "callback"
                ],
                "f": [
                    "f"
                ]
            },
            "exit": {
                "return": [],
                "code": [
                    "code"
                ]
            },
            "find_root": {
                "return": []
            },
            "fail": {
                "message": [
                    "str"
                ],
                "return": [
                    "None"
                ]
            },
            "ensure_object": {
                "return": [
                    "rv"
                ],
                "object_type": [
                    "ObjectTypes"
                ]
            },
            "find_object": {
                "object_type": [],
                "return": [
                    "None"
                ]
            },
            "forward": {
                "return": [
                    "forward"
                ],
                "args": [
                    "args"
                ],
                "cmd": [
                    "Command"
                ],
                "kwargs": [
                    "dict[str, Any]"
                ]
            },
            "get_parameter_source": {
                "return": [],
                "name": []
            },
            "get_usage": {
                "return": []
            },
            "global": {
                "formatter_class": [
                    "Context"
                ]
            },
            "get_help": {
                "return": [
                    "str"
                ]
            },
            "make_formatter": {
                "return": [
                    "width"
                ]
            },
            "set_parameter_source": {
                "return": [],
                "name": [
                    "name"
                ],
                "source": [
                    "source"
                ]
            },
            "scope": {
                "cleanup": [
                    "bool"
                ],
                "return": [
                    "self"
                ]
            },
            "to_info_dict": {
                "return": [
                    "dict"
                ]
            },
            "with_resource": {
                "context_manager": [],
                "return": []
            }
        },
        "Command": {
            "__call__": {
                "return": [
                    "None"
                ],
                "args": [
                    "args"
                ],
                "kwargs": [
                    "kwargs"
                ]
            },
            "__init__": {
                "return": [],
                "help": [],
                "callback": [
                    "Callable"
                ],
                "name": [
                    "str"
                ],
                "epilog": [
                    "str"
                ],
                "hidden": [
                    "hidden"
                ],
                "deprecated": [
                    "bool"
                ],
                "options_metavar": [
                    "str"
                ],
                "add_help_option": [
                    "bool"
                ],
                "context_settings": [
                    "Optional[dict]"
                ],
                "params": [
                    "Parameter"
                ],
                "short_help": [
                    "Any"
                ],
                "no_args_is_help": [
                    "bool"
                ]
            },
            "__repr__": {
                "return": [
                    "None"
                ]
            },
            "_main_shell_completion": {
                "return": [],
                "ctx_args": [],
                "prog_name": [
                    "str"
                ],
                "complete_var": [
                    "str"
                ]
            },
            "collect_usage_pieces": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "Command"
                ]
            },
            "format_epilog": {
                "return": [],
                "ctx": [
                    "Context"
                ],
                "formatter": [
                    "formatter"
                ]
            },
            "format_help": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "ctx"
                ],
                "formatter": [
                    "HelpFormatter"
                ]
            },
            "format_help_text": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "Context"
                ],
                "formatter": [
                    "HelpFormatter"
                ]
            },
            "format_usage": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "ctx"
                ],
                "formatter": [
                    "HelpFormatter"
                ]
            },
            "format_options": {
                "formatter": [
                    "HelpFormatter"
                ],
                "ctx": [
                    "Context"
                ],
                "return": [
                    "None"
                ]
            },
            "get_help": {
                "return": [
                    "str"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "get_help_option": {
                "ctx": [
                    "Context"
                ],
                "return": []
            },
            "get_short_help_str": {
                "return": [],
                "limit": [
                    "int"
                ]
            },
            "get_help_option_names": {
                "return": [],
                "ctx": [
                    "Context"
                ]
            },
            "get_params": {
                "return": [
                    "params"
                ],
                "ctx": [
                    "click.Context"
                ]
            },
            "get_usage": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "global": {
                "context_class": [
                    "Context"
                ]
            },
            "invoke": {
                "ctx": [
                    "ctx"
                ],
                "return": [
                    "ctx"
                ]
            },
            "make_context": {
                "return": [
                    "Context"
                ],
                "info_name": [
                    "click.Context"
                ],
                "parent": [
                    "BaseCommand"
                ],
                "extra": [
                    "dict"
                ],
                "args": [
                    "None"
                ]
            },
            "make_parser": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "argparse.ArgumentParser"
                ]
            },
            "parse_args": {
                "ctx": [
                    "Context"
                ],
                "args": [
                    "args"
                ],
                "return": [
                    "args"
                ]
            },
            "shell_complete": {
                "incomplete": [
                    "str"
                ],
                "ctx": [
                    "Context"
                ],
                "return": [
                    "CompletionItem"
                ]
            },
            "to_info_dict": {
                "return": [
                    "Dict[str, Union[str, List[Dict], bool, None]]"
                ],
                "ctx": [
                    "click.Context"
                ]
            }
        },
        "Argument": {
            "__init__": {
                "return": [
                    "None"
                ],
                "param_decls": [],
                "attrs": [
                    "dict"
                ],
                "required": [
                    "bool"
                ]
            },
            "_parse_decls": {
                "expose_value": [
                    "bool"
                ],
                "return": [
                    "arg"
                ],
                "decls": [
                    "decls"
                ]
            },
            "add_to_parser": {
                "return": [],
                "parser": [],
                "ctx": [
                    "ctx"
                ]
            },
            "get_error_hint": {
                "return": [
                    "str"
                ],
                "ctx": [
                    "ctx"
                ]
            },
            "get_usage_pieces": {
                "ctx": [
                    "click"
                ],
                "return": [
                    "List[Any]"
                ]
            },
            "make_metavar": {
                "ctx": [
                    "ctx"
                ],
                "return": [
                    "var"
                ]
            }
        },
        "global": {
            "__getattr__": {
                "return": [
                    "name"
                ],
                "name": [
                    "name"
                ]
            },
            "_check_iter": {
                "return": [
                    "value"
                ],
                "value": [
                    "str"
                ]
            },
            "_check_nested_chain": {
                "cmd_name": [
                    "str"
                ],
                "return": [
                    "None"
                ],
                "cmd": [
                    "click.Group"
                ],
                "register": [
                    "register"
                ],
                "base_command": [
                    "Command"
                ]
            },
            "_complete_visible_commands": {
                "incomplete": [
                    "incomplete"
                ],
                "ctx": [
                    "Context"
                ],
                "return": [
                    "command"
                ]
            },
            "batch": {
                "batch_size": [],
                "return": [
                    "list"
                ],
                "iterable": [
                    "Iterable"
                ]
            },
            "augment_usage_errors": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "None"
                ],
                "param": [
                    "Parameter"
                ]
            },
            "iter_params_for_processing": {
                "invocation_order": [],
                "declaration_order": [
                    "List[Any]"
                ],
                "return": [
                    "List"
                ]
            }
        },
        "CommandCollection": {
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ],
                "kwargs": [
                    "kwargs"
                ],
                "sources": [
                    "Optional"
                ]
            },
            "add_source": {
                "return": [
                    "None"
                ],
                "group": [
                    "Group"
                ]
            },
            "get_command": {
                "cmd_name": [
                    "click"
                ],
                "ctx": [
                    "click.Context"
                ],
                "return": [
                    "None"
                ]
            },
            "list_commands": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "rv"
                ]
            }
        },
        "Group": {
            "__init__": {
                "return": [
                    "None"
                ],
                "invoke_without_command": [
                    "bool"
                ],
                "chain": [
                    "bool"
                ],
                "commands": [
                    "None"
                ],
                "kwargs": [
                    "Dict[str, Any]"
                ],
                "result_callback": [],
                "no_args_is_help": [
                    "bool"
                ],
                "subcommand_metavar": [
                    "str"
                ],
                "name": [
                    "None"
                ]
            },
            "add_command": {
                "return": [
                    "None"
                ],
                "cmd": [
                    "click.Command"
                ],
                "name": [
                    "Optional[str]"
                ]
            },
            "collect_usage_pieces": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "format_commands": {
                "return": [],
                "ctx": [
                    "Context"
                ],
                "formatter": [
                    "HelpFormatter"
                ]
            },
            "format_options": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "Context"
                ],
                "formatter": [
                    "formatter"
                ]
            },
            "get_command": {
                "cmd_name": [
                    "str"
                ],
                "ctx": [
                    "click.Context"
                ],
                "return": [
                    "self.commands"
                ]
            },
            "global": {
                "group_class": [
                    "None"
                ],
                "command_class": [
                    "None"
                ]
            },
            "invoke": {
                "ctx": [
                    "ctx"
                ],
                "return": [
                    "None"
                ]
            },
            "list_commands": {
                "return": [
                    "list"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "parse_args": {
                "ctx": [
                    "Context"
                ],
                "args": [
                    "List[str]"
                ],
                "return": [
                    "args"
                ]
            },
            "result_callback": {
                "replace": [
                    "False"
                ],
                "return": [
                    "function"
                ]
            },
            "resolve_command": {
                "ctx": [
                    "Context"
                ],
                "args": [
                    "List[str]"
                ],
                "return": [
                    "args"
                ]
            },
            "shell_complete": {
                "ctx": [
                    "ctx"
                ],
                "return": [
                    "CompletionItem"
                ],
                "incomplete": [
                    "str"
                ]
            },
            "to_info_dict": {
                "return": [
                    "dict"
                ],
                "ctx": [
                    "Context"
                ]
            }
        },
        "Option": {
            "__init__": {
                "allow_from_autoenv": [
                    "True"
                ],
                "return": [
                    "None"
                ],
                "deprecated": [
                    "deprecated"
                ],
                "hidden": [
                    "bool"
                ],
                "attrs": [
                    "dict"
                ],
                "confirmation_prompt": [],
                "help": [
                    "str"
                ],
                "count": [],
                "param_decls": [],
                "hide_input": [
                    "bool"
                ],
                "show_default": [
                    "None"
                ],
                "is_flag": [
                    "None"
                ],
                "show_choices": [],
                "multiple": [
                    "bool"
                ],
                "show_envvar": [
                    "bool"
                ],
                "prompt": [
                    "None"
                ],
                "type": [
                    "None"
                ],
                "flag_value": [
                    "bool"
                ],
                "prompt_required": [
                    "True"
                ]
            },
            "_parse_decls": {
                "expose_value": [
                    "None"
                ],
                "return": [
                    "opts"
                ],
                "decls": [
                    "List[Any]"
                ]
            },
            "add_to_parser": {
                "return": [],
                "ctx": [
                    "ctx"
                ],
                "parser": [
                    "optparse"
                ]
            },
            "consume_value": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "source"
                ],
                "opts": [
                    "OptionParser"
                ]
            },
            "get_help_extra": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "extra"
                ]
            },
            "get_error_hint": {
                "return": [
                    "result"
                ],
                "ctx": [
                    "ctx"
                ]
            },
            "get_help_record": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "typing"
                ]
            },
            "prompt_for_value": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "self.type"
                ]
            },
            "resolve_envvar_value": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "None"
                ]
            },
            "to_info_dict": {
                "return": [
                    "dict"
                ]
            },
            "value_from_envvar": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "ctx"
                ]
            }
        },
        "Parameter": {
            "__init__": {
                "deprecated": [],
                "return": [
                    "None"
                ],
                "is_eager": [
                    "False"
                ],
                "expose_value": [
                    "True"
                ],
                "metavar": [
                    "str"
                ],
                "required": [
                    "False"
                ],
                "envvar": [
                    "Optional[str]"
                ],
                "multiple": [
                    "multiple"
                ],
                "shell_complete": [
                    "None"
                ],
                "default": [
                    "None"
                ],
                "callback": [
                    "Any"
                ],
                "param_decls": [
                    "None"
                ],
                "nargs": [
                    "None"
                ],
                "type": [
                    "ParamType"
                ]
            },
            "__repr__": {
                "return": [
                    "None"
                ]
            },
            "_parse_decls": {
                "return": [
                    "None"
                ],
                "expose_value": [
                    "False"
                ],
                "decls": [
                    "decls"
                ]
            },
            "add_to_parser": {
                "return": [],
                "ctx": [
                    "None"
                ],
                "parser": [
                    "parser"
                ]
            },
            "consume_value": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "tuple[Any, Any]"
                ],
                "opts": [
                    "dict"
                ]
            },
            "get_error_hint": {
                "ctx": [
                    "ctx"
                ],
                "return": [
                    "str"
                ]
            },
            "get_help_record": {
                "ctx": [
                    "click"
                ],
                "return": [
                    "None"
                ]
            },
            "get_usage_pieces": {
                "return": [
                    "list"
                ],
                "ctx": [
                    "ctx"
                ]
            },
            "handle_parse_result": {
                "args": [
                    "args"
                ],
                "ctx": [
                    "ctx"
                ],
                "return": [
                    "args"
                ],
                "opts": [
                    "opts"
                ]
            },
            "make_metavar": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "None"
                ]
            },
            "process_value": {
                "value": [
                    "Any"
                ],
                "ctx": [
                    "Context"
                ],
                "return": [
                    "None"
                ]
            },
            "resolve_envvar_value": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "ctx"
                ]
            },
            "shell_complete": {
                "incomplete": [
                    "incomplete"
                ],
                "return": [
                    "CompletionItem"
                ],
                "ctx": [
                    "click.Context"
                ]
            },
            "to_info_dict": {
                "return": []
            },
            "type_cast_value": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "None"
                ],
                "value": [
                    "self.multiple"
                ]
            },
            "value_from_envvar": {
                "return": [
                    "rv"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "value_is_missing": {
                "return": [
                    "None"
                ],
                "value": [
                    "None"
                ]
            }
        },
        "_FakeSubclassCheck": {
            "__instancecheck__": {
                "return": [
                    "bool"
                ],
                "instance": [
                    "instance"
                ]
            },
            "__subclasscheck__": {
                "return": [
                    "bool"
                ],
                "subclass": [
                    "bool"
                ]
            }
        }
    },
    "click.decorators": {
        "global": {
            "_param_memo": {
                "return": [
                    "None"
                ],
                "f": [
                    "Command"
                ],
                "param": [
                    "Parameter"
                ]
            },
            "argument": {
                "return": [
                    "Callable"
                ],
                "attrs": [
                    "attrs"
                ],
                "cls": [
                    "None"
                ],
                "param_decls": [
                    "tuple"
                ]
            },
            "confirmation_option": {
                "return": [
                    "kwargs"
                ],
                "param_decls": [],
                "kwargs": [
                    "dict"
                ]
            },
            "make_pass_decorator": {
                "ensure": [
                    "ensure"
                ],
                "return": [],
                "object_type": [
                    "type"
                ]
            },
            "help_option": {
                "param_decls": [],
                "return": [
                    "Option"
                ],
                "kwargs": [
                    "kwargs"
                ]
            },
            "option": {
                "return": [
                    "None"
                ],
                "param_decls": [
                    "None"
                ],
                "cls": [
                    "None"
                ],
                "attrs": [
                    "Dict[str, Any]"
                ]
            },
            "pass_context": {
                "f": [],
                "return": [
                    "f"
                ]
            },
            "pass_obj": {
                "return": [],
                "f": [
                    "Callable"
                ]
            },
            "password_option": {
                "kwargs": [
                    "kwargs"
                ],
                "param_decls": [
                    "tuple"
                ],
                "return": []
            },
            "pass_meta_key": {
                "key": [
                    "str"
                ],
                "return": [
                    "decorator"
                ],
                "doc_description": [
                    "click.Context.meta"
                ]
            },
            "version_option": {
                "prog_name": [
                    "None"
                ],
                "message": [
                    "str"
                ],
                "param_decls": [
                    "tuple"
                ],
                "kwargs": [
                    "dict"
                ],
                "package_name": [
                    "None"
                ],
                "version": [
                    "Optional[str]"
                ],
                "return": [
                    "option"
                ]
            }
        }
    },
    "click.exceptions": {
        "BadParameter": {
            "__init__": {
                "return": [],
                "ctx": [
                    "Context"
                ],
                "param_hint": [],
                "param": [
                    "Parameter"
                ],
                "message": [
                    "str"
                ]
            },
            "format_message": {
                "return": [
                    "str"
                ]
            }
        },
        "BadOptionUsage": {
            "__init__": {
                "ctx": [],
                "message": [
                    "None"
                ],
                "option_name": [],
                "return": [
                    "None"
                ]
            }
        },
        "MissingParameter": {
            "__init__": {
                "return": [],
                "param": [
                    "None"
                ],
                "param_type": [],
                "ctx": [
                    "Context"
                ],
                "param_hint": [
                    "str"
                ],
                "message": [
                    "None"
                ]
            },
            "format_message": {
                "return": []
            },
            "__str__": {
                "return": [
                    "str"
                ]
            }
        },
        "Exit": {
            "__init__": {
                "code": [
                    "code"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "ClickException": {
            "__init__": {
                "return": [
                    "None"
                ],
                "message": [
                    "None"
                ]
            },
            "__str__": {
                "return": [
                    "str"
                ]
            },
            "show": {
                "return": [
                    "show"
                ],
                "file": [
                    "io.TextIO"
                ]
            },
            "format_message": {
                "return": [
                    "self.message"
                ]
            }
        },
        "NoArgsIsHelpError": {
            "__init__": {
                "ctx": [
                    "ctx"
                ],
                "return": [
                    "None"
                ]
            },
            "show": {
                "return": [
                    "None"
                ],
                "file": [
                    "file"
                ]
            }
        },
        "FileError": {
            "__init__": {
                "return": [
                    "return"
                ],
                "filename": [
                    "str"
                ],
                "hint": [
                    "None"
                ]
            },
            "format_message": {
                "return": [
                    "str"
                ]
            }
        },
        "NoSuchOption": {
            "__init__": {
                "message": [],
                "return": [
                    "None"
                ],
                "possibilities": [
                    "possibilities"
                ],
                "ctx": [
                    "ctx"
                ],
                "option_name": [
                    "Option"
                ]
            },
            "format_message": {
                "return": [
                    "str"
                ]
            }
        },
        "UsageError": {
            "__init__": {
                "message": [],
                "return": [
                    "None"
                ],
                "ctx": [
                    "self.ctx.command"
                ]
            },
            "show": {
                "return": [
                    "None"
                ],
                "file": [
                    "file"
                ]
            }
        },
        "global": {
            "_join_param_hints": {
                "return": [],
                "param_hint": [
                    "str"
                ]
            }
        }
    },
    "click.formatting": {
        "HelpFormatter": {
            "__init__": {
                "return": [
                    "None"
                ],
                "indent_increment": [
                    "int"
                ],
                "max_width": [
                    "None"
                ],
                "width": [
                    "width"
                ]
            },
            "indent": {
                "return": [
                    "None"
                ]
            },
            "dedent": {
                "return": [
                    "pass"
                ]
            },
            "indentation": {
                "return": [
                    "indentation"
                ]
            },
            "section": {
                "name": [
                    "str"
                ],
                "return": [
                    "None"
                ]
            },
            "write_dl": {
                "col_max": [],
                "return": [
                    "None"
                ],
                "col_spacing": [
                    "int"
                ],
                "rows": [
                    "Iterable"
                ]
            },
            "write": {
                "string": [
                    "str"
                ],
                "return": [
                    "None"
                ]
            },
            "write_paragraph": {
                "return": [
                    "None"
                ]
            },
            "write_usage": {
                "args": [
                    "str"
                ],
                "prefix": [
                    "None"
                ],
                "return": [
                    "None"
                ],
                "prog": [
                    "prog"
                ]
            },
            "write_heading": {
                "return": [
                    "None"
                ],
                "heading": [
                    "heading"
                ]
            },
            "write_text": {
                "return": [
                    "None"
                ],
                "text": [
                    "text"
                ]
            },
            "getvalue": {
                "return": [
                    "str"
                ]
            }
        },
        "global": {
            "iter_rows": {
                "col_count": [
                    "int"
                ],
                "return": [
                    "Any"
                ],
                "rows": [
                    "rows"
                ]
            },
            "join_options": {
                "return": [
                    "Tuple[str, bool]"
                ],
                "options": [
                    "options"
                ]
            },
            "global": {
                "FORCED_WIDTH": []
            },
            "measure_table": {
                "return": [
                    "widths"
                ],
                "rows": [
                    "rows"
                ]
            },
            "wrap_text": {
                "preserve_paragraphs": [],
                "width": [
                    "TextWrapper"
                ],
                "return": [
                    "str"
                ],
                "subsequent_indent": [
                    "str"
                ],
                "initial_indent": [
                    "TextWrapper"
                ],
                "text": []
            }
        }
    },
    "click.globals": {
        "global": {
            "pop_context": {
                "return": [
                    "None"
                ]
            },
            "push_context": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "ctx"
                ]
            },
            "resolve_color_default": {
                "color": [
                    "None"
                ],
                "return": [
                    "TypeOfCtxColor"
                ]
            }
        }
    },
    "click.parser": {
        "_Argument": {
            "__init__": {
                "nargs": [
                    "int"
                ],
                "dest": [
                    "dest"
                ],
                "obj": [
                    "obj"
                ]
            },
            "process": {
                "return": [
                    "None"
                ],
                "state": [
                    "state"
                ],
                "value": []
            }
        },
        "_Option": {
            "__init__": {
                "action": [
                    "self.action"
                ],
                "const": [
                    "const"
                ],
                "dest": [
                    "dest"
                ],
                "nargs": [
                    "self.nargs"
                ],
                "opts": [
                    "opts"
                ],
                "obj": [
                    "obj"
                ]
            },
            "process": {
                "return": [],
                "state": [
                    "Values"
                ],
                "value": [
                    "value"
                ]
            }
        },
        "global": {
            "__getattr__": {
                "name": [
                    "str"
                ],
                "return": [
                    "Option"
                ]
            },
            "_normalize_opt": {
                "return": [
                    "str"
                ],
                "ctx": [
                    "Context"
                ],
                "opt": [
                    "opt"
                ]
            },
            "_unpack_args": {
                "return": [
                    "tuple[tuple, list]"
                ],
                "args": [
                    "deque"
                ],
                "nargs_spec": [
                    "None"
                ]
            },
            "_split_opt": {
                "return": [
                    "Tuple[str, str]"
                ],
                "opt": [
                    "str"
                ]
            }
        },
        "_ParsingState": {
            "__init__": {
                "return": [
                    "pass"
                ],
                "rargs": [
                    "rargs"
                ]
            }
        },
        "_OptionParser": {
            "__init__": {
                "return": [
                    "None"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "_match_long_opt": {
                "return": [
                    "None"
                ],
                "opt": [
                    "opt"
                ],
                "explicit_value": [
                    "None"
                ],
                "state": [
                    "optparse"
                ]
            },
            "_get_value_from_state": {
                "return": [],
                "option_name": [
                    "str"
                ],
                "option": [
                    "nargs"
                ],
                "state": [
                    "None"
                ]
            },
            "_match_short_opt": {
                "return": [
                    "None"
                ],
                "arg": [
                    "arg"
                ],
                "state": [
                    "Values"
                ]
            },
            "_process_args_for_args": {
                "return": [],
                "state": [
                    "state"
                ]
            },
            "_process_opts": {
                "return": [
                    "None"
                ],
                "state": [
                    "None"
                ],
                "arg": [
                    "arg"
                ]
            },
            "_process_args_for_options": {
                "return": [
                    "None"
                ],
                "state": [
                    "rargs"
                ]
            },
            "add_option": {
                "action": [],
                "obj": [],
                "return": [
                    "None"
                ],
                "nargs": [
                    "nargs"
                ],
                "dest": [
                    "str"
                ],
                "const": [
                    "const"
                ],
                "opts": [
                    "Tuple[str, ...]"
                ]
            },
            "add_argument": {
                "return": [
                    "None"
                ],
                "dest": [
                    "dest"
                ],
                "nargs": [
                    "nargs"
                ],
                "obj": [
                    "obj"
                ]
            },
            "parse_args": {
                "args": [
                    "List[str]"
                ],
                "return": [
                    "state"
                ]
            }
        }
    },
    "click.shell_completion": {
        "CompletionItem": {
            "__getattr__": {
                "name": [],
                "return": [
                    "Any"
                ]
            },
            "__init__": {
                "kwargs": [
                    "dict"
                ],
                "type": [
                    "type"
                ],
                "return": [
                    "None"
                ],
                "help": [
                    "str"
                ],
                "value": [
                    "value"
                ]
            }
        },
        "ShellComplete": {
            "__init__": {
                "return": [
                    "None"
                ],
                "complete_var": [],
                "prog_name": [],
                "ctx_args": [],
                "cli": [
                    "cli"
                ]
            },
            "format_completion": {
                "return": [
                    "None"
                ],
                "item": [
                    "None"
                ]
            },
            "complete": {
                "return": [
                    "str"
                ]
            },
            "get_completion_args": {
                "return": [
                    "pass"
                ]
            },
            "get_completions": {
                "return": [
                    "obj"
                ],
                "incomplete": [
                    "incomplete"
                ],
                "args": [
                    "args"
                ]
            },
            "global": {
                "name": [
                    "name"
                ],
                "source_template": [
                    "BashComplete"
                ]
            },
            "source_vars": {
                "return": [
                    "Dict[str, str]"
                ]
            },
            "source": {
                "return": [
                    "JsonDict"
                ]
            }
        },
        "BashComplete": {
            "_check_version": {
                "return": [
                    "None"
                ]
            },
            "format_completion": {
                "return": [],
                "item": [
                    "item"
                ]
            },
            "get_completion_args": {
                "return": [
                    "Tuple[Any, Any]"
                ]
            },
            "source": {
                "return": []
            }
        },
        "global": {
            "_is_incomplete_option": {
                "return": [
                    "False"
                ],
                "args": [
                    "tuple"
                ],
                "param": [
                    "Option"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "_is_incomplete_argument": {
                "param": [
                    "param"
                ],
                "ctx": [
                    "Context"
                ],
                "return": [
                    "or"
                ]
            },
            "_resolve_context": {
                "args": [
                    "args"
                ],
                "return": [
                    "None"
                ],
                "cli": [
                    "Command"
                ],
                "prog_name": [
                    "str"
                ],
                "ctx_args": [
                    "ctx"
                ]
            },
            "_resolve_incomplete": {
                "incomplete": [
                    "str"
                ],
                "args": [
                    "args"
                ],
                "ctx": [
                    "Context"
                ],
                "return": [
                    "incomplete"
                ]
            },
            "_start_of_option": {
                "return": [
                    "False"
                ],
                "ctx": [
                    "Context"
                ],
                "value": [
                    "str"
                ]
            },
            "add_completion_class": {
                "cls": [
                    "cls"
                ],
                "name": [
                    "name"
                ],
                "return": [
                    "cls"
                ]
            },
            "get_completion_class": {
                "shell": [
                    "None"
                ],
                "return": [
                    "shell"
                ]
            },
            "shell_complete": {
                "instruction": [
                    "str"
                ],
                "return": [
                    "int"
                ],
                "cli": [
                    "cli"
                ],
                "prog_name": [],
                "complete_var": [
                    "str"
                ],
                "ctx_args": []
            },
            "split_arg_string": {
                "string": [
                    "string"
                ],
                "return": [
                    "out"
                ]
            },
            "global": {
                "_available_shells": [
                    "dict"
                ]
            }
        },
        "FishComplete": {
            "format_completion": {
                "return": [
                    "str"
                ],
                "item": [
                    "item.help"
                ]
            },
            "get_completion_args": {
                "return": [
                    "Tuple[Any, Any]"
                ]
            }
        },
        "ZshComplete": {
            "format_completion": {
                "return": [
                    "item.help"
                ],
                "item": [
                    "item"
                ]
            },
            "get_completion_args": {
                "return": [
                    "incomplete"
                ]
            }
        }
    },
    "click.termui": {
        "global": {
            "_build_prompt": {
                "return": [
                    "str"
                ],
                "show_choices": [
                    "False"
                ],
                "suffix": [
                    "suffix"
                ],
                "type": [
                    "Choice"
                ],
                "show_default": [
                    "bool"
                ],
                "default": [
                    "None"
                ],
                "text": [
                    "text"
                ]
            },
            "clear": {
                "return": []
            },
            "confirm": {
                "return": [
                    "bool"
                ],
                "text": [],
                "err": [
                    "echo"
                ],
                "default": [
                    "bool"
                ],
                "abort": [
                    "bool"
                ],
                "prompt_suffix": [
                    "str"
                ],
                "show_default": [
                    "bool"
                ]
            },
            "_interpret_color": {
                "return": [
                    "color"
                ],
                "offset": [
                    "int"
                ],
                "color": [
                    "str"
                ]
            },
            "getchar": {
                "return": [],
                "echo": [
                    "False"
                ]
            },
            "_format_default": {
                "return": [
                    "Union[str, Any]"
                ],
                "default": [
                    "LazyFile"
                ]
            },
            "global": {
                "_getchar": [
                    "None"
                ],
                "visible_prompt_func": [
                    "None"
                ]
            },
            "hidden_prompt_func": {
                "return": [
                    "str"
                ],
                "prompt": [
                    "prompt"
                ]
            },
            "echo_via_pager": {
                "return": [
                    "None"
                ],
                "color": [
                    "color"
                ],
                "text_or_generator": [
                    "Union[Callable[..., Generator], str, Iterable[str]]"
                ]
            },
            "launch": {
                "wait": [
                    "False"
                ],
                "return": [
                    "None"
                ],
                "locate": [
                    "bool"
                ],
                "url": [
                    "url"
                ]
            },
            "pause": {
                "return": [
                    "None"
                ],
                "err": [
                    "bool"
                ],
                "info": [
                    "str"
                ]
            },
            "prompt": {
                "confirmation_prompt": [
                    "str"
                ],
                "err": [
                    "err"
                ],
                "hide_input": [
                    "bool"
                ],
                "show_default": [
                    "bool"
                ],
                "default": [
                    "None"
                ],
                "text": [
                    "str"
                ],
                "prompt_suffix": [
                    "str"
                ],
                "show_choices": [
                    "bool"
                ],
                "type": [
                    "None"
                ],
                "value_proc": [
                    "float"
                ],
                "return": [
                    "Any"
                ]
            },
            "secho": {
                "return": [],
                "err": [
                    "False"
                ],
                "color": [
                    "Optional"
                ],
                "message": [
                    "bytearray"
                ],
                "file": [
                    "io.TextIOWrapper"
                ],
                "nl": [],
                "styles": [
                    "None"
                ]
            },
            "raw_terminal": {
                "return": []
            },
            "style": {
                "bg": [
                    "bg"
                ],
                "blink": [
                    "Optional[bool]"
                ],
                "italic": [
                    "False"
                ],
                "reset": [
                    "True"
                ],
                "overline": [
                    "overline"
                ],
                "dim": [
                    "None"
                ],
                "reverse": [
                    "Optional[bool]"
                ],
                "fg": [
                    "str"
                ],
                "strikethrough": [
                    "Optional[bool]"
                ],
                "bold": [
                    "None"
                ],
                "return": [
                    "str"
                ],
                "underline": [
                    "None"
                ],
                "text": [
                    "str"
                ]
            },
            "unstyle": {
                "text": [
                    "str"
                ],
                "return": [
                    "str"
                ]
            }
        }
    },
    "click.testing": {
        "EchoingStdin": {
            "__getattr__": {
                "return": [],
                "x": [
                    "str"
                ]
            },
            "__init__": {
                "input": [
                    "input"
                ],
                "return": [
                    "None"
                ],
                "output": [
                    "output"
                ]
            },
            "__iter__": {
                "return": [
                    "Iterator"
                ]
            },
            "__repr__": {
                "return": [
                    "None"
                ]
            },
            "_echo": {
                "rv": [
                    "rv"
                ],
                "return": [
                    "rv"
                ]
            },
            "read1": {
                "n": [],
                "return": [
                    "None"
                ]
            },
            "readline": {
                "n": [],
                "return": [
                    "readline"
                ]
            },
            "readlines": {
                "return": []
            },
            "read": {
                "n": [
                    "int"
                ],
                "return": [
                    "read"
                ]
            }
        },
        "CliRunner": {
            "__init__": {
                "catch_exceptions": [
                    "False"
                ],
                "return": [
                    "return"
                ],
                "echo_stdin": [
                    "False"
                ],
                "charset": [
                    "charset"
                ],
                "env": [
                    "dict"
                ]
            },
            "invoke": {
                "color": [
                    "bool"
                ],
                "catch_exceptions": [
                    "None"
                ],
                "args": [
                    "cli.main"
                ],
                "env": [
                    "env"
                ],
                "return": [],
                "cli": [
                    "cli"
                ],
                "extra": [
                    "extra"
                ],
                "input": [
                    "str"
                ]
            },
            "get_default_prog_name": {
                "return": [
                    "cli.name"
                ],
                "cli": [
                    "Command"
                ]
            },
            "isolation": {
                "color": [
                    "bool"
                ],
                "env": [
                    "Dict[str, str]"
                ],
                "return": [
                    "isolation"
                ],
                "input": [
                    "input"
                ]
            },
            "isolated_filesystem": {
                "return": [
                    "ContextManager[None]"
                ],
                "temp_dir": [
                    "os.PathLike"
                ]
            },
            "make_env": {
                "return": [
                    "Env"
                ],
                "overrides": [
                    "None"
                ]
            }
        },
        "BytesIOCopy": {
            "__init__": {
                "return": [
                    "None"
                ],
                "copy_to": []
            },
            "flush": {
                "return": [
                    "None"
                ]
            },
            "write": {
                "return": [
                    "write"
                ],
                "b": [
                    "bytes"
                ]
            }
        },
        "Result": {
            "__init__": {
                "stdout_bytes": [],
                "output_bytes": [
                    "bytes"
                ],
                "runner": [
                    "runner"
                ],
                "stderr_bytes": [
                    "bytes"
                ],
                "exc_info": [
                    "tuple"
                ],
                "exception": [
                    "ExpectTimeout"
                ],
                "return_value": [
                    "None"
                ],
                "exit_code": []
            },
            "__repr__": {
                "return": [
                    "None"
                ]
            }
        },
        "StreamMixer": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "_NamedTextIOWrapper": {
            "__init__": {
                "return": [],
                "kwargs": [
                    "dict"
                ],
                "name": [
                    "name"
                ],
                "mode": [
                    "mode"
                ],
                "buffer": [
                    "memoryview"
                ]
            },
            "__next__": {
                "return": [
                    "line"
                ]
            }
        },
        "global": {
            "_pause_echo": {
                "stream": [
                    "None"
                ],
                "return": []
            },
            "make_input_stream": {
                "charset": [
                    "str"
                ],
                "input": [
                    "input"
                ],
                "return": [
                    "rv"
                ]
            }
        }
    },
    "click.types": {
        "ParamType": {
            "__call__": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "None"
                ],
                "param": [
                    "None"
                ],
                "value": [
                    "convert"
                ]
            },
            "convert": {
                "return": [
                    "value"
                ],
                "ctx": [
                    "ctx"
                ],
                "param": [
                    "param"
                ],
                "value": [
                    "value"
                ]
            },
            "fail": {
                "return": [
                    "None"
                ],
                "message": [
                    "str"
                ],
                "ctx": [
                    "Context"
                ],
                "param": [
                    "param"
                ]
            },
            "get_metavar": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "None"
                ],
                "param": [
                    "Parameter"
                ]
            },
            "get_missing_message": {
                "return": [],
                "param": [
                    "Argument"
                ],
                "ctx": [
                    "click.Context"
                ]
            },
            "global": {
                "is_composite": [
                    "ParamType"
                ],
                "arity": [
                    "int"
                ],
                "envvar_list_splitter": [
                    "t.ClassVar[str]"
                ],
                "name": [
                    "str"
                ]
            },
            "shell_complete": {
                "return": [],
                "incomplete": [
                    "incomplete"
                ],
                "param": [
                    "Argument"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "split_envvar_value": {
                "rv": [
                    "rv"
                ],
                "return": [
                    "List[str]"
                ]
            },
            "to_info_dict": {
                "return": [
                    "dict"
                ]
            }
        },
        "Choice": {
            "__init__": {
                "return": [
                    "None"
                ],
                "case_sensitive": [
                    "False"
                ],
                "choices": [
                    "Tuple"
                ]
            },
            "__repr__": {
                "return": [
                    "str"
                ]
            },
            "_normalized_mapping": {
                "ctx": [
                    "None"
                ],
                "return": [
                    "self.choices"
                ]
            },
            "convert": {
                "ctx": [
                    "Context"
                ],
                "value": [
                    "convert"
                ],
                "return": [
                    "normalized"
                ],
                "param": [
                    "Parameter"
                ]
            },
            "get_invalid_choice_message": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            },
            "get_metavar": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "str"
                ],
                "param": [
                    "Error"
                ]
            },
            "get_missing_message": {
                "ctx": [
                    "Context"
                ],
                "param": [
                    "Parameter"
                ],
                "return": []
            },
            "normalize_choice": {
                "choice": [
                    "enum.Enum"
                ],
                "return": [],
                "ctx": [
                    "Context"
                ]
            },
            "shell_complete": {
                "ctx": [
                    "Context"
                ],
                "return": [
                    "List[CompletionItem]"
                ],
                "param": [
                    "click.Parameter"
                ],
                "incomplete": [
                    "incomplete"
                ]
            },
            "to_info_dict": {
                "return": []
            }
        },
        "DateTime": {
            "__init__": {
                "formats": []
            },
            "__repr__": {
                "return": [
                    "str"
                ]
            },
            "_try_to_convert_date": {
                "value": [
                    "str"
                ],
                "format": [
                    "str"
                ],
                "return": [
                    "Union[datetime.datetime, None]"
                ]
            },
            "convert": {
                "ctx": [
                    "click.Context"
                ],
                "value": [
                    "value"
                ],
                "param": [
                    "param"
                ],
                "return": [
                    "DateTime"
                ]
            },
            "get_metavar": {
                "return": [
                    "str"
                ],
                "param": [
                    "Parameter"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "to_info_dict": {
                "return": []
            }
        },
        "File": {
            "__init__": {
                "return": [
                    "None"
                ],
                "atomic": [
                    "False"
                ],
                "mode": [
                    "mode"
                ],
                "errors": [
                    "str"
                ],
                "lazy": [
                    "None"
                ],
                "encoding": [
                    "Optional[str]"
                ]
            },
            "convert": {
                "ctx": [
                    "str"
                ],
                "param": [
                    "Option"
                ],
                "return": [
                    "LazyFile"
                ],
                "value": []
            },
            "global": {
                "envvar_list_splitter": [
                    "str"
                ]
            },
            "resolve_lazy_flag": {
                "return": [
                    "False"
                ],
                "value": [
                    "PathLike"
                ]
            },
            "shell_complete": {
                "return": [
                    "List[CompletionItem]"
                ],
                "param": [
                    "Parameter"
                ],
                "ctx": [
                    "click.Context"
                ],
                "incomplete": [
                    "incomplete"
                ]
            },
            "to_info_dict": {
                "return": [
                    "dict"
                ]
            }
        },
        "FloatRange": {
            "__init__": {
                "max": [],
                "clamp": [
                    "False"
                ],
                "min_open": [
                    "False"
                ],
                "max_open": [
                    "or"
                ],
                "min": [
                    "min"
                ],
                "return": [
                    "None"
                ]
            },
            "_clamp": {
                "bound": [
                    "None"
                ],
                "return": [
                    "int"
                ],
                "dir": [
                    "None"
                ],
                "open": [
                    "bool"
                ]
            }
        },
        "FuncParamType": {
            "__init__": {
                "return": [],
                "func": [
                    "None"
                ]
            },
            "convert": {
                "return": [
                    "self.func"
                ],
                "ctx": [
                    "Context"
                ],
                "param": [],
                "value": [
                    "self.func"
                ]
            },
            "to_info_dict": {
                "return": []
            }
        },
        "Path": {
            "__init__": {
                "allow_dash": [
                    "bool"
                ],
                "executable": [
                    "bool"
                ],
                "exists": [
                    "exists"
                ],
                "path_type": [
                    "Optional[Callable]"
                ],
                "dir_okay": [
                    "click.Path"
                ],
                "resolve_path": [
                    "bool"
                ],
                "readable": [
                    "bool"
                ],
                "file_okay": [
                    "True"
                ],
                "writable": [
                    "Path"
                ]
            },
            "coerce_path_result": {
                "value": [
                    "os.PathLike[str]"
                ],
                "return": [
                    "self.type"
                ]
            },
            "convert": {
                "ctx": [
                    "click.Context"
                ],
                "value": [
                    "pathlib.Path"
                ],
                "param": [
                    "None"
                ],
                "return": [
                    "Path"
                ]
            },
            "global": {
                "envvar_list_splitter": [
                    "Path"
                ]
            },
            "shell_complete": {
                "ctx": [
                    "Context"
                ],
                "incomplete": [
                    "incomplete"
                ],
                "param": [
                    "param"
                ],
                "return": [
                    "CompletionItem"
                ]
            },
            "to_info_dict": {
                "return": []
            }
        },
        "Tuple": {
            "__init__": {
                "return": [
                    "None"
                ],
                "types": [
                    "List"
                ]
            },
            "convert": {
                "return": [
                    "tuple"
                ],
                "value": [
                    "self.types"
                ],
                "param": [
                    "ClickException"
                ],
                "ctx": [
                    "Context"
                ]
            },
            "to_info_dict": {
                "return": []
            }
        },
        "_NumberRangeBase": {
            "__init__": {
                "max": [
                    "max"
                ],
                "return": [
                    "None"
                ],
                "min_open": [
                    "bool"
                ],
                "clamp": [
                    "bool"
                ],
                "max_open": [
                    "bool"
                ],
                "min": [
                    "float"
                ]
            },
            "__repr__": {
                "return": [
                    "str"
                ]
            },
            "_clamp": {
                "bound": [
                    "None"
                ],
                "return": [],
                "open": [
                    "open"
                ],
                "dir": [
                    "dir"
                ]
            },
            "_describe_range": {
                "return": [
                    "str"
                ]
            },
            "convert": {
                "ctx": [],
                "return": [
                    "rv"
                ],
                "value": [
                    "value"
                ],
                "param": [
                    "ParamType"
                ]
            },
            "to_info_dict": {
                "return": []
            }
        },
        "BoolParamType": {
            "__repr__": {
                "return": []
            },
            "convert": {
                "param": [
                    "ParamType"
                ],
                "return": [
                    "bool"
                ],
                "value": [
                    "value"
                ],
                "ctx": [
                    "Context"
                ]
            }
        },
        "StringParamType": {
            "__repr__": {
                "return": []
            },
            "convert": {
                "return": [
                    "str"
                ],
                "ctx": [
                    "click.Context"
                ],
                "value": [
                    "bytes"
                ],
                "param": [
                    "Option"
                ]
            }
        },
        "UnprocessedParamType": {
            "__repr__": {
                "return": []
            },
            "convert": {
                "value": [
                    "value"
                ],
                "ctx": [
                    "Context"
                ],
                "return": [
                    "value"
                ],
                "param": [
                    "object"
                ]
            }
        },
        "IntParamType": {
            "__repr__": {
                "return": [
                    "str"
                ]
            }
        },
        "IntRange": {
            "_clamp": {
                "return": [
                    "bound"
                ],
                "dir": [
                    "bound"
                ],
                "bound": [
                    "float"
                ],
                "open": [
                    "open"
                ]
            }
        },
        "UUIDParameterType": {
            "__repr__": {
                "return": [
                    "None"
                ]
            },
            "convert": {
                "ctx": [
                    "ctx"
                ],
                "param": [
                    "ParamType"
                ],
                "return": [
                    "UUID"
                ],
                "value": []
            }
        },
        "FloatParamType": {
            "__repr__": {
                "return": [
                    "return"
                ]
            }
        },
        "global": {
            "_is_file_like": {
                "return": [
                    "False"
                ],
                "value": [
                    "value"
                ]
            },
            "convert_type": {
                "default": [
                    "None"
                ],
                "return": [
                    "FuncParamType"
                ],
                "ty": [
                    "str"
                ]
            }
        },
        "_NumberParamTypeBase": {
            "convert": {
                "ctx": [
                    "Context"
                ],
                "param": [
                    "param"
                ],
                "return": [
                    "float"
                ],
                "value": [
                    "str"
                ]
            },
            "global": {
                "_number_class": [
                    "float"
                ]
            }
        },
        "OptionHelpExtra": {
            "global": {
                "required": [
                    "str"
                ],
                "envvars": [
                    "tuple[str, ...]"
                ],
                "default": [
                    "OptionHelpExtra"
                ],
                "range": [
                    "range"
                ]
            }
        }
    },
    "click.utils": {
        "KeepOpenFile": {
            "__exit__": {
                "return": [
                    "None"
                ],
                "exc_value": [
                    "Optional[BaseException]"
                ],
                "tb": [
                    "tb"
                ],
                "exc_type": [
                    "None"
                ]
            },
            "__enter__": {
                "return": [
                    "self"
                ]
            },
            "__getattr__": {
                "name": [],
                "return": []
            },
            "__init__": {
                "return": [],
                "file": [
                    "file"
                ]
            },
            "__iter__": {
                "return": []
            },
            "__repr__": {
                "return": [
                    "str"
                ]
            }
        },
        "LazyFile": {
            "__getattr__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "__exit__": {
                "tb": [],
                "exc_value": [
                    "None"
                ],
                "exc_type": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__enter__": {
                "return": [
                    "self"
                ]
            },
            "__init__": {
                "encoding": [],
                "atomic": [
                    "False"
                ],
                "errors": [
                    "str"
                ],
                "filename": [
                    "pathlib.Path"
                ],
                "mode": [
                    "str"
                ]
            },
            "__repr__": {
                "return": [
                    "str"
                ]
            },
            "close_intelligently": {
                "return": []
            },
            "__iter__": {
                "return": [
                    "Iterator[T]"
                ]
            },
            "close": {
                "return": [
                    "None"
                ]
            },
            "open": {
                "return": [
                    "rv"
                ]
            }
        },
        "PacifyFlushWrapper": {
            "__getattr__": {
                "attr": [],
                "return": [
                    "wrapped"
                ]
            },
            "__init__": {
                "return": [
                    "TypeError"
                ],
                "wrapped": [
                    "wrapped"
                ]
            },
            "flush": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_detect_program_name": {
                "return": [
                    "str"
                ],
                "_main": [
                    "ModuleType"
                ],
                "path": [
                    "None"
                ]
            },
            "_posixify": {
                "return": [
                    "str"
                ],
                "name": [
                    "str"
                ]
            },
            "_expand_args": {
                "env": [
                    "True"
                ],
                "return": [
                    "out"
                ],
                "glob_recursive": [
                    "recursive"
                ],
                "args": [
                    "Iterable"
                ],
                "user": [
                    "env"
                ]
            },
            "echo": {
                "nl": [
                    "nl"
                ],
                "message": [
                    "message"
                ],
                "err": [
                    "err"
                ],
                "color": [
                    "color"
                ],
                "return": [
                    "None"
                ],
                "file": [
                    "Optional[TextIO]"
                ]
            },
            "format_filename": {
                "return": [
                    "filename"
                ],
                "filename": [
                    "filename"
                ],
                "shorten": [
                    "None"
                ]
            },
            "get_app_dir": {
                "app_name": [
                    "os.path.join"
                ],
                "roaming": [
                    "True"
                ],
                "force_posix": [
                    "False"
                ],
                "return": [
                    "xdgfile"
                ]
            },
            "get_binary_stream": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "get_text_stream": {
                "encoding": [],
                "return": [
                    "opener"
                ],
                "errors": [],
                "name": [
                    "str"
                ]
            },
            "make_default_short_help": {
                "return": [
                    "None"
                ],
                "max_length": [
                    "int"
                ],
                "help": [
                    "str"
                ]
            },
            "make_str": {
                "return": [
                    "str"
                ],
                "value": [
                    "Any"
                ]
            },
            "open_file": {
                "atomic": [
                    "bool"
                ],
                "lazy": [
                    "False"
                ],
                "encoding": [
                    "encoding"
                ],
                "mode": [
                    "mode"
                ],
                "return": [
                    "f"
                ],
                "filename": [
                    "os.PathLike"
                ],
                "errors": [
                    "str"
                ]
            },
            "safecall": {
                "return": [
                    "func"
                ],
                "func": [
                    "func"
                ]
            }
        }
    }
}