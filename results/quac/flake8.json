{
    "flake8": {
        "global": {
            "configure_logging": {
                "verbosity": [
                    "builtins.int"
                ],
                "filename": [],
                "logformat": [
                    "builtins.str"
                ],
                "return": []
            }
        }
    },
    "flake8.checker": {
        "global": {
            "_mp_prefork": {
                "plugins": [],
                "options": [],
                "return": [
                    "typing.Generator[typing.Any, typing.Any, typing.Any]"
                ]
            },
            "_mp_init": {
                "argv": [],
                "return": []
            },
            "_mp_run": {
                "filename": [],
                "return": []
            },
            "_try_initialize_processpool": {
                "job_count": [],
                "argv": [],
                "return": []
            },
            "find_offset": {
                "offset": [
                    "builtins.int"
                ],
                "mapping": [
                    "typing.Iterable[_typeshed.SupportsGetItem[builtins.int, builtins.int]]"
                ],
                "return": [
                    "builtins.int"
                ]
            }
        },
        "Manager": {
            "__init__": {
                "style_guide": [
                    "flake8.api.legacy.StyleGuide"
                ],
                "plugins": [],
                "argv": [],
                "return": []
            },
            "_process_statistics": {
                "return": []
            },
            "_job_count": {
                "return": [
                    "builtins.int"
                ]
            },
            "_handle_results": {
                "filename": [],
                "results": [
                    "typing.Iterable[builtins.tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any]]"
                ],
                "return": [
                    "builtins.int"
                ]
            },
            "report": {
                "return": [
                    "builtins.tuple[builtins.int, builtins.int]"
                ]
            },
            "run_parallel": {
                "return": []
            },
            "run_serial": {
                "return": []
            },
            "run": {
                "return": []
            },
            "start": {
                "return": []
            },
            "stop": {
                "return": []
            }
        },
        "FileChecker": {
            "__init__": {
                "filename": [],
                "plugins": [],
                "options": [],
                "return": []
            },
            "__repr__": {
                "return": [
                    "builtins.str"
                ]
            },
            "_make_processor": {
                "return": [
                    "flake8.processor.FileProcessor"
                ]
            },
            "report": {
                "error_code": [],
                "line_number": [],
                "column": [],
                "text": [
                    "re.Pattern"
                ],
                "return": []
            },
            "run_check": {
                "plugin": [
                    "flake8.plugins.finder.LoadedPlugin"
                ],
                "arguments": [],
                "return": []
            },
            "_extract_syntax_information": {
                "exception": [
                    "re.error"
                ],
                "return": [
                    "builtins.tuple[builtins.int, builtins.int]"
                ]
            },
            "run_ast_checks": {
                "return": []
            },
            "run_logical_checks": {
                "return": []
            },
            "run_physical_checks": {
                "physical_line": [],
                "return": []
            },
            "process_tokens": {
                "return": []
            },
            "run_checks": {
                "return": [
                    "builtins.tuple[typing.Any, typing.Any, typing.Any]"
                ]
            },
            "handle_newline": {
                "token_type": [],
                "return": []
            },
            "check_physical_eol": {
                "token": [
                    "tokenize.TokenInfo"
                ],
                "prev_physical": [],
                "return": []
            }
        }
    },
    "flake8.discover_files": {
        "global": {
            "_filenames_from": {
                "arg": [],
                "predicate": [
                    "typing.Callable[[typing.Any], typing.Any]"
                ],
                "return": [
                    "typing.Generator[typing.Any, typing.Any, typing.Any]"
                ]
            },
            "expand_paths": {
                "paths": [
                    "builtins.list[builtins.str]"
                ],
                "stdin_display_name": [
                    "builtins.str"
                ],
                "filename_patterns": [
                    "typing.Iterable[typing.Any]"
                ],
                "exclude": [
                    "typing.Iterable[typing.Any]"
                ],
                "return": [
                    "typing.Generator[builtins.str, typing.Any, typing.Any]"
                ]
            }
        }
    },
    "flake8.exceptions": {
        "FailedToLoadPlugin": {
            "__init__": {
                "plugin_name": [],
                "exception": [],
                "return": []
            },
            "__str__": {
                "return": [
                    "numbers.Real"
                ]
            }
        },
        "PluginRequestedUnknownParameters": {
            "__init__": {
                "plugin_name": [],
                "exception": [],
                "return": []
            },
            "__str__": {
                "return": [
                    "numbers.Real"
                ]
            }
        },
        "PluginExecutionFailed": {
            "__init__": {
                "filename": [],
                "plugin_name": [],
                "exception": [],
                "return": []
            },
            "__str__": {
                "return": []
            }
        }
    },
    "flake8.processor": {
        "global": {
            "is_eol_token": {
                "token": [
                    "_typeshed.SupportsGetItem[builtins.int, typing.Sequence[builtins.int]]"
                ],
                "return": []
            },
            "is_multiline_string": {
                "token": [
                    "tokenize.TokenInfo"
                ],
                "return": []
            },
            "token_is_newline": {
                "token": [
                    "_typeshed.SupportsGetItem[builtins.int, typing.Any]"
                ],
                "return": [
                    "builtins.bool"
                ]
            },
            "count_parentheses": {
                "current_parentheses_count": [
                    "builtins.int"
                ],
                "token_text": [],
                "return": [
                    "builtins.int"
                ]
            },
            "expand_indent": {
                "line": [
                    "builtins.str"
                ],
                "return": [
                    "builtins.int"
                ]
            },
            "mutate_string": {
                "text": [
                    "typing.Sequence[typing.Any]"
                ],
                "return": [
                    "typing.Sequence[typing.Any]"
                ]
            }
        },
        "FileProcessor": {
            "__init__": {
                "filename": [],
                "options": [
                    "flake8.processor.FileProcessor"
                ],
                "lines": [],
                "return": []
            },
            "file_tokens": {
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "fstring_start": {
                "lineno": [],
                "return": []
            },
            "tstring_start": {
                "lineno": [],
                "return": []
            },
            "multiline_string": {
                "token": [
                    "tokenize.TokenInfo"
                ],
                "return": [
                    "typing.Generator[typing.Any, typing.Any, typing.Any]"
                ]
            },
            "reset_blank_before": {
                "return": []
            },
            "delete_first_token": {
                "return": []
            },
            "visited_new_blank_line": {
                "return": []
            },
            "update_state": {
                "mapping": [
                    "_typeshed.SupportsGetItem[builtins.int, _typeshed.SupportsGetItem[builtins.int, builtins.tuple[builtins.int, builtins.int]]]"
                ],
                "return": []
            },
            "update_checker_state_for": {
                "plugin": [
                    "flake8.plugins.finder.LoadedPlugin"
                ],
                "return": []
            },
            "next_logical_line": {
                "return": []
            },
            "build_logical_line_tokens": {
                "return": [
                    "builtins.tuple[builtins.list[typing.Any], builtins.list[typing.Any], builtins.list[builtins.tuple[builtins.int, builtins.tuple[typing.Any, typing.Any]]]]"
                ]
            },
            "build_ast": {
                "return": []
            },
            "build_logical_line": {
                "return": [
                    "builtins.tuple[builtins.str, typing.Any, typing.Any]"
                ]
            },
            "keyword_arguments_for": {
                "parameters": [
                    "typing.Mapping[typing.Any, typing.Any]"
                ],
                "arguments": [
                    "typing.Collection[typing.Any]"
                ],
                "return": [
                    "builtins.dict[typing.Any, typing.Any]"
                ]
            },
            "generate_tokens": {
                "return": [
                    "typing.Generator[_typeshed.SupportsGetItem[builtins.int, _typeshed.SupportsGetItem[builtins.int, typing.Any]], typing.Any, typing.Any]"
                ]
            },
            "_noqa_line_range": {
                "min_line": [
                    "builtins.int"
                ],
                "max_line": [
                    "builtins.int"
                ],
                "return": [
                    "builtins.dict[typing.Any, typing.Any]"
                ]
            },
            "_noqa_line_mapping": {
                "return": [
                    "builtins.dict[typing.Any, typing.Any]"
                ]
            },
            "noqa_line_for": {
                "line_number": [],
                "return": []
            },
            "next_line": {
                "return": [
                    "builtins.str"
                ]
            },
            "read_lines": {
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "read_lines_from_filename": {
                "return": []
            },
            "read_lines_from_stdin": {
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "should_ignore_file": {
                "return": [
                    "builtins.bool"
                ]
            },
            "strip_utf_bom": {
                "return": []
            }
        }
    },
    "flake8.statistics": {
        "Statistics": {
            "__init__": {
                "return": []
            },
            "error_codes": {
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "record": {
                "error": [],
                "return": []
            },
            "statistics_for": {
                "prefix": [],
                "filename": [],
                "return": [
                    "typing.Generator[typing.Any, typing.Any, typing.Any]"
                ]
            }
        },
        "Key": {
            "create_from": {
                "error": [
                    "flake8.statistics.Key"
                ],
                "return": []
            },
            "matches": {
                "prefix": [],
                "filename": [],
                "return": []
            }
        },
        "Statistic": {
            "__init__": {
                "error_code": [],
                "filename": [],
                "message": [],
                "count": [],
                "return": []
            },
            "create_from": {
                "error": [
                    "flake8.violation.Violation"
                ],
                "return": []
            },
            "increment": {
                "return": []
            }
        }
    },
    "flake8.style_guide": {
        "global": {
            "_explicitly_chosen": {
                "option": [],
                "extend": [],
                "return": [
                    "builtins.tuple"
                ]
            },
            "_select_ignore": {
                "option": [
                    "typing.Iterable[typing.Any]"
                ],
                "default": [
                    "typing.Iterable[typing.Any]"
                ],
                "extended_default": [
                    "typing.Iterable[typing.Any]"
                ],
                "extend": [],
                "return": [
                    "builtins.tuple"
                ]
            }
        },
        "DecisionEngine": {
            "__init__": {
                "options": [
                    "flake8.options.manager.OptionManager"
                ],
                "return": []
            },
            "was_selected": {
                "code": [
                    "builtins.str"
                ],
                "return": []
            },
            "was_ignored": {
                "code": [
                    "builtins.str"
                ],
                "return": []
            },
            "make_decision": {
                "code": [
                    "builtins.str"
                ],
                "return": [
                    "flake8.style_guide.Decision"
                ]
            },
            "decision_for": {
                "code": [
                    "builtins.str"
                ],
                "return": [
                    "flake8.style_guide.Decision"
                ]
            }
        },
        "StyleGuideManager": {
            "__init__": {
                "options": [
                    "flake8.options.manager.OptionManager"
                ],
                "formatter": [],
                "decider": [],
                "return": []
            },
            "populate_style_guides_with": {
                "options": [],
                "return": [
                    "typing.Generator[typing.Any, typing.Any, typing.Any]"
                ]
            },
            "_style_guide_for": {
                "filename": [],
                "return": []
            },
            "processing_file": {
                "filename": [],
                "return": [
                    "typing.Generator[flake8.style_guide.StyleGuide, typing.Any, typing.Any]"
                ]
            },
            "handle_error": {
                "code": [],
                "filename": [],
                "line_number": [],
                "column_number": [],
                "text": [],
                "physical_line": [],
                "return": []
            }
        },
        "StyleGuide": {
            "__init__": {
                "options": [
                    "flake8.options.manager.OptionManager"
                ],
                "formatter": [],
                "stats": [],
                "filename": [],
                "decider": [],
                "return": []
            },
            "__repr__": {
                "return": [
                    "builtins.str"
                ]
            },
            "copy": {
                "filename": [],
                "extend_ignore_with": [],
                "return": [
                    "flake8.style_guide.StyleGuide"
                ]
            },
            "processing_file": {
                "filename": [],
                "return": [
                    "typing.Generator[flake8.style_guide.StyleGuide, typing.Any, typing.Any]"
                ]
            },
            "applies_to": {
                "filename": [],
                "return": [
                    "builtins.bool"
                ]
            },
            "should_report_error": {
                "code": [],
                "return": []
            },
            "handle_error": {
                "code": [],
                "filename": [],
                "line_number": [],
                "column_number": [
                    "builtins.int"
                ],
                "text": [],
                "physical_line": [],
                "return": [
                    "builtins.int"
                ]
            }
        }
    },
    "flake8.utils": {
        "global": {
            "parse_comma_separated_list": {
                "value": [
                    "builtins.str"
                ],
                "regexp": [
                    "re.Pattern"
                ],
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "_tokenize_files_to_codes_mapping": {
                "value": [
                    "typing.Sized"
                ],
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "parse_files_to_codes_mapping": {
                "value_": [
                    "builtins.str"
                ],
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "normalize_paths": {
                "paths": [
                    "builtins.list[typing.Any]"
                ],
                "parent": [
                    "builtins.str"
                ],
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "normalize_path": {
                "path": [
                    "builtins.str"
                ],
                "parent": [
                    "builtins.str"
                ],
                "return": []
            },
            "stdin_get_value": {
                "return": []
            },
            "stdin_get_lines": {
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "is_using_stdin": {
                "paths": [
                    "typing.Collection[builtins.str]"
                ],
                "return": [
                    "builtins.bool"
                ]
            },
            "fnmatch": {
                "filename": [],
                "patterns": [
                    "typing.Iterable[typing.Any]"
                ],
                "return": [
                    "builtins.bool"
                ]
            },
            "matches_filename": {
                "path": [],
                "patterns": [
                    "typing.Iterable[typing.Any]"
                ],
                "log_message": [],
                "logger": [
                    "logging.LoggerAdapter"
                ],
                "return": [
                    "builtins.bool"
                ]
            },
            "get_python_version": {
                "return": [
                    "builtins.str"
                ]
            },
            "normalize_pypi_name": {
                "s": [],
                "return": []
            }
        }
    },
    "flake8.violation": {
        "global": {
            "_find_noqa": {
                "physical_line": [],
                "return": [
                    "re.Match"
                ]
            }
        },
        "Violation": {
            "is_inline_ignored": {
                "disable_noqa": [],
                "return": [
                    "builtins.bool"
                ]
            }
        }
    },
    "flake8.api.legacy": {
        "global": {
            "get_style_guide": {
                "kwargs": [],
                "return": [
                    "flake8.api.legacy.StyleGuide"
                ]
            }
        },
        "Report": {
            "__init__": {
                "application": [
                    "flake8.main.application.Application"
                ],
                "return": []
            },
            "total_errors": {
                "return": []
            },
            "get_statistics": {
                "violation": [],
                "return": [
                    "builtins.list[builtins.str]"
                ]
            }
        },
        "StyleGuide": {
            "__init__": {
                "application": [
                    "flake8.main.application.Application"
                ],
                "return": []
            },
            "options": {
                "return": []
            },
            "paths": {
                "return": []
            },
            "check_files": {
                "paths": [],
                "return": [
                    "flake8.api.legacy.Report"
                ]
            },
            "excluded": {
                "filename": [],
                "parent": [],
                "return": []
            },
            "init_report": {
                "reporter": [
                    "builtins.type"
                ],
                "return": []
            },
            "input_file": {
                "filename": [],
                "lines": [],
                "expected": [],
                "line_offset": [
                    "builtins.int"
                ],
                "return": [
                    "flake8.api.legacy.Report"
                ]
            }
        }
    },
    "flake8.formatting.base": {
        "BaseFormatter": {
            "__init__": {
                "options": [
                    "flake8.formatting.base.BaseFormatter"
                ],
                "return": []
            },
            "after_init": {
                "return": []
            },
            "beginning": {
                "filename": [],
                "return": []
            },
            "finished": {
                "filename": [],
                "return": []
            },
            "start": {
                "return": []
            },
            "handle": {
                "error": [
                    "flake8.violation.Violation"
                ],
                "return": []
            },
            "format": {
                "error": [],
                "return": []
            },
            "show_statistics": {
                "statistics": [
                    "flake8.statistics.Statistics"
                ],
                "return": []
            },
            "show_benchmarks": {
                "benchmarks": [
                    "typing.Iterable[builtins.tuple[typing.Any, builtins.int]]"
                ],
                "return": []
            },
            "show_source": {
                "error": [
                    "flake8.violation.Violation"
                ],
                "return": [
                    "builtins.str"
                ]
            },
            "_write": {
                "output": [
                    "json.encoder.JSONEncoder"
                ],
                "return": []
            },
            "write": {
                "line": [
                    "json.encoder.JSONEncoder"
                ],
                "source": [
                    "json.encoder.JSONEncoder"
                ],
                "return": []
            },
            "stop": {
                "return": []
            }
        }
    },
    "flake8.formatting.default": {
        "SimpleFormatter": {
            "format": {
                "error": [
                    "flake8.violation.Violation"
                ],
                "return": [
                    "numbers.Real"
                ]
            }
        },
        "Default": {
            "after_init": {
                "return": []
            }
        },
        "FilenameOnly": {
            "after_init": {
                "return": []
            },
            "show_source": {
                "error": [],
                "return": []
            },
            "format": {
                "error": [
                    "flake8.statistics.Statistic"
                ],
                "return": []
            }
        },
        "Nothing": {
            "format": {
                "error": [],
                "return": []
            },
            "show_source": {
                "error": [],
                "return": []
            }
        }
    },
    "flake8.main.application": {
        "Application": {
            "__init__": {
                "return": []
            },
            "exit_code": {
                "return": [
                    "builtins.int"
                ]
            },
            "make_formatter": {
                "return": []
            },
            "make_guide": {
                "return": []
            },
            "make_file_checker_manager": {
                "argv": [],
                "return": []
            },
            "run_checks": {
                "return": []
            },
            "report_benchmarks": {
                "return": []
            },
            "report_errors": {
                "return": []
            },
            "report_statistics": {
                "return": []
            },
            "initialize": {
                "argv": [],
                "return": []
            },
            "report": {
                "return": []
            },
            "_run": {
                "argv": [],
                "return": []
            },
            "run": {
                "argv": [],
                "return": []
            }
        }
    },
    "flake8.main.cli": {
        "global": {
            "main": {
                "argv": [
                    "typing.Sequence[typing.Any]"
                ],
                "return": [
                    "builtins.int"
                ]
            }
        }
    },
    "flake8.main.debug": {
        "global": {
            "information": {
                "version": [],
                "plugins": [
                    "flake8.plugins.finder.Plugins"
                ],
                "return": [
                    "builtins.dict[builtins.str, builtins.list[builtins.str]]"
                ]
            }
        }
    },
    "flake8.main.options": {
        "global": {
            "stage1_arg_parser": {
                "return": [
                    "argparse.ArgumentParser"
                ]
            },
            "register_default_options": {
                "option_manager": [
                    "flake8.options.manager.OptionManager"
                ],
                "return": []
            }
        },
        "JobsArgument": {
            "__init__": {
                "arg": [
                    "builtins.str"
                ],
                "return": []
            },
            "__repr__": {
                "return": [
                    "builtins.str"
                ]
            },
            "__str__": {
                "return": [
                    "builtins.str"
                ]
            }
        }
    },
    "flake8.options.aggregator": {
        "global": {
            "aggregate_options": {
                "manager": [
                    "flake8.options.manager.OptionManager"
                ],
                "cfg": [
                    "importlib.metadata.Deprecated"
                ],
                "cfg_dir": [],
                "argv": [],
                "return": []
            }
        }
    },
    "flake8.options.config": {
        "global": {
            "_stat_key": {
                "s": [],
                "return": [
                    "builtins.tuple[typing.Any, typing.Any]"
                ]
            },
            "_find_config_file": {
                "path": [],
                "return": []
            },
            "load_config": {
                "config": [],
                "extra": [
                    "typing.Iterable[typing.Any]"
                ],
                "isolated": [
                    "builtins.bool"
                ],
                "return": [
                    "builtins.tuple[configparser.RawConfigParser, typing.Any]"
                ]
            },
            "parse_config": {
                "option_manager": [
                    "flake8.options.manager.OptionManager"
                ],
                "cfg": [
                    "importlib.metadata.Deprecated"
                ],
                "cfg_dir": [],
                "return": [
                    "builtins.dict[typing.Any, typing.Iterable[typing.Any]]"
                ]
            }
        }
    },
    "flake8.options.manager": {
        "global": {
            "_flake8_normalize": {
                "value": [
                    "builtins.str"
                ],
                "args": [],
                "comma_separated_list": [
                    "builtins.bool"
                ],
                "normalize_paths": [
                    "builtins.bool"
                ],
                "return": [
                    "builtins.str"
                ]
            }
        },
        "Option": {
            "__init__": {
                "short_option_name": [
                    "builtins.str"
                ],
                "long_option_name": [
                    "typing.Sequence[typing.Any]"
                ],
                "action": [],
                "default": [],
                "type": [
                    "functools.partial"
                ],
                "dest": [],
                "nargs": [],
                "const": [],
                "choices": [],
                "help": [],
                "metavar": [],
                "required": [],
                "parse_from_config": [
                    "builtins.bool"
                ],
                "comma_separated_list": [
                    "builtins.bool"
                ],
                "normalize_paths": [
                    "builtins.bool"
                ],
                "return": []
            },
            "filtered_option_kwargs": {
                "return": [
                    "builtins.dict[typing.Any, typing.Any]"
                ]
            },
            "__repr__": {
                "return": [
                    "builtins.str"
                ]
            },
            "normalize": {
                "value": [
                    "builtins.str"
                ],
                "normalize_args": [],
                "return": [
                    "builtins.str"
                ]
            },
            "to_argparse": {
                "return": [
                    "builtins.tuple[typing.Any, typing.Any]"
                ]
            }
        },
        "OptionManager": {
            "__init__": {
                "version": [],
                "plugin_versions": [],
                "parents": [],
                "formatter_names": [],
                "return": []
            },
            "register_plugins": {
                "plugins": [
                    "flake8.plugins.finder.Plugins"
                ],
                "return": []
            },
            "add_option": {
                "args": [],
                "kwargs": [],
                "return": []
            },
            "extend_default_ignore": {
                "error_codes": [],
                "return": []
            },
            "extend_default_select": {
                "error_codes": [],
                "return": []
            },
            "parse_args": {
                "args": [],
                "values": [],
                "return": []
            }
        }
    },
    "flake8.options.parse_args": {
        "global": {
            "parse_args": {
                "argv": [],
                "return": [
                    "builtins.tuple[flake8.plugins.finder.Plugins, typing.Any]"
                ]
            }
        }
    },
    "flake8.plugins.finder": {
        "global": {
            "_parse_option": {
                "cfg": [
                    "platform._Processor"
                ],
                "cfg_opt_name": [
                    "inspect.Parameter"
                ],
                "opt": [
                    "builtins.str"
                ],
                "return": [
                    "builtins.list[typing.Any]"
                ]
            },
            "parse_plugin_options": {
                "cfg": [
                    "platform._Processor"
                ],
                "cfg_dir": [
                    "builtins.str"
                ],
                "enable_extensions": [
                    "builtins.str"
                ],
                "require_plugins": [
                    "builtins.str"
                ],
                "return": [
                    "flake8.plugins.finder.PluginOptions"
                ]
            },
            "_flake8_plugins": {
                "eps": [
                    "typing.Iterable[importlib.metadata.EntryPointBase]"
                ],
                "name": [],
                "version": [],
                "return": [
                    "typing.Generator[flake8.plugins.finder.Plugin, typing.Any, typing.Any]"
                ]
            },
            "_find_importlib_plugins": {
                "return": [
                    "typing.Generator[flake8.plugins.finder.Plugin, typing.Any, typing.Any]"
                ]
            },
            "_find_local_plugins": {
                "cfg": [
                    "platform._Processor"
                ],
                "return": [
                    "typing.Generator[flake8.plugins.finder.Plugin, typing.Any, typing.Any]"
                ]
            },
            "_check_required_plugins": {
                "plugins": [
                    "typing.Iterable[flake8.plugins.finder.Plugin]"
                ],
                "expected": [
                    "typing.Iterable[typing.Any]"
                ],
                "return": []
            },
            "find_plugins": {
                "cfg": [
                    "platform._Processor"
                ],
                "opts": [
                    "flake8.plugins.finder.PluginOptions"
                ],
                "return": [
                    "builtins.list[flake8.plugins.finder.Plugin]"
                ]
            },
            "_parameters_for": {
                "func": [
                    "typing.Callable"
                ],
                "return": [
                    "builtins.dict[typing.Any, typing.Any]"
                ]
            },
            "_load_plugin": {
                "plugin": [
                    "flake8.plugins.finder.Plugin"
                ],
                "return": [
                    "flake8.plugins.finder.LoadedPlugin"
                ]
            },
            "_import_plugins": {
                "plugins": [
                    "typing.Iterable[flake8.plugins.finder.Plugin]"
                ],
                "opts": [
                    "flake8.plugins.finder.PluginOptions"
                ],
                "return": [
                    "builtins.list[flake8.plugins.finder.LoadedPlugin]"
                ]
            },
            "_classify_plugins": {
                "plugins": [
                    "typing.Iterable[flake8.plugins.finder.LoadedPlugin]"
                ],
                "opts": [
                    "flake8.plugins.finder.PluginOptions"
                ],
                "return": [
                    "flake8.plugins.finder.Plugins"
                ]
            },
            "load_plugins": {
                "plugins": [
                    "typing.Iterable[flake8.plugins.finder.Plugin]"
                ],
                "opts": [
                    "flake8.plugins.finder.PluginOptions"
                ],
                "return": [
                    "flake8.plugins.finder.Plugins"
                ]
            }
        },
        "LoadedPlugin": {
            "entry_name": {
                "return": []
            },
            "display_name": {
                "return": [
                    "builtins.str"
                ]
            }
        },
        "Plugins": {
            "all_plugins": {
                "return": [
                    "typing.Generator[typing.Any, typing.Any, typing.Any]"
                ]
            },
            "versions_str": {
                "return": [
                    "builtins.str"
                ]
            }
        },
        "PluginOptions": {
            "blank": {
                "return": []
            }
        }
    },
    "flake8.plugins.pycodestyle": {
        "global": {
            "pycodestyle_logical": {
                "blank_before": [],
                "blank_lines": [],
                "checker_state": [],
                "hang_closing": [],
                "indent_char": [],
                "indent_level": [],
                "indent_size": [],
                "line_number": [],
                "lines": [],
                "logical_line": [],
                "max_doc_length": [],
                "noqa": [],
                "previous_indent_level": [],
                "previous_logical": [],
                "previous_unindented_logical_line": [],
                "tokens": [],
                "verbose": [],
                "return": [
                    "typing.Generator[typing.Any, typing.Any, typing.Any]"
                ]
            },
            "pycodestyle_physical": {
                "indent_char": [],
                "line_number": [],
                "lines": [],
                "max_line_length": [],
                "multiline": [],
                "noqa": [],
                "physical_line": [],
                "total_lines": [],
                "return": [
                    "typing.Generator[typing.Any, typing.Any, typing.Any]"
                ]
            }
        }
    },
    "flake8.plugins.pyflakes": {
        "FlakesChecker": {
            "__init__": {
                "tree": [],
                "filename": [],
                "return": []
            },
            "add_options": {
                "parser": [
                    "flake8.options.manager.OptionManager"
                ],
                "return": []
            },
            "parse_options": {
                "options": [
                    "inspect.ClosureVars"
                ],
                "return": []
            },
            "run": {
                "return": [
                    "typing.Generator[builtins.tuple[typing.Any, builtins.int, builtins.str, typing.Any], typing.Any, typing.Any]"
                ]
            }
        }
    },
    "flake8.plugins.reporter": {
        "global": {
            "make": {
                "reporters": [
                    "_typeshed.SupportsGetItem[builtins.str, flake8.plugins.finder.LoadedPlugin]"
                ],
                "options": [
                    "logging.BufferingFormatter"
                ],
                "return": []
            }
        }
    }
}