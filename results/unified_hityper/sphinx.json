{
    "sphinx.__main__": {
        "global": {
            "global": {}
        }
    },
    "sphinx._cli.util": {
        "global": {
            "global": {}
        }
    },
    "sphinx._cli.util.colour": {
        "global": {
            "_create_colour_func": {
                "return": []
            },
            "_create_input_mode_colour_func": {
                "return": []
            },
            "colourise": {
                "return": []
            },
            "disable_colour": {
                "return": [
                    "None"
                ]
            },
            "enable_colour": {
                "return": [
                    "None"
                ]
            },
            "global": {},
            "inner": {
                "text": [],
                "return": [
                    "typing.Text"
                ]
            },
            "terminal_supports_colour": {
                "return": [
                    "bool"
                ]
            }
        }
    },
    "sphinx._cli.util.errors": {
        "global": {
            "error_info": {
                "messages": [],
                "extensions": [],
                "traceback": [],
                "return": [
                    "typing.Text"
                ]
            },
            "global": {},
            "handle_exception": {
                "stderr": [],
                "use_pdb": [
                    "bool"
                ],
                "print_traceback": [
                    "bool"
                ],
                "app": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "print_err": {
                "values": [],
                "return": [
                    "None"
                ]
            },
            "print_red": {
                "values": [],
                "return": [
                    "None"
                ]
            },
            "save_traceback": {
                "app": [],
                "exc": [],
                "return": []
            },
            "strip_colors": {
                "return": []
            },
            "terminal_safe": {
                "return": []
            }
        }
    },
    "sphinx.addnodes": {
        "_desc_classes_injector": {
            "__init__": {
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            }
        },
        "desc_inline": {
            "__init__": {
                "domain": [],
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            }
        },
        "desc_sig_element": {
            "__init__": {
                "rawsource": [
                    "typing.Text"
                ],
                "text": [
                    "typing.Text"
                ],
                "attributes": [],
                "children": [],
                "return": [
                    "None"
                ]
            },
            "__init_subclass__": {
                "cls": [],
                "_sig_element": [
                    "bool"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "desc_sig_space": {
            "__init__": {
                "rawsource": [
                    "typing.Text"
                ],
                "text": [
                    "typing.Text"
                ],
                "attributes": [],
                "children": [],
                "return": [
                    "None"
                ]
            }
        },
        "toctree": {
            "apply_translated_message": {
                "original_message": [],
                "translated_message": [],
                "return": [
                    "None"
                ]
            },
            "extract_original_messages": {
                "return": [
                    "list"
                ]
            },
            "preserve_original_messages": {
                "return": [
                    "None"
                ]
            }
        },
        "translatable": {
            "apply_translated_message": {
                "original_message": [],
                "translated_message": [],
                "return": [
                    "None"
                ]
            },
            "extract_original_messages": {
                "return": [
                    "None"
                ]
            },
            "preserve_original_messages": {
                "return": [
                    "None"
                ]
            }
        },
        "desc_optional": {
            "astext": {
                "return": []
            }
        },
        "desc_parameterlist": {
            "astext": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "desc_returns": {
            "astext": {
                "return": []
            }
        },
        "desc_type_parameter_list": {
            "astext": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "desc_signature": {
            "child_text_separator": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "document": {
            "set_id": {
                "node": [],
                "msgnode": [
                    "None"
                ],
                "suggested_prefix": [
                    "typing.Text"
                ],
                "return": []
            }
        }
    },
    "sphinx.application": {
        "Sphinx": {
            "__init__": {
                "srcdir": [],
                "confdir": [],
                "outdir": [],
                "doctreedir": [],
                "buildername": [],
                "confoverrides": [
                    "None"
                ],
                "status": [],
                "warning": [],
                "freshenv": [
                    "bool"
                ],
                "warningiserror": [
                    "bool"
                ],
                "tags": [
                    "tuple"
                ],
                "verbosity": [
                    "int"
                ],
                "parallel": [
                    "int"
                ],
                "keep_going": [
                    "bool"
                ],
                "pdb": [
                    "bool"
                ],
                "exception_on_warning": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_create_fresh_env": {
                "return": [
                    "BuildEnvironment"
                ]
            },
            "_init_builder": {
                "return": [
                    "None"
                ]
            },
            "_init_env": {
                "freshenv": [],
                "return": []
            },
            "_init_i18n": {
                "return": [
                    "None"
                ]
            },
            "_load_existing_env": {
                "filename": [],
                "return": []
            },
            "_post_init_env": {
                "return": [
                    "None"
                ]
            },
            "add_autodoc_attrgetter": {
                "typ": [],
                "getter": [],
                "return": [
                    "None"
                ]
            },
            "add_autodocumenter": {
                "cls": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_builder": {
                "builder": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_config_value": {
                "name": [],
                "default": [],
                "rebuild": [],
                "types": [
                    "tuple"
                ],
                "description": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "add_crossref_type": {
                "directivename": [],
                "rolename": [],
                "indextemplate": [
                    "typing.Text"
                ],
                "ref_nodeclass": [
                    "None"
                ],
                "objname": [
                    "typing.Text"
                ],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_css_file": {
                "filename": [],
                "priority": [
                    "int"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "add_directive": {
                "name": [],
                "cls": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_directive_to_domain": {
                "domain": [],
                "name": [],
                "cls": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_domain": {
                "domain": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_enumerable_node": {
                "node": [],
                "figtype": [],
                "title_getter": [
                    "None"
                ],
                "override": [
                    "bool"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "add_env_collector": {
                "collector": [],
                "return": [
                    "None"
                ]
            },
            "add_event": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "add_generic_role": {
                "name": [],
                "nodeclass": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_html_math_renderer": {
                "name": [],
                "inline_renderers": [
                    "None"
                ],
                "block_renderers": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "add_html_theme": {
                "name": [],
                "theme_path": [],
                "return": [
                    "None"
                ]
            },
            "add_index_to_domain": {
                "domain": [],
                "index": [],
                "_override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_js_file": {
                "filename": [],
                "priority": [
                    "int"
                ],
                "loading_method": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "add_latex_package": {
                "packagename": [],
                "options": [
                    "None"
                ],
                "after_hyperref": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_lexer": {
                "alias": [],
                "lexer": [],
                "return": [
                    "None"
                ]
            },
            "add_message_catalog": {
                "catalog": [],
                "locale_dir": [],
                "return": [
                    "None"
                ]
            },
            "add_node": {
                "node": [],
                "override": [
                    "bool"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "add_object_type": {
                "directivename": [],
                "rolename": [],
                "indextemplate": [
                    "typing.Text"
                ],
                "parse_node": [
                    "None"
                ],
                "ref_nodeclass": [
                    "None"
                ],
                "objname": [
                    "typing.Text"
                ],
                "doc_field_types": [
                    "tuple"
                ],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_post_transform": {
                "transform": [],
                "return": [
                    "None"
                ]
            },
            "add_role": {
                "name": [],
                "role": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_role_to_domain": {
                "domain": [],
                "name": [],
                "role": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_search_language": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "add_source_parser": {
                "parser": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_source_suffix": {
                "suffix": [],
                "filetype": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_transform": {
                "transform": [],
                "return": [
                    "None"
                ]
            },
            "build": {
                "force_all": [
                    "bool"
                ],
                "filenames": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "connect": {
                "event": [],
                "callback": [],
                "priority": [
                    "int"
                ],
                "return": [
                    "None"
                ]
            },
            "create_builder": {
                "name": [],
                "return": []
            },
            "disconnect": {
                "listener_id": [],
                "return": [
                    "None"
                ]
            },
            "emit": {
                "event": [],
                "allowed_exceptions": [
                    "tuple"
                ],
                "args": [],
                "return": []
            },
            "emit_firstresult": {
                "event": [],
                "allowed_exceptions": [
                    "tuple"
                ],
                "args": [],
                "return": []
            },
            "fresh_env_used": {
                "return": []
            },
            "is_parallel_allowed": {
                "typ": [],
                "return": [
                    "bool"
                ]
            },
            "preload_builder": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "require_sphinx": {
                "version": [],
                "return": [
                    "None"
                ]
            },
            "set_html_assets_policy": {
                "policy": [],
                "return": [
                    "None"
                ]
            },
            "set_translator": {
                "name": [],
                "translator_class": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "setup_extension": {
                "extname": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        },
        "TemplateBridge": {
            "init": {
                "builder": [],
                "theme": [
                    "None"
                ],
                "dirs": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "newest_template_mtime": {
                "return": [
                    "int"
                ]
            },
            "render": {
                "template": [],
                "context": [],
                "return": [
                    "None"
                ]
            },
            "render_string": {
                "template": [],
                "context": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.builders.dirhtml": {
        "DirectoryHTMLBuilder": {
            "get_outfilename": {
                "pagename": [],
                "return": []
            },
            "get_target_uri": {
                "docname": [],
                "typ": [
                    "None"
                ],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.builders.dummy": {
        "DummyBuilder": {
            "finish": {
                "return": [
                    "None"
                ]
            },
            "get_outdated_docs": {
                "return": []
            },
            "get_target_uri": {
                "docname": [],
                "typ": [
                    "None"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "init": {
                "return": [
                    "None"
                ]
            },
            "write_doc": {
                "docname": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.builders.gettext": {
        "Catalog": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "__iter__": {
                "return": [
                    "typing.Generator[Message]"
                ]
            },
            "add": {
                "msg": [],
                "origin": [],
                "return": [
                    "None"
                ]
            }
        },
        "GettextRenderer": {
            "__init__": {
                "template_path": [
                    "None"
                ],
                "outdir": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_relpath": {
                "s": [],
                "return": []
            },
            "escape": {
                "s": [],
                "return": []
            },
            "render": {
                "filename": [],
                "context": [],
                "return": []
            }
        },
        "Message": {
            "__init__": {
                "text": [],
                "locations": [],
                "uuids": [],
                "return": [
                    "None"
                ]
            }
        },
        "MsgOrigin": {
            "__init__": {
                "source": [],
                "line": [],
                "return": [
                    "None"
                ]
            }
        },
        "MessageCatalogBuilder": {
            "_collect_templates": {
                "return": [
                    "set"
                ]
            },
            "_extract_from_template": {
                "return": [
                    "None"
                ]
            },
            "build": {
                "docnames": [],
                "summary": [
                    "None"
                ],
                "method": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "finish": {
                "return": [
                    "None"
                ]
            },
            "init": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_gettext_compact_validator": {
                "app": [],
                "config": [],
                "return": [
                    "None"
                ]
            },
            "_is_node_in_substitution_definition": {
                "node": [],
                "return": [
                    "bool"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            },
            "should_write": {
                "filepath": [],
                "new_content": [],
                "return": [
                    "bool"
                ]
            }
        },
        "I18nBuilder": {
            "compile_catalogs": {
                "catalogs": [],
                "message": [],
                "return": [
                    "None"
                ]
            },
            "get_outdated_docs": {
                "return": []
            },
            "get_target_uri": {
                "docname": [],
                "typ": [
                    "None"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "init": {
                "return": [
                    "None"
                ]
            },
            "write_doc": {
                "docname": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "I18nTags": {
            "eval_condition": {
                "condition": [],
                "return": [
                    "bool"
                ]
            }
        }
    },
    "sphinx.builders.html._assets": {
        "_CascadingStyleSheet": {
            "__delattr__": {
                "key": [],
                "return": [
                    "None"
                ]
            },
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__getattr__": {
                "key": [],
                "return": []
            },
            "__getitem__": {
                "key": [],
                "return": []
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "priority": [
                    "int"
                ],
                "rel": [
                    "typing.Text"
                ],
                "type": [
                    "typing.Text"
                ],
                "attributes": [],
                "return": [
                    "None"
                ]
            },
            "__setattr__": {
                "key": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "_JavaScript": {
            "__delattr__": {
                "key": [],
                "return": [
                    "None"
                ]
            },
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__getattr__": {
                "key": [],
                "return": []
            },
            "__getitem__": {
                "key": [],
                "return": []
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "priority": [
                    "int"
                ],
                "attributes": [],
                "return": [
                    "None"
                ]
            },
            "__setattr__": {
                "key": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "_file_checksum": {
                "outdir": [],
                "filename": [],
                "return": [
                    "typing.Text"
                ]
            },
            "global": {}
        }
    },
    "sphinx.builders.html._build_info": {
        "BuildInfo": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "config": [
                    "None"
                ],
                "tags": [],
                "config_categories": [
                    "frozenset"
                ],
                "return": [
                    "None"
                ]
            },
            "dump": {
                "return": [
                    "None"
                ]
            },
            "load": {
                "return": [
                    "BuildInfo"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.builders.html.transforms": {
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "KeyboardTransform": {
            "is_multiwords_key": {
                "parts": [],
                "return": [
                    "bool"
                ]
            },
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.builders.latex.constants": {
        "global": {
            "global": {}
        }
    },
    "sphinx.builders.latex.nodes": {
        "global": {
            "global": {}
        }
    },
    "sphinx.builders.latex.theming": {
        "BuiltInTheme": {
            "__init__": {
                "name": [],
                "config": [],
                "return": [
                    "None"
                ]
            }
        },
        "Theme": {
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "update": {
                "config": [],
                "return": [
                    "None"
                ]
            }
        },
        "ThemeFactory": {
            "__init__": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "find_user_theme": {
                "name": [],
                "return": [
                    "UserTheme",
                    "None"
                ]
            },
            "get": {
                "name": [],
                "return": []
            },
            "load_builtin_themes": {
                "config": [],
                "return": [
                    "None"
                ]
            }
        },
        "UserTheme": {
            "__init__": {
                "name": [],
                "filename": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.builders.latex.transforms": {
        "FootnoteCollector": {
            "__init__": {
                "document": [],
                "return": [
                    "None"
                ]
            },
            "unknown_departure": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "unknown_visit": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_footnote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_footnote_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "LaTeXFootnoteVisitor": {
            "__init__": {
                "document": [],
                "footnotes": [],
                "return": [
                    "None"
                ]
            },
            "depart_caption": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_figure": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_footnote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_table": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_term": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_thead": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_title": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "get_footnote_by_reference": {
                "node": [],
                "return": []
            },
            "restrict": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "unknown_departure": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "unknown_visit": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "unrestrict": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_caption": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_figure": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_footnote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_footnote_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_term": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_thead": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_title": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "FootnoteDocnameUpdater": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "ShowUrlsTransform": {
            "create_footnote": {
                "uri": [],
                "docname": [],
                "return": [
                    "tuple"
                ]
            },
            "expand_show_urls": {
                "return": [
                    "None"
                ]
            },
            "get_docname_for_node": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "renumber_footnotes": {
                "return": [
                    "None"
                ]
            },
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "BibliographyTransform": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "CitationReferenceTransform": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "DocumentTargetTransform": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "IndexInSectionTitleTransform": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "LaTeXFootnoteTransform": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "LiteralBlockTransform": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "MathReferenceTransform": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "SubstitutionDefinitionsRemover": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.builders.latex.util": {
        "ExtBabel": {
            "__init__": {
                "language_code": [],
                "use_polyglossia": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "get_mainlanguage_options": {
                "return": [
                    "None",
                    "typing.Text"
                ]
            },
            "is_supported_language": {
                "return": []
            },
            "language_name": {
                "language_code": [],
                "return": [
                    "typing.Text"
                ]
            },
            "uses_cyrillic": {
                "return": [
                    "bool"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.builders.manpage": {
        "global": {
            "default_man_pages": {
                "config": [],
                "return": [
                    "list[tuple[typing.Union[typing.Text,list,int]]]"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "ManualPageBuilder": {
            "finish": {
                "return": [
                    "None"
                ]
            },
            "get_outdated_docs": {
                "return": [
                    "typing.Text"
                ]
            },
            "get_target_uri": {
                "docname": [],
                "typ": [
                    "None"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "init": {
                "return": [
                    "None"
                ]
            },
            "write_documents": {
                "_docnames": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.builders.text": {
        "TextBuilder": {
            "finish": {
                "return": [
                    "None"
                ]
            },
            "get_outdated_docs": {
                "return": [
                    "typing.Generator"
                ]
            },
            "get_target_uri": {
                "docname": [],
                "typ": [
                    "None"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "init": {
                "return": [
                    "None"
                ]
            },
            "prepare_writing": {
                "docnames": [],
                "return": [
                    "None"
                ]
            },
            "write_doc": {
                "docname": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.builders.xml": {
        "XMLBuilder": {
            "finish": {
                "return": [
                    "None"
                ]
            },
            "get_outdated_docs": {
                "return": [
                    "typing.Generator"
                ]
            },
            "get_target_uri": {
                "docname": [],
                "typ": [
                    "None"
                ],
                "return": []
            },
            "init": {
                "return": [
                    "None"
                ]
            },
            "prepare_writing": {
                "docnames": [],
                "return": [
                    "None"
                ]
            },
            "write_doc": {
                "docname": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.cmd": {
        "global": {
            "global": {}
        }
    },
    "sphinx.cmd.make_mode": {
        "Make": {
            "__init__": {
                "source_dir": [],
                "build_dir": [],
                "opts": [],
                "return": [
                    "None"
                ]
            },
            "build_clean": {
                "return": [
                    "int"
                ]
            },
            "build_dir_join": {
                "comps": [],
                "return": []
            },
            "build_gettext": {
                "return": [
                    "int"
                ]
            },
            "build_help": {
                "return": [
                    "None"
                ]
            },
            "build_info": {
                "return": [
                    "int"
                ]
            },
            "build_latexpdf": {
                "return": [
                    "int"
                ]
            },
            "build_latexpdfja": {
                "return": [
                    "int"
                ]
            },
            "run_generic_build": {
                "builder": [],
                "doctreedir": [
                    "None"
                ],
                "return": []
            }
        },
        "global": {
            "global": {},
            "run_make_mode": {
                "args": [],
                "return": [
                    "int"
                ]
            }
        }
    },
    "sphinx.deprecation": {
        "global": {
            "_deprecation_warning": {
                "module": [],
                "attribute": [],
                "canonical_name": [
                    "typing.Text"
                ],
                "remove": [],
                "raises": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "sphinx.directives.code": {
        "LiteralIncludeReader": {
            "__init__": {
                "filename": [],
                "options": [],
                "config": [],
                "return": [
                    "None"
                ]
            },
            "append_filter": {
                "lines": [],
                "location": [
                    "None"
                ],
                "return": []
            },
            "dedent_filter": {
                "lines": [],
                "location": [
                    "None"
                ],
                "return": []
            },
            "end_filter": {
                "lines": [],
                "location": [
                    "None"
                ],
                "return": []
            },
            "lines_filter": {
                "lines": [],
                "location": [
                    "None"
                ],
                "return": [
                    "list"
                ]
            },
            "parse_options": {
                "return": [
                    "None"
                ]
            },
            "prepend_filter": {
                "lines": [],
                "location": [
                    "None"
                ],
                "return": [
                    "list[int]"
                ]
            },
            "pyobject_filter": {
                "lines": [],
                "location": [
                    "None"
                ],
                "return": []
            },
            "read": {
                "location": [
                    "None"
                ],
                "return": [
                    "tuple[typing.Union[str,int]]"
                ]
            },
            "read_file": {
                "filename": [],
                "location": [
                    "None"
                ],
                "return": [
                    "list[str]"
                ]
            },
            "show_diff": {
                "location": [
                    "None"
                ],
                "return": [
                    "list"
                ]
            },
            "start_filter": {
                "lines": [],
                "location": [
                    "None"
                ],
                "return": []
            }
        },
        "global": {
            "container_wrapper": {
                "directive": [],
                "literal_node": [],
                "caption": [],
                "return": []
            },
            "dedent_lines": {
                "lines": [],
                "dedent": [],
                "location": [
                    "None"
                ],
                "return": [
                    "list[typing.Text]"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "CodeBlock": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "Highlight": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "LiteralInclude": {
            "run": {
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.directives.other": {
        "Include": {
            "_insert_input": {
                "include_lines": [],
                "source": [],
                "return": []
            },
            "run": {
                "return": []
            }
        },
        "global": {
            "global": {},
            "int_or_nothing": {
                "argument": [],
                "return": [
                    "int"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "TocTree": {
            "parse_content": {
                "toctree": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "Acks": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "Author": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "Centered": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "HList": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "Only": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "TabularColumns": {
            "run": {
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.directives.patches": {
        "MathDirective": {
            "add_target": {
                "ret": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "CSVTable": {
            "run": {
                "return": []
            }
        },
        "Code": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "Figure": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "Rubric": {
            "run": {
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.domains": {
        "Domain": {
            "__init__": {
                "env": [],
                "return": [
                    "None"
                ]
            },
            "add_object_type": {
                "name": [],
                "objtype": [],
                "return": [
                    "None"
                ]
            },
            "check_consistency": {
                "return": [
                    "None"
                ]
            },
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "directive": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "get_enumerable_node_type": {
                "node": [],
                "return": []
            },
            "get_full_qualified_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "get_objects": {
                "return": [
                    "list"
                ]
            },
            "get_type_name": {
                "type": [],
                "primary": [
                    "bool"
                ],
                "return": []
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "env": [],
                "docname": [],
                "document": [],
                "return": [
                    "None"
                ]
            },
            "process_field_xref": {
                "pnode": [],
                "return": [
                    "None"
                ]
            },
            "resolve_any_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "None"
                ]
            },
            "resolve_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "None"
                ]
            },
            "role": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "role_adapter": {
                "typ": [],
                "rawtext": [],
                "text": [],
                "lineno": [],
                "inliner": [],
                "options": [
                    "None"
                ],
                "content": [
                    "tuple"
                ],
                "return": []
            },
            "setup": {
                "return": [
                    "None"
                ]
            }
        },
        "ObjType": {
            "__init__": {
                "attrs": [],
                "roles": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        },
        "Domain,DirectiveAdapter": {
            "run": {
                "return": []
            }
        }
    },
    "sphinx.domains._index": {
        "Index": {
            "__init__": {
                "domain": [],
                "return": [
                    "None"
                ]
            },
            "generate": {
                "docnames": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.domains.c": {
        "AliasNode": {
            "__init__": {
                "sig": [],
                "aliasOptions": [],
                "document": [],
                "env": [
                    "None"
                ],
                "parentKey": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "copy": {
                "return": []
            }
        },
        "CExprRole": {
            "__init__": {
                "asCode": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "return": [
                    "tuple[list]"
                ]
            }
        },
        "CObject": {
            "_add_enumerator_to_parent": {
                "ast": [],
                "return": [
                    "None"
                ]
            },
            "add_target_and_index": {
                "ast": [],
                "sig": [],
                "signode": [],
                "return": [
                    "None"
                ]
            },
            "after_content": {
                "return": [
                    "None"
                ]
            },
            "before_content": {
                "return": [
                    "None"
                ]
            },
            "describe_signature": {
                "signode": [],
                "ast": [],
                "options": [],
                "return": [
                    "None"
                ]
            },
            "display_object_type": {
                "return": []
            },
            "get_index_text": {
                "name": [],
                "return": []
            },
            "handle_signature": {
                "sig": [],
                "signode": [],
                "return": []
            },
            "object_type": {
                "return": [
                    "None"
                ]
            },
            "parse_definition": {
                "parser": [],
                "return": []
            },
            "run": {
                "return": []
            }
        },
        "global": {
            "_make_phony_error_name": {
                "return": [
                    "ASTNestedName"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,int]]"
                ]
            }
        },
        "AliasTransform": {
            "_render_symbol": {
                "s": [],
                "maxdepth": [],
                "skipThis": [],
                "aliasOptions": [],
                "renderOptions": [],
                "document": [],
                "return": [
                    "list"
                ]
            },
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "CDomain": {
            "_resolve_xref_inner": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "tuple[None]",
                    "tuple"
                ]
            },
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "get_objects": {
                "return": [
                    "typing.Generator[tuple[typing.Union[str,int]]]"
                ]
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "env": [],
                "docname": [],
                "document": [],
                "return": [
                    "None"
                ]
            },
            "process_field_xref": {
                "pnode": [],
                "return": [
                    "None"
                ]
            },
            "resolve_any_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "list[tuple]",
                    "list"
                ]
            },
            "resolve_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": []
            }
        },
        "CMemberObject": {
            "display_object_type": {
                "return": []
            }
        },
        "CXRefRole": {
            "process_link": {
                "env": [],
                "refnode": [],
                "has_explicit_title": [],
                "title": [],
                "target": [],
                "return": [
                    "tuple"
                ]
            }
        },
        "CAliasObject": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "CNamespaceObject": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "CNamespacePopObject": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "CNamespacePushObject": {
            "run": {
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.domains.c._ast": {
        "ASTAlignofExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "typ": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTArray": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "static": [],
                "const": [],
                "volatile": [],
                "restrict": [],
                "vla": [],
                "size": [],
                "return": [
                    "None"
                ]
            },
            "_add": {
                "signode": [],
                "text": [],
                "return": [
                    "bool"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTAssignmentExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "exprs": [],
                "ops": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTBinOpExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "exprs": [],
                "ops": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTBooleanLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTBracedInitList": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "exprs": [],
                "trailingComma": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTCastExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "typ": [],
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTCharLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "prefix": [],
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTDeclSpecs": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "outer": [],
                "leftSpecs": [],
                "rightSpecs": [],
                "trailing": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTDeclSpecsSimple": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "storage": [],
                "threadLocal": [],
                "inline": [],
                "restrict": [],
                "volatile": [],
                "const": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_add": {
                "modifiers": [],
                "text": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "modifiers": [],
                "return": [
                    "None"
                ]
            },
            "mergeWith": {
                "other": [],
                "return": [
                    "ASTDeclSpecsSimple"
                ]
            }
        },
        "ASTDeclaration": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "objectType": [],
                "directiveType": [],
                "declaration": [],
                "semicolon": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "clone": {
                "return": [
                    "ASTDeclaration"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "options": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "prefixed": [
                    "bool"
                ],
                "return": []
            },
            "get_newest_id": {
                "return": []
            },
            "name": {
                "return": []
            }
        },
        "ASTDeclaratorNameBitField": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "declId": [],
                "size": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            }
        },
        "ASTDeclaratorNameParam": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "declId": [],
                "arrayOps": [],
                "param": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            }
        },
        "ASTDeclaratorParen": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "inner": [],
                "next": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            }
        },
        "ASTDeclaratorPtr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "next": [],
                "restrict": [],
                "volatile": [],
                "const": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_add_anno": {
                "signode": [],
                "text": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            }
        },
        "ASTEnum": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTEnumerator": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "init": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTFallbackExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTFunctionParameter": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "arg": [],
                "ellipsis": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTIdExpression": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTIdentifier": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "prefix": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_display_string": {
                "return": [
                    "typing.Text"
                ]
            },
            "identifier": {
                "return": []
            },
            "is_anon": {
                "return": []
            }
        },
        "ASTInitializer": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "value": [],
                "hasAssign": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTMacro": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "ident": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            },
            "name": {
                "return": []
            }
        },
        "ASTMacroParameter": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "arg": [],
                "ellipsis": [
                    "bool"
                ],
                "variadic": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTNestedName": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "names": [],
                "rooted": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            },
            "name": {
                "return": [
                    "ASTNestedName"
                ]
            }
        },
        "ASTNumberLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTParameters": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "args": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            }
        },
        "ASTParenExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTParenExprList": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "exprs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTPostfixArray": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTPostfixCallExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "lst": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTPostfixExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "prefix": [],
                "postFixes": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTPostfixMemberOfPointer": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTSizeofExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTSizeofType": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "typ": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTStringLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTStruct": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTTrailingTypeSpecFundamental": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "names": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTTrailingTypeSpecName": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "prefix": [],
                "nestedName": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "name": {
                "return": []
            }
        },
        "ASTType": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "declSpecs": [],
                "decl": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            },
            "get_type_declaration_prefix": {
                "return": [
                    "typing.Text"
                ]
            },
            "name": {
                "return": []
            }
        },
        "ASTTypeWithInit": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "type": [],
                "init": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            },
            "name": {
                "return": []
            }
        },
        "ASTUnaryOpExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "op": [],
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTUnion": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTPostfixDec": {
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTPostfixInc": {
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTBase": {
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTDeclarator": {
            "function_params": {
                "return": [
                    "None"
                ]
            },
            "name": {
                "return": [
                    "None"
                ]
            },
            "require_space_after_declSpecs": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.domains.c._ids": {
        "global": {
            "global": {}
        }
    },
    "sphinx.domains.c._parser": {
        "DefinitionParser": {
            "_parse_assignment_expression": {
                "return": [
                    "ASTAssignmentExpr"
                ]
            },
            "_parse_bin_op_expr": {
                "opId": [],
                "return": [
                    "ASTBinOpExpr"
                ]
            },
            "_parse_braced_init_list": {
                "return": [
                    "None",
                    "ASTBracedInitList"
                ]
            },
            "_parse_cast_expression": {
                "return": [
                    "ASTCastExpr"
                ]
            },
            "_parse_conditional_expression_tail": {
                "orExprHead": [],
                "return": [
                    "None"
                ]
            },
            "_parse_constant_expression": {
                "return": []
            },
            "_parse_decl_specs": {
                "outer": [],
                "typed": [
                    "bool"
                ],
                "return": [
                    "ASTDeclSpecs"
                ]
            },
            "_parse_decl_specs_simple": {
                "outer": [],
                "typed": [],
                "return": [
                    "ASTDeclSpecsSimple"
                ]
            },
            "_parse_declarator": {
                "named": [],
                "paramMode": [],
                "typed": [
                    "bool"
                ],
                "return": [
                    "ASTDeclaratorPtr",
                    "ASTDeclaratorParen"
                ]
            },
            "_parse_declarator_name_suffix": {
                "named": [],
                "paramMode": [],
                "typed": [],
                "return": [
                    "ASTDeclaratorNameBitField",
                    "ASTDeclaratorNameParam"
                ]
            },
            "_parse_enum": {
                "return": [
                    "ASTEnum"
                ]
            },
            "_parse_enumerator": {
                "return": [
                    "ASTEnumerator"
                ]
            },
            "_parse_expression": {
                "return": []
            },
            "_parse_expression_fallback": {
                "end": [],
                "parser": [],
                "allow": [
                    "bool"
                ],
                "return": [
                    "ASTFallbackExpr"
                ]
            },
            "_parse_initializer": {
                "outer": [
                    "None"
                ],
                "allowFallback": [
                    "bool"
                ],
                "return": [
                    "ASTInitializer",
                    "None"
                ]
            },
            "_parse_initializer_list": {
                "name": [],
                "open": [],
                "close": [],
                "return": [
                    "tuple[None]",
                    "tuple[typing.Union[list,bool]]"
                ]
            },
            "_parse_literal": {
                "return": [
                    "ASTBooleanLiteral",
                    "ASTNumberLiteral",
                    "ASTStringLiteral",
                    "ASTCharLiteral",
                    "None"
                ]
            },
            "_parse_logical_or_expression": {
                "return": []
            },
            "_parse_macro": {
                "return": [
                    "ASTMacro"
                ]
            },
            "_parse_nested_name": {
                "return": [
                    "ASTNestedName"
                ]
            },
            "_parse_parameters": {
                "paramMode": [],
                "return": [
                    "None",
                    "ASTParameters"
                ]
            },
            "_parse_paren_expression": {
                "return": [
                    "None",
                    "ASTParenExpr"
                ]
            },
            "_parse_paren_expression_list": {
                "return": [
                    "None",
                    "ASTParenExprList"
                ]
            },
            "_parse_postfix_expression": {
                "return": [
                    "ASTPostfixExpr"
                ]
            },
            "_parse_primary_expression": {
                "return": [
                    "ASTIdExpression",
                    "None"
                ]
            },
            "_parse_simple_type_specifier": {
                "return": [
                    "typing.Text",
                    "None"
                ]
            },
            "_parse_simple_type_specifiers": {
                "return": [
                    "None",
                    "ASTTrailingTypeSpecFundamental"
                ]
            },
            "_parse_string": {
                "return": [
                    "None"
                ]
            },
            "_parse_struct": {
                "return": [
                    "ASTStruct"
                ]
            },
            "_parse_trailing_type_spec": {
                "return": [
                    "ASTTrailingTypeSpecName"
                ]
            },
            "_parse_type": {
                "named": [],
                "outer": [
                    "None"
                ],
                "return": [
                    "ASTType"
                ]
            },
            "_parse_type_with_init": {
                "named": [],
                "outer": [],
                "return": [
                    "ASTTypeWithInit"
                ]
            },
            "_parse_unary_expression": {
                "return": [
                    "ASTUnaryOpExpr",
                    "ASTSizeofType",
                    "ASTSizeofExpr",
                    "ASTAlignofExpr"
                ]
            },
            "_parse_union": {
                "return": [
                    "ASTUnion"
                ]
            },
            "id_attributes": {
                "return": []
            },
            "language": {
                "return": [
                    "typing.Text"
                ]
            },
            "paren_attributes": {
                "return": []
            },
            "parse_declaration": {
                "objectType": [],
                "directiveType": [],
                "return": [
                    "ASTDeclaration"
                ]
            },
            "parse_expression": {
                "return": []
            },
            "parse_namespace_object": {
                "return": []
            },
            "parse_xref_object": {
                "return": []
            },
            "parser": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.domains.c._symbol": {
        "Symbol": {
            "__copy__": {
                "return": [
                    "None"
                ]
            },
            "__deepcopy__": {
                "memo": [],
                "return": [
                    "Symbol"
                ]
            },
            "__init__": {
                "parent": [],
                "ident": [],
                "declaration": [],
                "docname": [],
                "line": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "__setattr__": {
                "key": [],
                "value": [],
                "return": []
            },
            "_add_child": {
                "child": [],
                "return": [
                    "None"
                ]
            },
            "_add_function_params": {
                "return": [
                    "None"
                ]
            },
            "_add_symbols": {
                "nestedName": [],
                "declaration": [],
                "docname": [],
                "line": [],
                "return": [
                    "Symbol"
                ]
            },
            "_assert_invariants": {
                "return": [
                    "None"
                ]
            },
            "_children": {
                "return": []
            },
            "_fill_empty": {
                "declaration": [],
                "docname": [],
                "line": [],
                "return": [
                    "None"
                ]
            },
            "_remove_child": {
                "child": [],
                "return": [
                    "None"
                ]
            },
            "_symbol_lookup": {
                "nestedName": [],
                "onMissingQualifiedSymbol": [],
                "ancestorLookupType": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "searchInSiblings": [],
                "return": [
                    "None",
                    "SymbolLookupResult"
                ]
            },
            "add_declaration": {
                "declaration": [],
                "docname": [],
                "line": [],
                "return": []
            },
            "add_name": {
                "nestedName": [],
                "return": []
            },
            "children": {
                "return": [
                    "typing.Generator"
                ]
            },
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "debug_print": {
                "args": [],
                "return": [
                    "None"
                ]
            },
            "direct_lookup": {
                "key": [],
                "return": [
                    "None",
                    "Symbol"
                ]
            },
            "dump": {
                "indent": [],
                "return": [
                    "str"
                ]
            },
            "find_declaration": {
                "nestedName": [],
                "typ": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "return": [
                    "None"
                ]
            },
            "find_identifier": {
                "ident": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "searchInSiblings": [],
                "return": [
                    "Symbol",
                    "None"
                ]
            },
            "get_all_symbols": {
                "return": [
                    "typing.Generator[Symbol]",
                    "typing.Generator"
                ]
            },
            "get_full_nested_name": {
                "return": [
                    "ASTNestedName"
                ]
            },
            "get_lookup_key": {
                "return": [
                    "LookupKey"
                ]
            },
            "handleDuplicateDeclaration": {
                "symbol": [],
                "candSymbol": [],
                "return": [
                    "None"
                ]
            },
            "makeCandSymbol": {
                "return": [
                    "Symbol"
                ]
            },
            "merge_with": {
                "other": [],
                "docnames": [],
                "env": [],
                "return": [
                    "None"
                ]
            },
            "onMissingQualifiedSymbol": {
                "parentSymbol": [],
                "ident": [],
                "return": [
                    "Symbol"
                ]
            },
            "remove": {
                "return": [
                    "None"
                ]
            },
            "to_string": {
                "indent": [],
                "addEndNewline": [
                    "bool"
                ],
                "return": [
                    "str"
                ]
            }
        },
        "LookupKey": {
            "__init__": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "SymbolLookupResult": {
            "__init__": {
                "symbols": [],
                "parentSymbol": [],
                "ident": [],
                "return": [
                    "None"
                ]
            }
        },
        "_DuplicateSymbolError": {
            "__init__": {
                "symbol": [],
                "declaration": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.domains.changeset": {
        "ChangeSetDomain": {
            "changesets": {
                "return": []
            },
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "get_changesets_for": {
                "version": [],
                "return": []
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "note_changeset": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "env": [],
                "docname": [],
                "document": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,int]]"
                ]
            }
        },
        "VersionChange": {
            "run": {
                "return": [
                    "list[list[int]]"
                ]
            }
        }
    },
    "sphinx.domains.citation": {
        "CitationDefinitionTransform": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "CitationReferenceTransform": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "CitationDomain": {
            "check_consistency": {
                "return": [
                    "None"
                ]
            },
            "citation_refs": {
                "return": []
            },
            "citations": {
                "return": []
            },
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "note_citation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "note_citation_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "resolve_any_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "list",
                    "list[tuple[typing.Text]]"
                ]
            },
            "resolve_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,int]]"
                ]
            }
        }
    },
    "sphinx.domains.cpp": {
        "AliasNode": {
            "__init__": {
                "sig": [],
                "aliasOptions": [],
                "env": [
                    "None"
                ],
                "parentKey": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "copy": {
                "return": []
            }
        },
        "CPPExprRole": {
            "__init__": {
                "asCode": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "return": [
                    "tuple[list]"
                ]
            }
        },
        "CPPObject": {
            "_add_enumerator_to_parent": {
                "ast": [],
                "return": [
                    "None"
                ]
            },
            "_object_hierarchy_parts": {
                "sig_node": [],
                "return": [
                    "tuple"
                ]
            },
            "_toc_entry_name": {
                "sig_node": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "add_target_and_index": {
                "ast": [],
                "sig": [],
                "signode": [],
                "return": [
                    "None"
                ]
            },
            "after_content": {
                "return": [
                    "None"
                ]
            },
            "before_content": {
                "return": [
                    "None"
                ]
            },
            "describe_signature": {
                "signode": [],
                "ast": [],
                "options": [],
                "return": [
                    "None"
                ]
            },
            "display_object_type": {
                "return": []
            },
            "get_index_text": {
                "name": [],
                "return": []
            },
            "handle_signature": {
                "sig": [],
                "signode": [],
                "return": []
            },
            "object_type": {
                "return": [
                    "None"
                ]
            },
            "parse_definition": {
                "parser": [],
                "return": []
            },
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "global": {
            "_make_phony_error_name": {
                "return": [
                    "ASTNestedName"
                ]
            },
            "global": {},
            "initStuff": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,int]]"
                ]
            }
        },
        "AliasTransform": {
            "_render_symbol": {
                "s": [],
                "maxdepth": [],
                "skipThis": [],
                "aliasOptions": [],
                "renderOptions": [],
                "document": [],
                "return": [
                    "list"
                ]
            },
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "CPPDomain": {
            "_resolve_xref_inner": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "tuple[None]"
                ]
            },
            "checkType": {
                "return": [
                    "bool"
                ]
            },
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "findWarning": {
                "e": [],
                "return": [
                    "tuple",
                    "tuple[Exception]"
                ]
            },
            "get_full_qualified_name": {
                "node": [],
                "return": [
                    "None",
                    "typing.Text"
                ]
            },
            "get_objects": {
                "return": [
                    "typing.Generator[tuple[typing.Union[str,int]]]"
                ]
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "env": [],
                "docname": [],
                "document": [],
                "return": [
                    "None"
                ]
            },
            "process_field_xref": {
                "pnode": [],
                "return": [
                    "None"
                ]
            },
            "resolve_any_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "list[tuple[typing.Text]]",
                    "list[tuple]",
                    "list"
                ]
            },
            "resolve_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": []
            }
        },
        "CPPClassObject": {
            "display_object_type": {
                "return": []
            }
        },
        "CPPXRefRole": {
            "process_link": {
                "env": [],
                "refnode": [],
                "has_explicit_title": [],
                "title": [],
                "target": [],
                "return": [
                    "tuple"
                ]
            }
        },
        "CPPAliasObject": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "CPPNamespaceObject": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "CPPNamespacePopObject": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "CPPNamespacePushObject": {
            "run": {
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.domains.cpp._ast": {
        "ASTAlignofExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "typ": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTArray": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "size": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTAssignmentExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "leftExpr": [],
                "op": [],
                "rightExpr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTBaseClass": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "visibility": [],
                "virtual": [],
                "pack": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTBinOpExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "exprs": [],
                "ops": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTBooleanLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTBracedInitList": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "exprs": [],
                "trailingComma": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTCastExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "typ": [],
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTCharLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "prefix": [],
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTClass": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "final": [],
                "bases": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTCommaExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "exprs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTConcept": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "nestedName": [],
                "initializer": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": []
            },
            "name": {
                "return": []
            }
        },
        "ASTConditionalExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "ifExpr": [],
                "thenExpr": [],
                "elseExpr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTDeclSpecs": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "outer": [],
                "leftSpecs": [],
                "rightSpecs": [],
                "trailing": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTDeclSpecsSimple": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "storage": [],
                "threadLocal": [],
                "inline": [],
                "virtual": [],
                "explicitSpec": [],
                "consteval": [],
                "constexpr": [],
                "constinit": [],
                "volatile": [],
                "const": [],
                "friend": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_add": {
                "signode": [],
                "text": [],
                "return": [
                    "bool"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "mergeWith": {
                "other": [],
                "return": [
                    "ASTDeclSpecsSimple"
                ]
            }
        },
        "ASTDeclaration": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "objectType": [],
                "directiveType": [
                    "None"
                ],
                "visibility": [
                    "None"
                ],
                "templatePrefix": [
                    "None"
                ],
                "declaration": [
                    "None"
                ],
                "trailingRequiresClause": [
                    "None"
                ],
                "semicolon": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "clone": {
                "return": [
                    "ASTDeclaration"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "options": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "prefixed": [
                    "bool"
                ],
                "return": [
                    "str"
                ]
            },
            "get_newest_id": {
                "return": []
            },
            "name": {
                "return": []
            }
        },
        "ASTDeclaratorMemPtr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "className": [],
                "const": [],
                "volatile": [],
                "next": [],
                "return": [
                    "None"
                ]
            },
            "_add_anno": {
                "signode": [],
                "text": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_modifiers_id": {
                "version": [],
                "return": []
            },
            "get_param_id": {
                "version": [],
                "return": []
            },
            "get_ptr_suffix_id": {
                "version": [],
                "return": []
            },
            "get_type_id": {
                "version": [],
                "returnTypeId": [],
                "return": []
            },
            "isPack": {
                "return": []
            },
            "is_function_type": {
                "return": []
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            },
            "trailingReturn": {
                "return": []
            }
        },
        "ASTDeclaratorNameBitField": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "declId": [],
                "size": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_param_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_ptr_suffix_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            },
            "is_function_type": {
                "return": [
                    "bool"
                ]
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            }
        },
        "ASTDeclaratorNameParamQual": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "declId": [],
                "arrayOps": [],
                "paramQual": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_modifiers_id": {
                "version": [],
                "return": []
            },
            "get_param_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_ptr_suffix_id": {
                "version": [],
                "return": [
                    "str"
                ]
            },
            "get_type_id": {
                "version": [],
                "returnTypeId": [],
                "return": [
                    "str"
                ]
            },
            "isPack": {
                "return": [
                    "bool"
                ]
            },
            "is_function_type": {
                "return": [
                    "bool"
                ]
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            },
            "trailingReturn": {
                "return": []
            }
        },
        "ASTDeclaratorParamPack": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "next": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_modifiers_id": {
                "version": [],
                "return": []
            },
            "get_param_id": {
                "version": [],
                "return": []
            },
            "get_ptr_suffix_id": {
                "version": [],
                "return": []
            },
            "get_type_id": {
                "version": [],
                "returnTypeId": [],
                "return": []
            },
            "isPack": {
                "return": [
                    "bool"
                ]
            },
            "is_function_type": {
                "return": []
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            },
            "trailingReturn": {
                "return": []
            }
        },
        "ASTDeclaratorParen": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "inner": [],
                "next": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_modifiers_id": {
                "version": [],
                "return": []
            },
            "get_param_id": {
                "version": [],
                "return": []
            },
            "get_ptr_suffix_id": {
                "version": [],
                "return": []
            },
            "get_type_id": {
                "version": [],
                "returnTypeId": [],
                "return": []
            },
            "isPack": {
                "return": []
            },
            "is_function_type": {
                "return": []
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": [
                    "bool"
                ]
            },
            "trailingReturn": {
                "return": []
            }
        },
        "ASTDeclaratorPtr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "next": [],
                "volatile": [],
                "const": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_add_anno": {
                "signode": [],
                "text": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_modifiers_id": {
                "version": [],
                "return": []
            },
            "get_param_id": {
                "version": [],
                "return": []
            },
            "get_ptr_suffix_id": {
                "version": [],
                "return": [
                    "str"
                ]
            },
            "get_type_id": {
                "version": [],
                "returnTypeId": [],
                "return": []
            },
            "isPack": {
                "return": []
            },
            "is_function_type": {
                "return": []
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": []
            },
            "trailingReturn": {
                "return": []
            }
        },
        "ASTDeclaratorRef": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "next": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_modifiers_id": {
                "version": [],
                "return": []
            },
            "get_param_id": {
                "version": [],
                "return": []
            },
            "get_ptr_suffix_id": {
                "version": [],
                "return": []
            },
            "get_type_id": {
                "version": [],
                "returnTypeId": [],
                "return": []
            },
            "isPack": {
                "return": []
            },
            "is_function_type": {
                "return": []
            },
            "name": {
                "return": []
            },
            "require_space_after_declSpecs": {
                "return": []
            },
            "trailingReturn": {
                "return": []
            }
        },
        "ASTDeleteExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "rooted": [],
                "array": [],
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTEnum": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "scoped": [],
                "underlyingType": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTEnumerator": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "init": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTExplicitCast": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "cast": [],
                "typ": [],
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTExplicitSpec": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTFallbackExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTFoldExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "leftExpr": [],
                "op": [],
                "rightExpr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTFunctionParameter": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "arg": [],
                "ellipsis": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTIdExpression": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTIdentifier": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": []
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "prefix": [],
                "templateArgs": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_display_string": {
                "return": [
                    "typing.Text"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            },
            "identifier": {
                "return": []
            },
            "is_anon": {
                "return": []
            }
        },
        "ASTInitializer": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "value": [],
                "hasAssign": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTNamespace": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "nestedName": [],
                "templatePrefix": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTNestedName": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "names": [],
                "templates": [],
                "rooted": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "modifiers": [
                    "typing.Text"
                ],
                "return": [
                    "str"
                ]
            },
            "name": {
                "return": [
                    "ASTNestedName"
                ]
            },
            "num_templates": {
                "return": [
                    "int"
                ]
            }
        },
        "ASTNestedNameElement": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "identOrOp": [],
                "templateArgs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "prefix": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            },
            "is_operator": {
                "return": [
                    "bool"
                ]
            }
        },
        "ASTNewExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "rooted": [],
                "isNewTypeId": [],
                "typ": [],
                "initList": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTNoexceptExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTNoexceptSpec": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTNumberLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTOperator": {
            "__eq__": {
                "other": [],
                "return": [
                    "None"
                ]
            },
            "__hash__": {
                "return": [
                    "None"
                ]
            },
            "_describe_identifier": {
                "signode": [],
                "identnode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "prefix": [],
                "templateArgs": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "None"
                ]
            },
            "is_anon": {
                "return": []
            },
            "is_operator": {
                "return": [
                    "bool"
                ]
            }
        },
        "ASTOperatorBuildIn": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "op": [],
                "return": [
                    "None"
                ]
            },
            "_describe_identifier": {
                "signode": [],
                "identnode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTOperatorLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "identifier": [],
                "return": [
                    "None"
                ]
            },
            "_describe_identifier": {
                "signode": [],
                "identnode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTOperatorType": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "type": [],
                "return": [
                    "None"
                ]
            },
            "_describe_identifier": {
                "signode": [],
                "identnode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_name_no_template": {
                "return": [
                    "str"
                ]
            }
        },
        "ASTPackExpansionExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTParametersQualifiers": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "args": [],
                "volatile": [],
                "const": [],
                "refQual": [],
                "exceptionSpec": [],
                "trailingReturn": [],
                "override": [],
                "final": [],
                "attrs": [],
                "initializer": [],
                "return": [
                    "None"
                ]
            },
            "_add_anno": {
                "signode": [],
                "text": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_modifiers_id": {
                "version": [],
                "return": [
                    "str"
                ]
            },
            "get_param_id": {
                "version": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            }
        },
        "ASTParenExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTParenExprList": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "exprs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTPointerLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTPostfixArray": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "idPrefix": [],
                "version": [],
                "return": []
            }
        },
        "ASTPostfixCallExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "lst": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "idPrefix": [],
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTPostfixDec": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "idPrefix": [],
                "version": [],
                "return": []
            }
        },
        "ASTPostfixExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "prefix": [],
                "postFixes": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTPostfixInc": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "idPrefix": [],
                "version": [],
                "return": []
            }
        },
        "ASTPostfixMember": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "idPrefix": [],
                "version": [],
                "return": []
            }
        },
        "ASTPostfixMemberOfPointer": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "idPrefix": [],
                "version": [],
                "return": []
            }
        },
        "ASTRequiresClause": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTSizeofExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTSizeofParamPack": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "identifier": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTSizeofType": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "typ": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTStringLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTTemplateArgConstant": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str",
                    "typing.Text"
                ]
            }
        },
        "ASTTemplateArgs": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "args": [],
                "packExpansion": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTTemplateDeclarationPrefix": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "templates": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "lineSpec": [],
                "return": [
                    "None"
                ]
            },
            "get_id_except_requires_clause_in_last": {
                "version": [],
                "return": [
                    "str"
                ]
            },
            "get_requires_clause_in_last": {
                "return": [
                    "None"
                ]
            }
        },
        "ASTTemplateIntroduction": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "concept": [],
                "params": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature_as_introducer": {
                "parentNode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "lineSpec": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTTemplateIntroductionParameter": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "identifier": [],
                "parameterPack": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "get_id_as_arg": {
                "version": [],
                "return": []
            },
            "get_identifier": {
                "return": []
            },
            "isPack": {
                "return": []
            },
            "name": {
                "return": [
                    "ASTNestedName"
                ]
            }
        },
        "ASTTemplateKeyParamPackIdDefault": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "key": [],
                "identifier": [],
                "parameterPack": [],
                "default": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            },
            "get_identifier": {
                "return": []
            }
        },
        "ASTTemplateParamConstrainedTypeWithInit": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "type": [],
                "init": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": []
            },
            "isPack": {
                "return": []
            },
            "name": {
                "return": []
            }
        },
        "ASTTemplateParamNonType": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "param": [],
                "parameterPack": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": []
            },
            "get_identifier": {
                "return": [
                    "None"
                ]
            },
            "isPack": {
                "return": []
            },
            "name": {
                "return": [
                    "ASTNestedName"
                ]
            }
        },
        "ASTTemplateParamTemplateType": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "nestedParams": [],
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": []
            },
            "get_identifier": {
                "return": []
            },
            "isPack": {
                "return": []
            },
            "name": {
                "return": [
                    "ASTNestedName"
                ]
            }
        },
        "ASTTemplateParamType": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": []
            },
            "get_identifier": {
                "return": []
            },
            "isPack": {
                "return": []
            },
            "name": {
                "return": [
                    "ASTNestedName"
                ]
            }
        },
        "ASTTemplateParams": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "params": [],
                "requiresClause": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "describe_signature_as_introducer": {
                "parentNode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "lineSpec": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "excludeRequires": [
                    "bool"
                ],
                "return": [
                    "str"
                ]
            },
            "makeLine": {
                "parentNode": [],
                "return": []
            }
        },
        "ASTThisLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTTrailingTypeSpecDecltype": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTTrailingTypeSpecDecltypeAuto": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTTrailingTypeSpecFundamental": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "names": [],
                "canonNames": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "str"
                ]
            }
        },
        "ASTTrailingTypeSpecName": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "prefix": [],
                "nestedName": [],
                "placeholderType": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            },
            "name": {
                "return": []
            }
        },
        "ASTType": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "declSpecs": [],
                "decl": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": []
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": [
                    "str"
                ]
            },
            "get_type_declaration_prefix": {
                "return": [
                    "typing.Text"
                ]
            },
            "isPack": {
                "return": []
            },
            "name": {
                "return": []
            },
            "trailingReturn": {
                "return": []
            }
        },
        "ASTTypeId": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "typeOrExpr": [],
                "isType": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTTypeUsing": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "type": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": []
            },
            "get_type_declaration_prefix": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTTypeWithInit": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "type": [],
                "init": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [
                    "None"
                ],
                "symbol": [
                    "None"
                ],
                "return": []
            },
            "isPack": {
                "return": []
            },
            "name": {
                "return": []
            }
        },
        "ASTUnaryOpExpr": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "op": [],
                "expr": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": []
            }
        },
        "ASTUnion": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "objectType": [],
                "symbol": [],
                "return": []
            }
        },
        "ASTUserDefinedLiteral": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "literal": [],
                "ident": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ASTDeclarator": {
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "function_params": {
                "return": [
                    "None"
                ]
            },
            "get_modifiers_id": {
                "version": [],
                "return": [
                    "None"
                ]
            },
            "get_param_id": {
                "version": [],
                "return": [
                    "None"
                ]
            },
            "get_ptr_suffix_id": {
                "version": [],
                "return": [
                    "None"
                ]
            },
            "get_type_id": {
                "version": [],
                "returnTypeId": [],
                "return": [
                    "None"
                ]
            },
            "isPack": {
                "return": [
                    "None"
                ]
            },
            "is_function_type": {
                "return": [
                    "None"
                ]
            },
            "name": {
                "return": [
                    "None"
                ]
            },
            "require_space_after_declSpecs": {
                "return": [
                    "None"
                ]
            },
            "trailingReturn": {
                "return": [
                    "None"
                ]
            }
        },
        "ASTExpression": {
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTPostfixOp": {
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "idPrefix": [],
                "version": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTTemplateParam": {
            "describe_signature": {
                "parentNode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "None"
                ]
            },
            "get_identifier": {
                "return": [
                    "None"
                ]
            },
            "isPack": {
                "return": [
                    "None"
                ]
            },
            "name": {
                "return": [
                    "None"
                ]
            }
        },
        "ASTTrailingTypeSpec": {
            "describe_signature": {
                "signode": [],
                "mode": [],
                "env": [],
                "symbol": [],
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "version": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.domains.cpp._ids": {
        "global": {
            "global": {}
        }
    },
    "sphinx.domains.cpp._parser": {
        "DefinitionParser": {
            "_check_template_consistency": {
                "nestedName": [],
                "templatePrefix": [],
                "fullSpecShorthand": [],
                "isMember": [
                    "bool"
                ],
                "return": [
                    "ASTTemplateDeclarationPrefix"
                ]
            },
            "_parse_assignment_expression": {
                "inTemplate": [],
                "return": [
                    "ASTAssignmentExpr"
                ]
            },
            "_parse_bin_op_expr": {
                "opId": [],
                "inTemplate": [],
                "return": [
                    "ASTBinOpExpr"
                ]
            },
            "_parse_braced_init_list": {
                "return": [
                    "None",
                    "ASTBracedInitList"
                ]
            },
            "_parse_cast_expression": {
                "return": [
                    "ASTCastExpr"
                ]
            },
            "_parse_class": {
                "return": [
                    "ASTClass"
                ]
            },
            "_parse_concept": {
                "return": [
                    "ASTConcept"
                ]
            },
            "_parse_conditional_expression_tail": {
                "orExprHead": [],
                "inTemplate": [],
                "return": [
                    "None",
                    "ASTConditionalExpr"
                ]
            },
            "_parse_constant_expression": {
                "inTemplate": [],
                "return": []
            },
            "_parse_decl_specs": {
                "outer": [],
                "typed": [
                    "bool"
                ],
                "return": [
                    "ASTDeclSpecs"
                ]
            },
            "_parse_decl_specs_simple": {
                "outer": [],
                "typed": [],
                "return": [
                    "ASTDeclSpecsSimple"
                ]
            },
            "_parse_declarator": {
                "named": [],
                "paramMode": [],
                "typed": [
                    "bool"
                ],
                "return": [
                    "ASTDeclaratorPtr",
                    "ASTDeclaratorRef",
                    "ASTDeclaratorParamPack",
                    "ASTDeclaratorNameParamQual",
                    "ASTDeclaratorParen",
                    "ASTDeclaratorMemPtr"
                ]
            },
            "_parse_declarator_name_suffix": {
                "named": [],
                "paramMode": [],
                "typed": [],
                "return": [
                    "ASTDeclaratorNameBitField",
                    "ASTDeclaratorNameParamQual"
                ]
            },
            "_parse_enum": {
                "return": [
                    "ASTEnum"
                ]
            },
            "_parse_enumerator": {
                "return": [
                    "ASTEnumerator"
                ]
            },
            "_parse_expression": {
                "return": [
                    "ASTCommaExpr"
                ]
            },
            "_parse_expression_fallback": {
                "end": [],
                "parser": [],
                "allow": [
                    "bool"
                ],
                "return": [
                    "ASTFallbackExpr"
                ]
            },
            "_parse_expression_list_or_braced_init_list": {
                "return": []
            },
            "_parse_fold_or_paren_expression": {
                "return": [
                    "None",
                    "ASTFoldExpr",
                    "ASTParenExpr"
                ]
            },
            "_parse_initializer": {
                "outer": [
                    "None"
                ],
                "allowFallback": [
                    "bool"
                ],
                "return": [
                    "ASTInitializer",
                    "None"
                ]
            },
            "_parse_initializer_clause": {
                "return": []
            },
            "_parse_initializer_list": {
                "name": [],
                "open": [],
                "close": [],
                "return": [
                    "tuple[None]",
                    "tuple[typing.Union[list,bool]]",
                    "tuple[typing.Union[list[ASTPackExpansionExpr],bool]]"
                ]
            },
            "_parse_literal": {
                "return": [
                    "ASTPointerLiteral",
                    "ASTBooleanLiteral",
                    "ASTNumberLiteral",
                    "None"
                ]
            },
            "_parse_logical_or_expression": {
                "inTemplate": [],
                "return": []
            },
            "_parse_nested_name": {
                "memberPointer": [
                    "bool"
                ],
                "return": [
                    "ASTNestedName"
                ]
            },
            "_parse_operator": {
                "return": [
                    "ASTOperatorBuildIn",
                    "ASTOperatorLiteral",
                    "ASTOperatorType"
                ]
            },
            "_parse_parameters_and_qualifiers": {
                "paramMode": [],
                "return": [
                    "None",
                    "ASTParametersQualifiers"
                ]
            },
            "_parse_paren_expression_list": {
                "return": [
                    "None",
                    "ASTParenExprList"
                ]
            },
            "_parse_postfix_expression": {
                "return": [
                    "ASTPostfixExpr"
                ]
            },
            "_parse_primary_expression": {
                "return": [
                    "ASTThisLiteral",
                    "ASTIdExpression",
                    "None"
                ]
            },
            "_parse_requires_clause": {
                "return": [
                    "None",
                    "ASTRequiresClause"
                ]
            },
            "_parse_simple_type_specifiers": {
                "return": [
                    "None"
                ]
            },
            "_parse_string": {
                "return": [
                    "None"
                ]
            },
            "_parse_template_argument_list": {
                "return": [
                    "None",
                    "ASTTemplateArgs"
                ]
            },
            "_parse_template_declaration_prefix": {
                "objectType": [],
                "return": [
                    "ASTTemplateDeclarationPrefix",
                    "None"
                ]
            },
            "_parse_template_introduction": {
                "return": [
                    "None",
                    "ASTTemplateIntroduction"
                ]
            },
            "_parse_template_parameter": {
                "return": [
                    "ASTTemplateParamTemplateType",
                    "ASTTemplateParamType",
                    "ASTTemplateParamNonType"
                ]
            },
            "_parse_template_parameter_list": {
                "return": [
                    "ASTTemplateParams"
                ]
            },
            "_parse_trailing_type_spec": {
                "return": [
                    "ASTTrailingTypeSpecDecltypeAuto",
                    "ASTTrailingTypeSpecDecltype",
                    "ASTTrailingTypeSpecName"
                ]
            },
            "_parse_type": {
                "named": [],
                "outer": [
                    "None"
                ],
                "return": [
                    "ASTType"
                ]
            },
            "_parse_type_using": {
                "return": [
                    "ASTTypeUsing"
                ]
            },
            "_parse_type_with_init": {
                "named": [],
                "outer": [],
                "return": [
                    "ASTTypeWithInit",
                    "ASTTemplateParamConstrainedTypeWithInit"
                ]
            },
            "_parse_unary_expression": {
                "return": [
                    "ASTUnaryOpExpr",
                    "ASTSizeofParamPack",
                    "ASTSizeofType",
                    "ASTSizeofExpr",
                    "ASTAlignofExpr",
                    "ASTNoexceptExpr",
                    "ASTNewExpr",
                    "ASTDeleteExpr"
                ]
            },
            "_parse_union": {
                "return": [
                    "ASTUnion"
                ]
            },
            "_udl": {
                "literal": [],
                "return": [
                    "ASTUserDefinedLiteral"
                ]
            },
            "id_attributes": {
                "return": []
            },
            "language": {
                "return": [
                    "typing.Text"
                ]
            },
            "paren_attributes": {
                "return": []
            },
            "parse_and_expr": {
                "return": [
                    "ASTBinOpExpr"
                ]
            },
            "parse_declaration": {
                "objectType": [],
                "directiveType": [],
                "return": [
                    "ASTDeclaration"
                ]
            },
            "parse_expression": {
                "return": []
            },
            "parse_namespace_object": {
                "return": [
                    "ASTNamespace"
                ]
            },
            "parse_xref_object": {
                "return": [
                    "tuple[typing.Union[ASTNamespace,bool]]",
                    "tuple[bool]"
                ]
            },
            "parser": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.domains.cpp._symbol": {
        "Symbol": {
            "__copy__": {
                "return": [
                    "None"
                ]
            },
            "__deepcopy__": {
                "memo": [],
                "return": [
                    "Symbol"
                ]
            },
            "__init__": {
                "parent": [],
                "identOrOp": [],
                "templateParams": [],
                "templateArgs": [],
                "declaration": [],
                "docname": [],
                "line": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "__setattr__": {
                "key": [],
                "value": [],
                "return": []
            },
            "_add_symbols": {
                "nestedName": [],
                "templateDecls": [],
                "declaration": [],
                "docname": [],
                "line": [],
                "return": [
                    "Symbol"
                ]
            },
            "_add_template_and_function_params": {
                "return": [
                    "None"
                ]
            },
            "_assert_invariants": {
                "return": [
                    "None"
                ]
            },
            "_fill_empty": {
                "declaration": [],
                "docname": [],
                "line": [],
                "return": [
                    "None"
                ]
            },
            "_find_first_named_symbol": {
                "identOrOp": [],
                "templateParams": [],
                "templateArgs": [],
                "templateShorthand": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "correctPrimaryTemplateArgs": [],
                "return": [
                    "None"
                ]
            },
            "_find_named_symbols": {
                "identOrOp": [],
                "templateParams": [],
                "templateArgs": [],
                "templateShorthand": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "correctPrimaryTemplateArgs": [],
                "searchInSiblings": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "_symbol_lookup": {
                "nestedName": [],
                "templateDecls": [],
                "onMissingQualifiedSymbol": [],
                "strictTemplateParamArgLists": [],
                "ancestorLookupType": [],
                "templateShorthand": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "correctPrimaryTemplateArgs": [],
                "searchInSiblings": [],
                "return": [
                    "None"
                ]
            },
            "add_declaration": {
                "declaration": [],
                "docname": [],
                "line": [],
                "return": []
            },
            "add_name": {
                "nestedName": [],
                "templatePrefix": [
                    "None"
                ],
                "return": []
            },
            "candidates": {
                "return": [
                    "typing.Generator[Symbol]",
                    "typing.Generator"
                ]
            },
            "children_recurse_anon": {
                "return": [
                    "typing.Generator"
                ]
            },
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "debug_print": {
                "args": [],
                "return": [
                    "None"
                ]
            },
            "direct_lookup": {
                "key": [],
                "return": [
                    "None",
                    "Symbol"
                ]
            },
            "dump": {
                "indent": [],
                "return": [
                    "str"
                ]
            },
            "find_declaration": {
                "declaration": [],
                "typ": [],
                "templateShorthand": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "return": [
                    "None"
                ]
            },
            "find_identifier": {
                "identOrOp": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "searchInSiblings": [],
                "return": [
                    "Symbol",
                    "None"
                ]
            },
            "find_name": {
                "nestedName": [],
                "templateDecls": [],
                "typ": [],
                "templateShorthand": [],
                "matchSelf": [],
                "recurseInAnon": [],
                "searchInSiblings": [],
                "return": [
                    "tuple[typing.Optional[typing.Text]]",
                    "tuple[None]",
                    "tuple[typing.Optional[list]]"
                ]
            },
            "get_all_symbols": {
                "return": [
                    "typing.Generator[Symbol]",
                    "typing.Generator"
                ]
            },
            "get_full_nested_name": {
                "return": [
                    "ASTNestedName"
                ]
            },
            "get_lookup_key": {
                "return": [
                    "LookupKey"
                ]
            },
            "handleDuplicateDeclaration": {
                "symbol": [],
                "candSymbol": [],
                "return": [
                    "None"
                ]
            },
            "makeCandSymbol": {
                "return": [
                    "Symbol"
                ]
            },
            "matches": {
                "s": [],
                "return": [
                    "bool"
                ]
            },
            "merge_with": {
                "other": [],
                "docnames": [],
                "env": [],
                "return": [
                    "None"
                ]
            },
            "onMissingQualifiedSymbol": {
                "parentSymbol": [],
                "identOrOp": [],
                "templateParams": [],
                "templateArgs": [],
                "return": [
                    "Symbol"
                ]
            },
            "remove": {
                "return": [
                    "None"
                ]
            },
            "to_string": {
                "indent": [],
                "return": [
                    "str"
                ]
            },
            "unconditionalAdd": {
                "otherChild": [],
                "return": [
                    "None"
                ]
            }
        },
        "LookupKey": {
            "__init__": {
                "data": [],
                "return": [
                    "None"
                ]
            }
        },
        "SymbolLookupResult": {
            "__init__": {
                "symbols": [],
                "parentSymbol": [],
                "identOrOp": [],
                "templateParams": [],
                "templateArgs": [],
                "return": [
                    "None"
                ]
            }
        },
        "_DuplicateSymbolError": {
            "__init__": {
                "symbol": [],
                "declaration": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "_is_specialization": {
                "templateParams": [],
                "templateArgs": [],
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "sphinx.domains.index": {
        "IndexDomain": {
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "entries": {
                "return": []
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "env": [],
                "docname": [],
                "document": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,int]]"
                ]
            }
        },
        "IndexDirective": {
            "run": {
                "return": [
                    "list"
                ]
            }
        },
        "IndexRole": {
            "run": {
                "return": [
                    "tuple[list]"
                ]
            }
        }
    },
    "sphinx.domains.javascript": {
        "JSObject": {
            "_object_hierarchy_parts": {
                "sig_node": [],
                "return": [
                    "tuple"
                ]
            },
            "_toc_entry_name": {
                "sig_node": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "add_target_and_index": {
                "name_obj": [],
                "sig": [],
                "signode": [],
                "return": [
                    "None"
                ]
            },
            "after_content": {
                "return": [
                    "None"
                ]
            },
            "before_content": {
                "return": [
                    "None"
                ]
            },
            "get_display_prefix": {
                "return": [
                    "list"
                ]
            },
            "get_index_text": {
                "objectname": [],
                "name_obj": [],
                "return": [
                    "typing.Text"
                ]
            },
            "handle_signature": {
                "sig": [],
                "signode": [],
                "return": []
            }
        },
        "JavaScriptDomain": {
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "find_obj": {
                "env": [],
                "mod_name": [],
                "prefix": [],
                "name": [],
                "typ": [],
                "searchorder": [
                    "int"
                ],
                "return": [
                    "tuple[typing.Optional[typing.Text]]"
                ]
            },
            "get_full_qualified_name": {
                "node": [],
                "return": [
                    "None",
                    "str"
                ]
            },
            "get_objects": {
                "return": [
                    "typing.Generator[tuple[int]]"
                ]
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "modules": {
                "return": []
            },
            "note_module": {
                "modname": [],
                "node_id": [],
                "return": [
                    "None"
                ]
            },
            "note_object": {
                "fullname": [],
                "objtype": [],
                "node_id": [],
                "location": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "objects": {
                "return": []
            },
            "resolve_any_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "list",
                    "list[tuple]"
                ]
            },
            "resolve_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "None"
                ]
            }
        },
        "JSConstructor": {
            "get_display_prefix": {
                "return": [
                    "list"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,int]]"
                ]
            }
        },
        "JSXRefRole": {
            "process_link": {
                "env": [],
                "refnode": [],
                "has_explicit_title": [],
                "title": [],
                "target": [],
                "return": [
                    "tuple"
                ]
            }
        },
        "JSModule": {
            "run": {
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.domains.math": {
        "MathDomain": {
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "equations": {
                "return": []
            },
            "get_equation_number_for": {
                "labelid": [],
                "return": [
                    "None"
                ]
            },
            "get_objects": {
                "return": [
                    "list"
                ]
            },
            "has_equations": {
                "docname": [
                    "None"
                ],
                "return": [
                    "bool"
                ]
            },
            "math_node": {
                "node": [],
                "return": [
                    "bool"
                ]
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "note_equation": {
                "docname": [],
                "labelid": [],
                "location": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "env": [],
                "docname": [],
                "document": [],
                "return": [
                    "None"
                ]
            },
            "resolve_any_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "list",
                    "list[tuple[typing.Text]]"
                ]
            },
            "resolve_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,int]]"
                ]
            }
        },
        "MathReferenceRole": {
            "result_nodes": {
                "document": [],
                "env": [],
                "node": [],
                "is_ref": [],
                "return": [
                    "tuple[list]"
                ]
            }
        }
    },
    "sphinx.domains.python._object": {
        "PyObject": {
            "_object_hierarchy_parts": {
                "sig_node": [],
                "return": [
                    "tuple"
                ]
            },
            "_toc_entry_name": {
                "sig_node": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "add_target_and_index": {
                "name_cls": [],
                "sig": [],
                "signode": [],
                "return": [
                    "None"
                ]
            },
            "after_content": {
                "return": [
                    "None"
                ]
            },
            "before_content": {
                "return": [
                    "None"
                ]
            },
            "get_index_text": {
                "modname": [],
                "name": [],
                "return": [
                    "None"
                ]
            },
            "get_signature_prefix": {
                "sig": [],
                "return": [
                    "list"
                ]
            },
            "handle_signature": {
                "sig": [],
                "signode": [],
                "return": []
            },
            "needs_arglist": {
                "return": [
                    "bool"
                ]
            }
        },
        "global": {
            "global": {}
        },
        "PyXrefMixin": {
            "make_xref": {
                "rolename": [],
                "domain": [],
                "target": [],
                "innernode": [],
                "contnode": [
                    "None"
                ],
                "env": [
                    "None"
                ],
                "inliner": [
                    "None"
                ],
                "location": [
                    "None"
                ],
                "return": [
                    "pending_xref",
                    "list"
                ]
            },
            "make_xrefs": {
                "rolename": [],
                "domain": [],
                "target": [],
                "innernode": [],
                "contnode": [
                    "None"
                ],
                "env": [
                    "None"
                ],
                "inliner": [
                    "None"
                ],
                "location": [
                    "None"
                ],
                "return": [
                    "list[None]"
                ]
            }
        }
    },
    "sphinx.domains.rst": {
        "ReSTMarkup": {
            "_object_hierarchy_parts": {
                "sig_node": [],
                "return": [
                    "tuple"
                ]
            },
            "_toc_entry_name": {
                "sig_node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "add_target_and_index": {
                "name": [],
                "sig": [],
                "signode": [],
                "return": [
                    "None"
                ]
            },
            "get_index_text": {
                "objectname": [],
                "name": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ReSTDirectiveOption": {
            "add_target_and_index": {
                "name": [],
                "sig": [],
                "signode": [],
                "return": [
                    "None"
                ]
            },
            "current_directive": {
                "return": [
                    "typing.Text"
                ]
            },
            "handle_signature": {
                "sig": [],
                "signode": [],
                "return": [
                    "None"
                ]
            }
        },
        "ReSTDirective": {
            "after_content": {
                "return": [
                    "None"
                ]
            },
            "before_content": {
                "return": [
                    "None"
                ]
            },
            "get_index_text": {
                "objectname": [],
                "name": [],
                "return": []
            },
            "handle_signature": {
                "sig": [],
                "signode": [],
                "return": []
            }
        },
        "ReSTDomain": {
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "get_objects": {
                "return": [
                    "typing.Generator[tuple[int]]"
                ]
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "note_object": {
                "objtype": [],
                "name": [],
                "node_id": [],
                "location": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "objects": {
                "return": []
            },
            "resolve_any_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "list[tuple]"
                ]
            },
            "resolve_xref": {
                "env": [],
                "fromdocname": [],
                "builder": [],
                "typ": [],
                "target": [],
                "node": [],
                "contnode": [],
                "return": [
                    "None"
                ]
            }
        },
        "ReSTRole": {
            "get_index_text": {
                "objectname": [],
                "name": [],
                "return": []
            },
            "handle_signature": {
                "sig": [],
                "signode": [],
                "return": []
            }
        },
        "global": {
            "global": {},
            "parse_directive": {
                "d": [],
                "return": [
                    "tuple[typing.Text]",
                    "tuple"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,int]]"
                ]
            }
        }
    },
    "sphinx.environment.adapters": {
        "global": {
            "global": {}
        }
    },
    "sphinx.environment.adapters.asset": {
        "ImageAdapter": {
            "__init__": {
                "env": [],
                "return": [
                    "None"
                ]
            },
            "get_original_image_uri": {
                "name": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.environment.adapters.indexentries": {
        "IndexEntries": {
            "__init__": {
                "env": [],
                "return": [
                    "None"
                ]
            },
            "create_index": {
                "builder": [],
                "group_entries": [
                    "bool"
                ],
                "_fixre": [],
                "return": []
            }
        },
        "global": {
            "_add_entry": {
                "word": [],
                "subword": [],
                "main": [],
                "dic": [],
                "link": [],
                "key": [],
                "return": [
                    "None"
                ]
            },
            "_group_by_func": {
                "entry": [],
                "return": [
                    "_"
                ]
            },
            "_key_func_0": {
                "entry": [],
                "return": [
                    "tuple[bool]"
                ]
            },
            "_key_func_1": {
                "entry": [],
                "return": [
                    "tuple[tuple[int]]"
                ]
            },
            "_key_func_2": {
                "entry": [],
                "return": []
            },
            "global": {}
        }
    },
    "sphinx.environment.collectors": {
        "EnvironmentCollector": {
            "clear_doc": {
                "app": [],
                "env": [],
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "disable": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "enable": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "get_outdated_docs": {
                "app": [],
                "env": [],
                "added": [],
                "changed": [],
                "removed": [],
                "return": [
                    "list"
                ]
            },
            "get_updated_docs": {
                "app": [],
                "env": [],
                "return": [
                    "list"
                ]
            },
            "merge_other": {
                "app": [],
                "env": [],
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.environment.collectors.asset": {
        "DownloadFileCollector": {
            "clear_doc": {
                "app": [],
                "env": [],
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "merge_other": {
                "app": [],
                "env": [],
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "ImageCollector": {
            "clear_doc": {
                "app": [],
                "env": [],
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "collect_candidates": {
                "env": [],
                "imgpath": [],
                "candidates": [],
                "node": [],
                "return": [
                    "None"
                ]
            },
            "merge_other": {
                "app": [],
                "env": [],
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.environment.collectors.dependencies": {
        "DependenciesCollector": {
            "clear_doc": {
                "app": [],
                "env": [],
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "merge_other": {
                "app": [],
                "env": [],
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.environment.collectors.metadata": {
        "MetadataCollector": {
            "clear_doc": {
                "app": [],
                "env": [],
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "merge_other": {
                "app": [],
                "env": [],
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.environment.collectors.toctree": {
        "global": {
            "_make_anchor_name": {
                "ids": [],
                "num_entries": [],
                "return": [
                    "typing.Text"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "TocTreeCollector": {
            "_walk_doc": {
                "docname": [],
                "secnum": [],
                "return": [
                    "None"
                ]
            },
            "_walk_doctree": {
                "docname": [],
                "doctree": [],
                "secnum": [],
                "return": [
                    "None"
                ]
            },
            "_walk_toc": {
                "node": [],
                "secnums": [],
                "depth": [],
                "titlenode": [],
                "return": [
                    "None"
                ]
            },
            "_walk_toctree": {
                "toctreenode": [],
                "depth": [],
                "return": [
                    "None"
                ]
            },
            "assign_figure_numbers": {
                "env": [],
                "return": [
                    "list"
                ]
            },
            "assign_section_numbers": {
                "env": [],
                "return": [
                    "list"
                ]
            },
            "build_toc": {
                "node": [],
                "depth": [
                    "int"
                ],
                "return": [
                    "None"
                ]
            },
            "clear_doc": {
                "app": [],
                "env": [],
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "get_figtype": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "get_next_fignumber": {
                "figtype": [],
                "secnum": [],
                "return": [
                    "tuple"
                ]
            },
            "get_section_number": {
                "docname": [],
                "section": [],
                "return": [
                    "tuple"
                ]
            },
            "get_updated_docs": {
                "app": [],
                "env": [],
                "return": []
            },
            "merge_other": {
                "app": [],
                "env": [],
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "process_doc": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            },
            "register_fignumber": {
                "docname": [],
                "secnum": [],
                "figtype": [],
                "fignode": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.errors": {
        "ExtensionError": {
            "__init__": {
                "message": [],
                "orig_exc": [
                    "None"
                ],
                "modname": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            },
            "category": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "SphinxParallelError": {
            "__init__": {
                "message": [],
                "traceback": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": []
            }
        },
        "PycodeError": {
            "__str__": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.events": {
        "EventManager": {
            "__init__": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "add": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "connect": {
                "name": [],
                "callback": [],
                "priority": [],
                "return": [
                    "None"
                ]
            },
            "disconnect": {
                "listener_id": [],
                "return": [
                    "None"
                ]
            },
            "emit": {
                "name": [],
                "allowed_exceptions": [
                    "tuple"
                ],
                "args": [],
                "return": [
                    "list"
                ]
            },
            "emit_firstresult": {
                "name": [],
                "allowed_exceptions": [
                    "tuple"
                ],
                "args": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.ext": {
        "global": {
            "global": {}
        }
    },
    "sphinx.ext.autodoc.directive": {
        "DummyOptionSpec": {
            "__bool__": {
                "return": [
                    "bool"
                ]
            },
            "__getitem__": {
                "_key": [],
                "return": [
                    "typing.Callable"
                ]
            }
        },
        "DocumenterBridge": {
            "__init__": {
                "env": [],
                "reporter": [],
                "options": [],
                "lineno": [],
                "state": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "parse_generated_content": {
                "state": [],
                "content": [],
                "documenter": [],
                "return": []
            },
            "process_documenter_options": {
                "documenter": [],
                "config": [],
                "options": [],
                "return": [
                    "Options"
                ]
            }
        },
        "AutodocDirective": {
            "run": {
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.ext.autodoc.mock": {
        "_MockObject": {
            "__call__": {
                "kwargs": [],
                "args": [],
                "return": []
            },
            "__contains__": {
                "key": [],
                "return": [
                    "bool"
                ]
            },
            "__getattr__": {
                "key": [],
                "return": []
            },
            "__getitem__": {
                "key": [],
                "return": []
            },
            "__init__": {
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "__iter__": {
                "return": []
            },
            "__len__": {
                "return": [
                    "int"
                ]
            },
            "__mro_entries__": {
                "bases": [],
                "return": [
                    "tuple"
                ]
            },
            "__new__": {
                "cls": [],
                "kwargs": [],
                "args": [],
                "return": []
            },
            "__repr__": {
                "return": []
            }
        },
        "_MockModule": {
            "__getattr__": {
                "name": [],
                "return": []
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": []
            }
        },
        "MockFinder": {
            "__init__": {
                "modnames": [],
                "return": [
                    "None"
                ]
            },
            "find_spec": {
                "fullname": [],
                "path": [],
                "target": [
                    "None"
                ],
                "return": [
                    "ModuleSpec",
                    "None"
                ]
            },
            "invalidate_caches": {
                "return": [
                    "None"
                ]
            }
        },
        "MockLoader": {
            "__init__": {
                "finder": [],
                "return": [
                    "None"
                ]
            },
            "create_module": {
                "spec": [],
                "return": [
                    "_MockModule"
                ]
            },
            "exec_module": {
                "module": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_make_subclass": {
                "name": [],
                "module": [],
                "superclass": [
                    "_MockObject"
                ],
                "attributes": [
                    "None"
                ],
                "decorator_args": [
                    "tuple"
                ],
                "return": [
                    "typing.Type"
                ]
            },
            "global": {},
            "ismock": {
                "subject": [],
                "return": [
                    "bool"
                ]
            },
            "ismockmodule": {
                "subject": [],
                "return": [
                    "bool"
                ]
            },
            "mock": {
                "modnames": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "undecorate": {
                "subject": [],
                "return": []
            }
        }
    },
    "sphinx.ext.autodoc.preserve_defaults": {
        "DefaultValue": {
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": []
            }
        },
        "global": {
            "_get_arguments": {
                "return": [
                    "None"
                ]
            },
            "_get_arguments_inner": {
                "return": [
                    "None"
                ]
            },
            "_is_lambda": {
                "return": [
                    "bool"
                ]
            },
            "get_default_value": {
                "lines": [],
                "position": [],
                "return": [
                    "None"
                ]
            },
            "get_function_def": {
                "obj": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            },
            "update_defvalue": {
                "app": [],
                "obj": [],
                "bound_method": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.ext.autodoc.type_comment": {
        "global": {
            "get_type_comment": {
                "obj": [],
                "bound_method": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "not_suppressed": {
                "argtypes": [
                    "tuple"
                ],
                "return": [
                    "bool"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            },
            "signature_from_ast": {
                "node": [],
                "bound_method": [],
                "type_comment": [],
                "return": []
            },
            "update_annotations_using_type_comments": {
                "app": [],
                "obj": [],
                "bound_method": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.ext.autodoc.typehints": {
        "global": {
            "augment_descriptions_with_types": {
                "node": [],
                "annotations": [],
                "force_rtype": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "insert_field_list": {
                "node": [],
                "return": []
            },
            "merge_typehints": {
                "app": [],
                "domain": [],
                "objtype": [],
                "contentnode": [],
                "return": [
                    "None"
                ]
            },
            "modify_field_list": {
                "node": [],
                "annotations": [],
                "suppress_rtype": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "record_typehints": {
                "app": [],
                "objtype": [],
                "name": [],
                "obj": [],
                "options": [],
                "args": [],
                "retann": [],
                "return": [
                    "None"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        }
    },
    "sphinx.ext.autosectionlabel": {
        "global": {
            "get_node_depth": {
                "node": [],
                "return": [
                    "int"
                ]
            },
            "global": {},
            "register_sections_as_label": {
                "app": [],
                "document": [],
                "return": [
                    "None"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        }
    },
    "sphinx.ext.autosummary": {
        "FakeApplication": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "FakeDirective": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "ImportExceptionGroup": {
            "__init__": {
                "message": [],
                "exceptions": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_cleanup_signature": {
                "s": [],
                "return": [
                    "str"
                ]
            },
            "_import_by_name": {
                "name": [],
                "grouped_exception": [
                    "bool"
                ],
                "return": [
                    "tuple[str]",
                    "tuple[typing.Optional[str]]"
                ]
            },
            "autosummary_noop": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "autosummary_table_visit_html": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "autosummary_toc_visit_html": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "extract_summary": {
                "doc": [],
                "document": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_documenter": {
                "app": [],
                "obj": [],
                "parent": [],
                "return": []
            },
            "get_import_prefixes_from_env": {
                "env": [],
                "return": [
                    "list[typing.Optional[int]]"
                ]
            },
            "get_rst_suffix": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "get_supported_format": {
                "suffix": [],
                "return": [
                    "tuple[typing.Text]"
                ]
            },
            "global": {},
            "import_by_name": {
                "name": [],
                "prefixes": [
                    "tuple[None]"
                ],
                "return": [
                    "tuple[typing.Text]"
                ]
            },
            "import_ivar_by_name": {
                "name": [],
                "prefixes": [
                    "tuple[None]"
                ],
                "grouped_exception": [
                    "bool"
                ],
                "return": [
                    "tuple"
                ]
            },
            "limited_join": {
                "sep": [],
                "items": [],
                "max_chars": [
                    "int"
                ],
                "overflow_marker": [
                    "typing.Text"
                ],
                "return": []
            },
            "mangle_signature": {
                "sig": [],
                "max_chars": [
                    "int"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "parse": {
                "doc": [],
                "settings": [],
                "return": []
            },
            "process_generate_options": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            },
            "strip_arg_typehint": {
                "s": [],
                "return": []
            }
        },
        "Autosummary": {
            "append_row": {
                "column_texts": [],
                "return": [
                    "None"
                ]
            },
            "create_documenter": {
                "app": [],
                "obj": [],
                "parent": [],
                "full_name": [],
                "return": []
            },
            "get_items": {
                "names": [],
                "return": [
                    "list[tuple[typing.Text]]"
                ]
            },
            "get_table": {
                "items": [],
                "return": [
                    "list[autosummary_table]"
                ]
            },
            "import_by_name": {
                "name": [],
                "prefixes": [],
                "return": []
            },
            "run": {
                "return": []
            }
        },
        "AutoLink": {
            "run": {
                "return": [
                    "tuple"
                ]
            }
        }
    },
    "sphinx.ext.doctest": {
        "SphinxDocTestRunner": {
            "_DocTestRunner__patched_linecache_getlines": {
                "filename": [],
                "module_globals": [
                    "None"
                ],
                "return": []
            },
            "summarize": {
                "out": [],
                "verbose": [
                    "None"
                ],
                "return": []
            }
        },
        "DocTestBuilder": {
            "__del__": {
                "return": [
                    "None"
                ]
            },
            "_out": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "_warn_out": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "compile": {
                "code": [],
                "name": [],
                "type": [],
                "flags": [],
                "dont_inherit": [],
                "return": []
            },
            "condition": {
                "node": [],
                "return": [
                    "bool"
                ]
            },
            "finish": {
                "return": [
                    "None"
                ]
            },
            "get_filename_for_node": {
                "node": [],
                "docname": [],
                "return": [
                    "str"
                ]
            },
            "get_line_number": {
                "node": [],
                "return": [
                    "None",
                    "int"
                ]
            },
            "get_outdated_docs": {
                "return": []
            },
            "get_target_uri": {
                "docname": [],
                "typ": [
                    "None"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "init": {
                "return": [
                    "None"
                ]
            },
            "run_setup_cleanup": {
                "runner": [],
                "testcodes": [],
                "what": [],
                "return": [
                    "bool"
                ]
            },
            "s": {
                "v": [],
                "return": [
                    "typing.Text"
                ]
            },
            "skipped": {
                "node": [],
                "return": [
                    "bool"
                ]
            },
            "test_doc": {
                "docname": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            },
            "test_group": {
                "group": [],
                "return": [
                    "None"
                ]
            },
            "write_documents": {
                "docnames": [],
                "return": [
                    "None"
                ]
            }
        },
        "TestCode": {
            "__init__": {
                "code": [],
                "type": [],
                "filename": [],
                "lineno": [],
                "options": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "TestGroup": {
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "add_code": {
                "code": [],
                "prepend": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "is_allowed_version": {
                "spec": [],
                "version": [],
                "return": [
                    "bool"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        },
        "TestDirective": {
            "run": {
                "return": []
            }
        }
    },
    "sphinx.ext.duration": {
        "DurationDomain": {
            "clear": {
                "return": [
                    "None"
                ]
            },
            "clear_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "merge_domaindata": {
                "docnames": [],
                "otherdata": [],
                "return": [
                    "None"
                ]
            },
            "note_reading_duration": {
                "duration": [],
                "return": [
                    "None"
                ]
            },
            "reading_durations": {
                "return": []
            }
        },
        "global": {
            "global": {},
            "on_build_finished": {
                "app": [],
                "error": [],
                "return": [
                    "None"
                ]
            },
            "on_builder_inited": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "on_doctree_read": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            },
            "on_source_read": {
                "app": [],
                "docname": [],
                "content": [],
                "return": [
                    "None"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        }
    },
    "sphinx.ext.extlinks": {
        "ExternalLinksChecker": {
            "check_uri": {
                "refnode": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "make_link_role": {
                "name": [],
                "base_url": [],
                "caption": [],
                "return": []
            },
            "role": {
                "typ": [],
                "rawtext": [],
                "text": [],
                "lineno": [],
                "inliner": [],
                "options": [
                    "None"
                ],
                "content": [
                    "tuple"
                ],
                "return": [
                    "tuple[list]"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            },
            "setup_link_roles": {
                "app": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.ext.githubpages": {
        "global": {
            "_get_domain_from_url": {
                "url": [],
                "return": [
                    "typing.Text"
                ]
            },
            "create_nojekyll_and_cname": {
                "app": [],
                "env": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        }
    },
    "sphinx.ext.ifconfig": {
        "global": {
            "global": {},
            "process_ifconfig_nodes": {
                "app": [],
                "doctree": [],
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        },
        "IfConfig": {
            "run": {
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.ext.imgconverter": {
        "ImagemagickConverter": {
            "convert": {
                "_from": [],
                "_to": [],
                "return": [
                    "bool"
                ]
            },
            "is_available": {
                "return": [
                    "bool"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        }
    },
    "sphinx.ext.intersphinx": {
        "global": {
            "__getattr__": {
                "name": [],
                "return": [
                    "typing.Text",
                    "tuple[int]"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, int]"
                ]
            }
        }
    },
    "sphinx.ext.intersphinx.__main__": {
        "global": {
            "global": {}
        }
    },
    "sphinx.ext.intersphinx._cli": {
        "global": {
            "global": {},
            "inspect_main": {
                "return": [
                    "int"
                ]
            }
        }
    },
    "sphinx.ext.intersphinx._load": {
        "global": {
            "_fetch_inventory": {
                "target_uri": [],
                "inv_location": [],
                "config": [],
                "srcdir": [],
                "return": []
            },
            "_fetch_inventory_group": {
                "project": [],
                "cache": [],
                "now": [],
                "config": [],
                "srcdir": [],
                "return": [
                    "bool"
                ]
            },
            "_get_safe_url": {
                "url": [],
                "return": []
            },
            "_read_from_url": {
                "url": [],
                "config": [],
                "return": []
            },
            "_strip_basic_auth": {
                "url": [],
                "return": []
            },
            "fetch_inventory": {
                "app": [],
                "uri": [],
                "inv": [],
                "return": []
            },
            "global": {},
            "load_mappings": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "validate_intersphinx_mapping": {
                "app": [],
                "config": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.ext.intersphinx._shared": {
        "_IntersphinxProject": {
            "__delattr__": {
                "key": [],
                "return": [
                    "None"
                ]
            },
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "target_uri": [],
                "locations": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "__setattr__": {
                "key": [],
                "value": [],
                "return": [
                    "None"
                ]
            }
        },
        "InventoryAdapter": {
            "__init__": {
                "env": [],
                "return": [
                    "None"
                ]
            },
            "cache": {
                "return": []
            },
            "clear": {
                "return": [
                    "None"
                ]
            },
            "main_inventory": {
                "return": []
            },
            "named_inventory": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.ext.linkcode": {
        "global": {
            "doctree_read": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        }
    },
    "sphinx.ext.napoleon": {
        "Config": {
            "__init__": {
                "settings": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_patch_python_domain": {
                "return": [
                    "None"
                ]
            },
            "_process_docstring": {
                "app": [],
                "what": [],
                "name": [],
                "obj": [],
                "options": [],
                "lines": [],
                "return": [
                    "None"
                ]
            },
            "_skip_member": {
                "app": [],
                "what": [],
                "name": [],
                "obj": [],
                "skip": [],
                "options": [],
                "return": [
                    "bool",
                    "None"
                ]
            },
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, bool]"
                ]
            }
        }
    },
    "sphinx.ext.viewcode": {
        "global": {
            "_get_full_modname": {
                "modname": [],
                "attribute": [],
                "return": [
                    "None"
                ]
            },
            "collect_pages": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "doctree_read": {
                "app": [],
                "doctree": [],
                "return": [
                    "None"
                ]
            },
            "env_merge_info": {
                "app": [],
                "env": [],
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "env_purge_doc": {
                "app": [],
                "env": [],
                "docname": [],
                "return": [
                    "None"
                ]
            },
            "get_module_filename": {
                "app": [],
                "modname": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "has_tag": {
                "modname": [],
                "fullname": [],
                "docname": [],
                "refname": [],
                "return": [
                    "bool"
                ]
            },
            "is_supported_builder": {
                "builder": [],
                "return": [
                    "bool"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, int]"
                ]
            },
            "should_generate_module_page": {
                "app": [],
                "modname": [],
                "return": [
                    "bool"
                ]
            }
        },
        "ViewcodeAnchorTransform": {
            "convert_viewcode_anchors": {
                "return": [
                    "None"
                ]
            },
            "remove_viewcode_anchors": {
                "return": [
                    "None"
                ]
            },
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.extension": {
        "Extension": {
            "__init__": {
                "name": [],
                "module": [],
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            },
            "verify_needs_extensions": {
                "app": [],
                "config": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.highlighting": {
        "PygmentsBridge": {
            "__init__": {
                "dest": [
                    "typing.Text"
                ],
                "stylename": [
                    "typing.Text"
                ],
                "latex_engine": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "get_formatter": {
                "kwargs": [],
                "return": []
            },
            "get_lexer": {
                "source": [],
                "lang": [],
                "opts": [
                    "None"
                ],
                "force": [
                    "bool"
                ],
                "location": [
                    "None"
                ],
                "return": []
            },
            "get_style": {
                "stylename": [],
                "return": []
            },
            "get_stylesheet": {
                "return": []
            },
            "highlight_block": {
                "source": [],
                "lang": [],
                "opts": [
                    "None"
                ],
                "force": [
                    "bool"
                ],
                "location": [
                    "None"
                ],
                "kwargs": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.io": {
        "global": {
            "SphinxDummySourceClass": {
                "source": [],
                "kwargs": [],
                "args": [],
                "return": []
            },
            "create_publisher": {
                "app": [],
                "filetype": [],
                "return": [
                    "Publisher"
                ]
            },
            "global": {}
        },
        "SphinxBaseReader": {
            "__init__": {
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "get_transforms": {
                "return": []
            },
            "new_document": {
                "return": []
            },
            "setup": {
                "app": [],
                "return": [
                    "None"
                ]
            }
        },
        "SphinxFileInput": {
            "__init__": {
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            }
        },
        "SphinxStandaloneReader": {
            "read": {
                "source": [],
                "parser": [],
                "settings": [],
                "return": []
            },
            "read_source": {
                "env": [],
                "return": []
            },
            "setup": {
                "app": [],
                "return": [
                    "None"
                ]
            }
        },
        "SphinxI18nReader": {
            "setup": {
                "app": [],
                "return": [
                    "None"
                ]
            }
        },
        "SphinxDummyWriter": {
            "translate": {
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.parsers": {
        "RSTParser": {
            "decorate": {
                "content": [],
                "return": [
                    "None"
                ]
            },
            "get_transforms": {
                "return": []
            },
            "parse": {
                "inputstring": [],
                "document": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "Parser": {
            "set_application": {
                "app": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.pycode": {
        "ModuleAnalyzer": {
            "__init__": {
                "source": [],
                "modname": [],
                "srcname": [],
                "return": [
                    "None"
                ]
            },
            "analyze": {
                "return": [
                    "None"
                ]
            },
            "find_attr_docs": {
                "return": []
            },
            "find_tags": {
                "return": []
            },
            "for_file": {
                "cls": [],
                "filename": [],
                "modname": [],
                "return": []
            },
            "for_module": {
                "cls": [],
                "modname": [],
                "return": [
                    "PycodeError"
                ]
            },
            "for_string": {
                "cls": [],
                "string": [],
                "modname": [],
                "srcname": [
                    "typing.Text"
                ],
                "return": []
            },
            "get_module_source": {
                "modname": [],
                "return": [
                    "tuple",
                    "tuple[None]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.pycode.ast": {
        "_UnparseVisitor": {
            "__init__": {
                "code": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "_visit_arg_with_default": {
                "arg": [],
                "default": [],
                "return": []
            },
            "_visit_op": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "generic_visit": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "is_simple_tuple": {
                "value": [],
                "return": [
                    "bool"
                ]
            },
            "visit_Attribute": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_BinOp": {
                "node": [],
                "return": [
                    "str"
                ]
            },
            "visit_BoolOp": {
                "node": [],
                "return": [
                    "str"
                ]
            },
            "visit_Call": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_Constant": {
                "node": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "visit_Dict": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_Lambda": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_List": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_Name": {
                "node": [],
                "return": []
            },
            "visit_Set": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_Slice": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_Subscript": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_Tuple": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_UnaryOp": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_arg": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "visit_arguments": {
                "node": [],
                "return": [
                    "str"
                ]
            }
        },
        "global": {
            "global": {},
            "unparse": {
                "node": [],
                "code": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.pygments_styles": {
        "global": {
            "global": {}
        }
    },
    "sphinx.registry": {
        "SphinxComponentRegistry": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "add_autodoc_attrgetter": {
                "typ": [],
                "attrgetter": [],
                "return": [
                    "None"
                ]
            },
            "add_builder": {
                "builder": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_crossref_type": {
                "directivename": [],
                "rolename": [],
                "indextemplate": [
                    "typing.Text"
                ],
                "ref_nodeclass": [
                    "None"
                ],
                "objname": [
                    "typing.Text"
                ],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_css_files": {
                "filename": [],
                "attributes": [],
                "return": [
                    "None"
                ]
            },
            "add_directive_to_domain": {
                "domain": [],
                "name": [],
                "cls": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_documenter": {
                "objtype": [],
                "documenter": [],
                "return": [
                    "None"
                ]
            },
            "add_domain": {
                "domain": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_enumerable_node": {
                "node": [],
                "figtype": [],
                "title_getter": [
                    "None"
                ],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_html_math_renderer": {
                "name": [],
                "inline_renderers": [],
                "block_renderers": [],
                "return": [
                    "None"
                ]
            },
            "add_html_theme": {
                "name": [],
                "theme_path": [],
                "return": [
                    "None"
                ]
            },
            "add_index_to_domain": {
                "domain": [],
                "index": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_js_file": {
                "filename": [],
                "attributes": [],
                "return": [
                    "None"
                ]
            },
            "add_latex_package": {
                "name": [],
                "options": [],
                "after_hyperref": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_object_type": {
                "directivename": [],
                "rolename": [],
                "indextemplate": [
                    "typing.Text"
                ],
                "parse_node": [
                    "None"
                ],
                "ref_nodeclass": [
                    "None"
                ],
                "objname": [
                    "typing.Text"
                ],
                "doc_field_types": [
                    "tuple"
                ],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_post_transform": {
                "transform": [],
                "return": [
                    "None"
                ]
            },
            "add_role_to_domain": {
                "domain": [],
                "name": [],
                "role": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_source_parser": {
                "parser": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_source_suffix": {
                "suffix": [],
                "filetype": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "add_transform": {
                "transform": [],
                "return": [
                    "None"
                ]
            },
            "add_translation_handlers": {
                "node": [],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "add_translator": {
                "name": [],
                "translator": [],
                "override": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "autodoc_attrgettrs": {
                "return": []
            },
            "create_builder": {
                "app": [],
                "name": [],
                "env": [],
                "return": []
            },
            "create_domains": {
                "env": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "create_source_parser": {
                "app": [],
                "filename": [],
                "return": [
                    "SphinxParser"
                ]
            },
            "create_translator": {
                "builder": [],
                "args": [],
                "return": []
            },
            "get_envversion": {
                "app": [],
                "return": [
                    "dict[typing.Text, ]"
                ]
            },
            "get_post_transforms": {
                "return": []
            },
            "get_publisher": {
                "app": [],
                "filetype": [],
                "return": []
            },
            "get_source_parser": {
                "filetype": [],
                "return": []
            },
            "get_source_parsers": {
                "return": []
            },
            "get_transforms": {
                "return": []
            },
            "get_translator_class": {
                "builder": [],
                "return": []
            },
            "has_domain": {
                "domain": [],
                "return": [
                    "bool"
                ]
            },
            "has_latex_package": {
                "name": [],
                "return": [
                    "bool"
                ]
            },
            "load_extension": {
                "app": [],
                "extname": [],
                "return": [
                    "None"
                ]
            },
            "preload_builder": {
                "app": [],
                "name": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "merge_source_suffix": {
                "app": [],
                "config": [],
                "return": [
                    "None"
                ]
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.search.da": {
        "global": {
            "global": {}
        },
        "SearchDanish": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.de": {
        "global": {
            "global": {}
        },
        "SearchGerman": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.en": {
        "global": {
            "global": {}
        },
        "SearchEnglish": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.es": {
        "global": {
            "global": {}
        },
        "SearchSpanish": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.fi": {
        "global": {
            "global": {}
        },
        "SearchFinnish": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.fr": {
        "global": {
            "global": {}
        },
        "SearchFrench": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.hu": {
        "global": {
            "global": {}
        },
        "SearchHungarian": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.it": {
        "global": {
            "global": {}
        },
        "SearchItalian": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.ja": {
        "MecabSplitter": {
            "__del__": {
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "init_ctypes": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "init_native": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "split": {
                "input": [],
                "return": []
            }
        },
        "BaseSplitter": {
            "__init__": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "split": {
                "input": [],
                "return": [
                    "None"
                ]
            }
        },
        "JanomeSplitter": {
            "__init__": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "init_tokenizer": {
                "return": [
                    "None"
                ]
            },
            "split": {
                "input": [],
                "return": [
                    "list[str]"
                ]
            }
        },
        "DefaultSplitter": {
            "ctype_": {
                "char": [],
                "return": [
                    "typing.Text"
                ]
            },
            "split": {
                "input": [],
                "return": [
                    "list"
                ]
            },
            "ts_": {
                "dict": [],
                "key": [],
                "return": [
                    "int"
                ]
            }
        },
        "global": {
            "global": {}
        },
        "SearchJapanese": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "split": {
                "input": [],
                "return": []
            },
            "stem": {
                "word": [],
                "return": []
            },
            "word_filter": {
                "stemmed_word": [],
                "return": [
                    "bool"
                ]
            }
        }
    },
    "sphinx.search.nl": {
        "global": {
            "global": {}
        },
        "SearchDutch": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.no": {
        "global": {
            "global": {}
        },
        "SearchNorwegian": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.pt": {
        "global": {
            "global": {}
        },
        "SearchPortuguese": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.ro": {
        "global": {
            "global": {}
        },
        "SearchRomanian": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.ru": {
        "global": {
            "global": {}
        },
        "SearchRussian": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.sv": {
        "global": {
            "global": {}
        },
        "SearchSwedish": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.tr": {
        "global": {
            "global": {}
        },
        "SearchTurkish": {
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            }
        }
    },
    "sphinx.search.zh": {
        "SearchChinese": {
            "__init__": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "init": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "split": {
                "input": [],
                "return": [
                    "list"
                ]
            },
            "stem": {
                "word": [],
                "return": []
            },
            "word_filter": {
                "stemmed_word": [],
                "return": [
                    "bool"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.testing": {
        "global": {
            "global": {}
        }
    },
    "sphinx.testing.fixtures": {
        "global": {
            "_shared_result_cache": {
                "return": [
                    "None"
                ]
            },
            "app": {
                "test_params": [],
                "app_params": [],
                "make_app": [],
                "shared_result": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "app_params": {
                "request": [],
                "test_params": [],
                "shared_result": [],
                "sphinx_test_tempdir": [],
                "rootdir": [],
                "return": []
            },
            "global": {},
            "if_graphviz_found": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "make": {
                "kwargs": [],
                "args": [],
                "return": [
                    "SphinxTestApp",
                    "SphinxTestAppWrapperForSkipBuilding"
                ]
            },
            "make_app": {
                "test_params": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "pytest_configure": {
                "config": [],
                "return": [
                    "None"
                ]
            },
            "rollback_sysmodules": {
                "return": [
                    "typing.Generator"
                ]
            },
            "rootdir": {
                "return": [
                    "None"
                ]
            },
            "shared_result": {
                "return": [
                    "SharedResult"
                ]
            },
            "sphinx_test_tempdir": {
                "tmp_path_factory": [],
                "return": []
            },
            "status": {
                "app": [],
                "return": []
            },
            "test_params": {
                "request": [],
                "return": [
                    "dict[typing.Text, None]"
                ]
            },
            "warning": {
                "app": [],
                "return": []
            }
        },
        "SharedResult": {
            "restore": {
                "key": [],
                "return": [
                    "dict",
                    "dict[typing.Text, ]"
                ]
            },
            "store": {
                "key": [],
                "app_": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.testing.path": {
        "path": {
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "abspath": {
                "return": []
            },
            "basename": {
                "return": []
            },
            "copytree": {
                "destination": [],
                "symlinks": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "exists": {
                "return": []
            },
            "isabs": {
                "return": []
            },
            "isdir": {
                "return": []
            },
            "isfile": {
                "return": []
            },
            "islink": {
                "return": []
            },
            "ismount": {
                "return": []
            },
            "joinpath": {
                "args": [],
                "return": []
            },
            "lexists": {
                "return": []
            },
            "listdir": {
                "return": []
            },
            "makedirs": {
                "mode": [
                    "int"
                ],
                "exist_ok": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "movetree": {
                "destination": [],
                "return": [
                    "None"
                ]
            },
            "open": {
                "mode": [
                    "typing.Text"
                ],
                "kwargs": [],
                "return": [
                    "typing.IO"
                ]
            },
            "parent": {
                "return": []
            },
            "read_bytes": {
                "return": [
                    "str"
                ]
            },
            "read_text": {
                "encoding": [
                    "typing.Text"
                ],
                "kwargs": [],
                "return": [
                    "str"
                ]
            },
            "rmtree": {
                "ignore_errors": [
                    "bool"
                ],
                "onerror": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "stat": {
                "return": []
            },
            "unlink": {
                "return": [
                    "None"
                ]
            },
            "utime": {
                "arg": [],
                "return": [
                    "None"
                ]
            },
            "write_bytes": {
                "bytes": [],
                "append": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "write_text": {
                "text": [],
                "encoding": [
                    "typing.Text"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "getumask": {
                "return": []
            },
            "global": {}
        }
    },
    "sphinx.testing.restructuredtext": {
        "global": {
            "global": {},
            "parse": {
                "app": [],
                "text": [],
                "docname": [
                    "typing.Text"
                ],
                "return": []
            }
        }
    },
    "sphinx.testing.util": {
        "global": {
            "__getattr__": {
                "name": [],
                "return": [
                    "typing.Text",
                    "tuple[int]"
                ]
            },
            "_clean_up_global_state": {
                "return": [
                    "None"
                ]
            },
            "assert_node": {
                "node": [],
                "cls": [
                    "None"
                ],
                "xpath": [
                    "typing.Text"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "etree_parse": {
                "path": [],
                "return": []
            },
            "global": {}
        },
        "SphinxTestApp": {
            "__init__": {
                "buildername": [
                    "typing.Text"
                ],
                "srcdir": [],
                "builddir": [
                    "None"
                ],
                "freshenv": [
                    "bool"
                ],
                "confoverrides": [
                    "None"
                ],
                "status": [
                    "None"
                ],
                "warning": [
                    "None"
                ],
                "tags": [
                    "tuple"
                ],
                "docutils_conf": [
                    "None"
                ],
                "parallel": [
                    "int"
                ],
                "verbosity": [
                    "int"
                ],
                "warningiserror": [
                    "bool"
                ],
                "pdb": [
                    "bool"
                ],
                "exception_on_warning": [
                    "bool"
                ],
                "extras": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "_init_builder": {
                "return": [
                    "None"
                ]
            },
            "build": {
                "force_all": [
                    "bool"
                ],
                "filenames": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "cleanup": {
                "doctrees": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "status": {
                "return": []
            },
            "warning": {
                "return": []
            }
        },
        "SphinxTestAppWrapperForSkipBuilding": {
            "build": {
                "force_all": [
                    "bool"
                ],
                "filenames": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.transforms.compact_bullet_list": {
        "RefOnlyBulletListTransform": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "check_refonly_list": {
                "node": [],
                "return": [
                    "bool"
                ]
            }
        },
        "RefOnlyListChecker": {
            "default_visit": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "invisible_visit": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_bullet_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_list_item": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.transforms.i18n": {
        "_NodeUpdater": {
            "__init__": {
                "node": [],
                "patch": [],
                "document": [],
                "noqa": [],
                "return": [
                    "None"
                ]
            },
            "compare_references": {
                "old_refs": [],
                "new_refs": [],
                "warning_msg": [],
                "return": [
                    "None"
                ]
            },
            "get_ref_key": {
                "node": [],
                "return": [
                    "None",
                    "tuple"
                ]
            },
            "list_replace_or_append": {
                "lst": [],
                "old": [],
                "new": [],
                "return": [
                    "None"
                ]
            },
            "update_autofootnote_references": {
                "return": [
                    "None"
                ]
            },
            "update_citation_references": {
                "return": [
                    "None"
                ]
            },
            "update_leaves": {
                "return": [
                    "None"
                ]
            },
            "update_pending_xrefs": {
                "return": [
                    "None"
                ]
            },
            "update_refnamed_footnote_references": {
                "return": [
                    "None"
                ]
            },
            "update_refnamed_references": {
                "return": [
                    "None"
                ]
            },
            "update_title_mapping": {
                "return": [
                    "bool"
                ]
            }
        },
        "AddTranslationClasses": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "Locale": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "PreserveTranslatableMessages": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "RemoveTranslatableInline": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "TranslationProgressTotaliser": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "parse_noqa": {
                "source": [],
                "return": [
                    "tuple[bool]"
                ]
            },
            "publish_msgstr": {
                "app": [],
                "source": [],
                "source_path": [],
                "source_line": [],
                "config": [],
                "settings": [],
                "return": []
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.transforms.post_transforms": {
        "SphinxPostTransform": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "is_supported": {
                "return": [
                    "bool"
                ]
            },
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "SigElementFallbackTransform": {
            "fallback": {
                "node_type": [],
                "return": [
                    "None"
                ]
            },
            "has_visitor": {
                "translator": [],
                "node": [],
                "return": [
                    "bool"
                ]
            },
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "ReferencesResolver": {
            "find_pending_xref_condition": {
                "node": [],
                "conditions": [],
                "return": [
                    "None"
                ]
            },
            "matches_ignore": {
                "entry_type": [],
                "entry_target": [],
                "return": [
                    "bool"
                ]
            },
            "resolve_anyref": {
                "refdoc": [],
                "node": [],
                "contnode": [],
                "return": [
                    "None",
                    "typing.Text"
                ]
            },
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "stringify": {
                "name": [],
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "warn_missing_reference": {
                "refdoc": [],
                "typ": [],
                "target": [],
                "node": [],
                "domain": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "OnlyNodeTransform": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "PropagateDescDomain": {
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.transforms.post_transforms.code": {
        "HighlightLanguageVisitor": {
            "__init__": {
                "document": [],
                "default_language": [],
                "return": [
                    "None"
                ]
            },
            "depart_document": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_start_of_file": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "unknown_departure": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "unknown_visit": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_document": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_highlightlang": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_literal_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_start_of_file": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "HighlightLanguageTransform": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "TrimDoctestFlagsTransform": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "is_pyconsole": {
                "node": [],
                "return": [
                    "bool"
                ]
            },
            "strip_doctest_flags": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.transforms.references": {
        "SphinxDanglingReferences": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "SphinxDomains": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        }
    },
    "sphinx.util": {
        "global": {
            "__getattr__": {
                "name": [],
                "return": [
                    "typing.Text",
                    "tuple[int]"
                ]
            },
            "_md5": {
                "data": [
                    "bytes"
                ],
                "_kw": [],
                "return": []
            },
            "_sha1": {
                "data": [
                    "bytes"
                ],
                "_kw": [],
                "return": []
            },
            "docname_join": {
                "basedocname": [],
                "docname": [],
                "return": []
            },
            "get_filetype": {
                "source_suffix": [],
                "filename": [],
                "return": [
                    "typing.Text"
                ]
            },
            "global": {}
        }
    },
    "sphinx.util._files": {
        "FilenameUniqDict": {
            "__getstate__": {
                "return": []
            },
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "__setstate__": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "add_file": {
                "docname": [],
                "newfile": [],
                "return": [
                    "typing.Text"
                ]
            },
            "merge_other": {
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "purge_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            }
        },
        "DownloadFiles": {
            "add_file": {
                "docname": [],
                "filename": [],
                "return": []
            },
            "merge_other": {
                "docnames": [],
                "other": [],
                "return": [
                    "None"
                ]
            },
            "purge_doc": {
                "docname": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.util._importer": {
        "global": {
            "global": {},
            "import_object": {
                "source": [
                    "typing.Text"
                ],
                "return": []
            }
        }
    },
    "sphinx.util._io": {
        "TeeStripANSI": {
            "__init__": {
                "stream_term": [],
                "stream_file": [],
                "return": [
                    "None"
                ]
            },
            "flush": {
                "return": [
                    "None"
                ]
            },
            "write": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        },
        "SupportsWrite": {
            "write": {
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.util._lines": {
        "global": {
            "global": {},
            "parse_line_num_spec": {
                "spec": [],
                "total": [],
                "return": [
                    "list[int]"
                ]
            }
        }
    },
    "sphinx.util._pathlib": {
        "_StrPath": {
            "__add__": {
                "other": [],
                "return": []
            },
            "__bool__": {
                "return": [
                    "bool"
                ]
            },
            "__contains__": {
                "item": [],
                "return": [
                    "bool"
                ]
            },
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__getattr__": {
                "item": [],
                "return": []
            },
            "__getitem__": {
                "item": [],
                "return": []
            },
            "__hash__": {
                "return": []
            },
            "__len__": {
                "return": [
                    "int"
                ]
            },
            "replace": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.util._serialise": {
        "global": {
            "_stable_str_prep": {
                "obj": [],
                "return": [
                    "list",
                    "typing.Text",
                    "str"
                ]
            },
            "global": {},
            "stable_hash": {
                "obj": [],
                "return": []
            },
            "stable_str": {
                "obj": [],
                "indent": [
                    "None"
                ],
                "return": []
            }
        }
    },
    "sphinx.util._timestamps": {
        "global": {
            "_format_rfc3339_microseconds": {
                "return": []
            },
            "global": {}
        }
    },
    "sphinx.util._uri": {
        "global": {
            "encode_uri": {
                "uri": [],
                "return": []
            },
            "global": {},
            "is_url": {
                "url": [],
                "return": [
                    "bool"
                ]
            }
        }
    },
    "sphinx.util.build_phase": {
        "global": {
            "global": {}
        }
    },
    "sphinx.util.cfamily": {
        "ASTAttributeList": {
            "__add__": {
                "other": [],
                "return": [
                    "ASTAttributeList"
                ]
            },
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "__len__": {
                "return": [
                    "int"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "str"
                ]
            },
            "describe_signature": {
                "signode": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTBaseBase": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "__str__": {
                "return": []
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "None"
                ]
            },
            "clone": {
                "return": []
            },
            "get_display_string": {
                "return": []
            }
        },
        "ASTCPPAttribute": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "arg": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTGnuAttribute": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            }
        },
        "ASTGnuAttributeList": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "attrs": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTIdAttribute": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "id": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": []
            },
            "describe_signature": {
                "signode": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTParenAttribute": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "id": [],
                "arg": [],
                "return": [
                    "None"
                ]
            },
            "_stringify": {
                "transform": [],
                "return": [
                    "typing.Text"
                ]
            },
            "describe_signature": {
                "signode": [],
                "return": [
                    "None"
                ]
            }
        },
        "BaseParser": {
            "__init__": {
                "definition": [],
                "location": [],
                "config": [],
                "return": [
                    "None"
                ]
            },
            "_make_multi_error": {
                "errors": [],
                "header": [],
                "return": [
                    "DefinitionError"
                ]
            },
            "_parse_attribute": {
                "return": [
                    "ASTCPPAttribute",
                    "ASTGnuAttributeList",
                    "ASTIdAttribute",
                    "ASTParenAttribute",
                    "None"
                ]
            },
            "_parse_attribute_list": {
                "return": [
                    "ASTAttributeList"
                ]
            },
            "_parse_balanced_token_seq": {
                "end": [],
                "return": []
            },
            "_parse_paren_expression_list": {
                "return": [
                    "None"
                ]
            },
            "assert_end": {
                "allowSemicolon": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "current_char": {
                "return": [
                    "typing.Text"
                ]
            },
            "eof": {
                "return": [
                    "bool"
                ]
            },
            "fail": {
                "msg": [],
                "return": [
                    "None"
                ]
            },
            "id_attributes": {
                "return": [
                    "None"
                ]
            },
            "language": {
                "return": [
                    "None"
                ]
            },
            "match": {
                "regex": [],
                "return": [
                    "bool"
                ]
            },
            "matched_text": {
                "return": [
                    "typing.Text"
                ]
            },
            "paren_attributes": {
                "return": [
                    "None"
                ]
            },
            "read_rest": {
                "return": []
            },
            "skip_string": {
                "string": [],
                "return": [
                    "bool"
                ]
            },
            "skip_string_and_ws": {
                "string": [],
                "return": [
                    "bool"
                ]
            },
            "skip_word": {
                "word": [],
                "return": []
            },
            "skip_word_and_ws": {
                "word": [],
                "return": [
                    "bool"
                ]
            },
            "skip_ws": {
                "return": []
            },
            "status": {
                "msg": [],
                "return": [
                    "None"
                ]
            },
            "warn": {
                "msg": [],
                "return": [
                    "None"
                ]
            }
        },
        "ASTAttribute": {
            "describe_signature": {
                "signode": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "verify_description_mode": {
                "mode": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.util.console": {
        "global": {
            "black": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "blink": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "blue": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "bold": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "brown": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "color_terminal": {
                "return": [
                    "bool"
                ]
            },
            "colorize": {
                "name": [],
                "text": [],
                "input_mode": [
                    "bool"
                ],
                "return": []
            },
            "coloron": {
                "return": [
                    "None"
                ]
            },
            "create_color_func": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "darkblue": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "darkgray": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "darkgreen": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "darkred": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "escseq": {
                "name": [],
                "return": []
            },
            "faint": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "fuchsia": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "get_terminal_width": {
                "return": [
                    "int"
                ]
            },
            "global": {},
            "green": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "inner": {
                "text": [],
                "return": []
            },
            "lightgray": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "nocolor": {
                "return": [
                    "None"
                ]
            },
            "purple": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "red": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "reset": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "standout": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "strip_colors": {
                "s": [],
                "return": []
            },
            "strip_escape_sequences": {
                "return": []
            },
            "teal": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "term_width_line": {
                "text": [],
                "return": []
            },
            "terminal_safe": {
                "s": [],
                "return": []
            },
            "turquoise": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "underline": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "white": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "yellow": {
                "text": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.util.docfields": {
        "DocFieldTransformer": {
            "__init__": {
                "directive": [],
                "return": [
                    "None"
                ]
            },
            "transform": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "transform_all": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "Field": {
            "__init__": {
                "name": [],
                "names": [
                    "tuple"
                ],
                "label": [
                    "typing.Text"
                ],
                "has_arg": [
                    "bool"
                ],
                "rolename": [
                    "typing.Text"
                ],
                "bodyrolename": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "make_entry": {
                "fieldarg": [],
                "content": [],
                "return": [
                    "tuple"
                ]
            },
            "make_field": {
                "types": [],
                "domain": [],
                "item": [],
                "env": [
                    "None"
                ],
                "inliner": [
                    "None"
                ],
                "location": [
                    "None"
                ],
                "return": []
            },
            "make_xref": {
                "rolename": [],
                "domain": [],
                "target": [],
                "innernode": [],
                "contnode": [
                    "None"
                ],
                "env": [
                    "None"
                ],
                "inliner": [
                    "None"
                ],
                "location": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "make_xrefs": {
                "rolename": [],
                "domain": [],
                "target": [],
                "innernode": [],
                "contnode": [
                    "None"
                ],
                "env": [
                    "None"
                ],
                "inliner": [
                    "None"
                ],
                "location": [
                    "None"
                ],
                "return": [
                    "list"
                ]
            }
        },
        "GroupedField": {
            "__init__": {
                "name": [],
                "names": [
                    "tuple"
                ],
                "label": [
                    "typing.Text"
                ],
                "rolename": [
                    "typing.Text"
                ],
                "can_collapse": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "make_field": {
                "types": [],
                "domain": [],
                "items": [],
                "env": [
                    "None"
                ],
                "inliner": [
                    "None"
                ],
                "location": [
                    "None"
                ],
                "return": []
            }
        },
        "TypedField": {
            "__init__": {
                "name": [],
                "names": [
                    "tuple"
                ],
                "typenames": [
                    "tuple"
                ],
                "label": [
                    "typing.Text"
                ],
                "rolename": [
                    "typing.Text"
                ],
                "typerolename": [
                    "typing.Text"
                ],
                "can_collapse": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "handle_item": {
                "fieldarg": [],
                "content": [],
                "return": [
                    "list"
                ]
            },
            "make_field": {
                "types": [],
                "domain": [],
                "items": [],
                "env": [
                    "None"
                ],
                "inliner": [
                    "None"
                ],
                "location": [
                    "None"
                ],
                "return": []
            }
        },
        "global": {
            "_is_single_paragraph": {
                "node": [],
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "sphinx.util.docstrings": {
        "global": {
            "global": {},
            "prepare_commentdoc": {
                "s": [],
                "return": [
                    "list[typing.Text]"
                ]
            },
            "prepare_docstring": {
                "s": [],
                "tabsize": [
                    "int"
                ],
                "return": []
            },
            "separate_metadata": {
                "s": [],
                "return": [
                    "tuple[dict]",
                    "tuple[typing.Union[str,dict]]"
                ]
            }
        }
    },
    "sphinx.util.exceptions": {
        "global": {
            "format_exception_cut_frames": {
                "x": [
                    "int"
                ],
                "return": [
                    "str"
                ]
            },
            "global": {},
            "save_traceback": {
                "app": [],
                "exc": [],
                "return": []
            }
        }
    },
    "sphinx.util.fileutil": {
        "global": {
            "_template_basename": {
                "filename": [],
                "return": [
                    "str",
                    "None"
                ]
            },
            "copy_asset": {
                "source": [],
                "destination": [],
                "excluded": [
                    "typing.Callable"
                ],
                "context": [
                    "None"
                ],
                "renderer": [
                    "None"
                ],
                "onerror": [
                    "None"
                ],
                "force": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "copy_asset_file": {
                "source": [],
                "destination": [],
                "context": [
                    "None"
                ],
                "renderer": [
                    "None"
                ],
                "force": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "sphinx.util.http_date": {
        "global": {
            "epoch_to_rfc1123": {
                "epoch": [],
                "return": [
                    "typing.Text"
                ]
            },
            "global": {},
            "rfc1123_to_epoch": {
                "rfc1123": [],
                "return": []
            }
        }
    },
    "sphinx.util.i18n": {
        "DateFormatter": {
            "__call__": {
                "date": [],
                "format": [],
                "locale": [],
                "return": [
                    "None"
                ]
            }
        },
        "DatetimeFormatter": {
            "__call__": {
                "datetime": [],
                "format": [],
                "tzinfo": [],
                "locale": [],
                "return": [
                    "None"
                ]
            }
        },
        "TimeFormatter": {
            "__call__": {
                "time": [],
                "format": [],
                "tzinfo": [],
                "locale": [],
                "return": [
                    "None"
                ]
            }
        },
        "CatalogRepository": {
            "__init__": {
                "basedir": [],
                "locale_dirs": [],
                "language": [],
                "encoding": [],
                "return": [
                    "None"
                ]
            },
            "catalogs": {
                "return": [
                    "typing.Generator[CatalogInfo]"
                ]
            },
            "locale_dirs": {
                "return": [
                    "None",
                    "typing.Generator"
                ]
            },
            "pofiles": {
                "return": [
                    "typing.Generator[tuple]"
                ]
            }
        },
        "global": {
            "babel_format_date": {
                "date": [],
                "format": [],
                "locale": [],
                "formatter": [],
                "return": []
            },
            "docname_to_domain": {
                "docname": [],
                "compaction": [],
                "return": [
                    "str"
                ]
            },
            "format_date": {
                "format": [],
                "date": [
                    "None"
                ],
                "language": [],
                "local_time": [
                    "bool"
                ],
                "return": [
                    "str"
                ]
            },
            "get_image_filename_for_language": {
                "filename": [],
                "env": [],
                "return": []
            },
            "global": {},
            "search_image_for_language": {
                "filename": [],
                "env": [],
                "return": []
            }
        },
        "CatalogInfo": {
            "is_outdated": {
                "return": [
                    "bool"
                ]
            },
            "mo_file": {
                "return": []
            },
            "mo_path": {
                "return": []
            },
            "po_file": {
                "return": []
            },
            "po_path": {
                "return": []
            },
            "write_mo": {
                "locale": [],
                "use_fuzzy": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.util.images": {
        "global": {
            "_image_type_from_file": {
                "filename": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_image_extension": {
                "mimetype": [],
                "return": []
            },
            "get_image_size": {
                "filename": [],
                "return": [
                    "tuple[int]",
                    "None"
                ]
            },
            "global": {},
            "guess_mimetype": {
                "filename": [],
                "default": [],
                "return": [
                    "None"
                ]
            },
            "parse_data_uri": {
                "uri": [],
                "return": [
                    "None",
                    "DataURI"
                ]
            }
        }
    },
    "sphinx.util.index_entries": {
        "global": {
            "_split_into": {
                "n": [],
                "type": [],
                "value": [],
                "return": [
                    "list"
                ]
            },
            "global": {},
            "split_index_msg": {
                "entry_type": [],
                "value": [],
                "return": []
            }
        }
    },
    "sphinx.util.inspect": {
        "TypeAliasForwardRef": {
            "__call__": {
                "return": [
                    "None"
                ]
            },
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": []
            }
        },
        "_SupportsDelete": {
            "__delete__": {
                "__instance": [],
                "return": [
                    "None"
                ]
            }
        },
        "DefaultValue": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "value": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": []
            }
        },
        "_SupportsGet": {
            "__get__": {
                "__instance": [],
                "__owner": [],
                "return": [
                    "None"
                ]
            }
        },
        "TypeAliasModule": {
            "__getattr__": {
                "name": [],
                "return": [
                    "TypeAliasForwardRef",
                    "TypeAliasModule"
                ]
            },
            "__init__": {
                "modname": [],
                "mapping": [],
                "return": [
                    "None"
                ]
            }
        },
        "TypeAliasNamespace": {
            "__getitem__": {
                "key": [],
                "return": [
                    "TypeAliasForwardRef",
                    "TypeAliasModule"
                ]
            },
            "__init__": {
                "mapping": [],
                "return": [
                    "None"
                ]
            }
        },
        "_SupportsSet": {
            "__set__": {
                "__instance": [],
                "__value": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_define": {
                "kind": [],
                "arg": [],
                "code": [],
                "defexpr": [],
                "return": []
            },
            "_evaluate": {
                "annotation": [],
                "globalns": [],
                "localns": [],
                "return": []
            },
            "_evaluate_forwardref": {
                "ref": [],
                "globalns": [],
                "localns": [],
                "return": []
            },
            "_getdoc_internal": {
                "obj": [],
                "attrgetter": [],
                "return": [
                    "str",
                    "None"
                ]
            },
            "_is_wrapped_coroutine": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "_should_unwrap": {
                "subject": [],
                "return": [
                    "bool"
                ]
            },
            "evaluate_signature": {
                "sig": [],
                "globalns": [
                    "None"
                ],
                "localns": [
                    "None"
                ],
                "return": []
            },
            "getall": {
                "obj": [],
                "return": [
                    "None"
                ]
            },
            "getannotations": {
                "obj": [],
                "return": [
                    "typing.Mapping",
                    "dict"
                ]
            },
            "getdoc": {
                "obj": [],
                "attrgetter": [],
                "allow_inherited": [
                    "bool"
                ],
                "cls": [
                    "None"
                ],
                "name": [
                    "None"
                ],
                "return": []
            },
            "getglobals": {
                "obj": [],
                "return": [
                    "typing.Mapping",
                    "dict"
                ]
            },
            "getmro": {
                "obj": [],
                "return": [
                    "tuple"
                ]
            },
            "getorigbases": {
                "obj": [],
                "return": [
                    "None"
                ]
            },
            "getslots": {
                "obj": [],
                "return": [
                    "None",
                    "dict",
                    "dict[str, None]"
                ]
            },
            "global": {},
            "is_builtin_class_method": {
                "obj": [],
                "attr_name": [],
                "return": [
                    "bool"
                ]
            },
            "is_cython_function_or_method": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "is_singledispatch_function": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "is_singledispatch_method": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "isabstractmethod": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "isattributedescriptor": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "isboundmethod": {
                "method": [],
                "return": [
                    "bool"
                ]
            },
            "isbuiltin": {
                "obj": [],
                "return": []
            },
            "isclassmethod": {
                "obj": [],
                "cls": [
                    "None"
                ],
                "name": [
                    "None"
                ],
                "return": [
                    "bool"
                ]
            },
            "iscoroutinefunction": {
                "obj": [],
                "return": []
            },
            "isdescriptor": {
                "x": [],
                "return": [
                    "bool"
                ]
            },
            "isenumattribute": {
                "x": [],
                "return": [
                    "bool"
                ]
            },
            "isenumclass": {
                "x": [],
                "return": [
                    "bool"
                ]
            },
            "isfunction": {
                "obj": [],
                "return": []
            },
            "isgenericalias": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "ispartial": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "isproperty": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "isroutine": {
                "obj": [],
                "return": []
            },
            "isstaticmethod": {
                "obj": [],
                "cls": [
                    "None"
                ],
                "name": [
                    "None"
                ],
                "return": [
                    "bool"
                ]
            },
            "object_description": {
                "obj": [],
                "_seen": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "safe_getattr": {
                "obj": [],
                "name": [],
                "defargs": [],
                "return": []
            },
            "signature": {
                "subject": [],
                "bound_method": [
                    "bool"
                ],
                "type_aliases": [
                    "None"
                ],
                "return": []
            },
            "signature_from_ast": {
                "node": [],
                "code": [
                    "typing.Text"
                ],
                "return": []
            },
            "signature_from_str": {
                "signature": [],
                "return": []
            },
            "stringify_signature": {
                "sig": [],
                "show_annotation": [
                    "bool"
                ],
                "show_return_annotation": [
                    "bool"
                ],
                "unqualified_typehints": [
                    "bool"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "unpartial": {
                "obj": [],
                "return": []
            },
            "unwrap": {
                "obj": [],
                "return": []
            },
            "unwrap_all": {
                "obj": [],
                "stop": [
                    "None"
                ],
                "return": []
            }
        }
    },
    "sphinx.util.inventory": {
        "InventoryFileReader": {
            "__init__": {
                "stream": [],
                "return": [
                    "None"
                ]
            },
            "read_buffer": {
                "return": [
                    "None"
                ]
            },
            "read_compressed_chunks": {
                "return": [
                    "typing.Generator"
                ]
            },
            "read_compressed_lines": {
                "return": [
                    "typing.Generator"
                ]
            },
            "readline": {
                "return": []
            },
            "readlines": {
                "return": [
                    "typing.Generator"
                ]
            }
        },
        "InventoryFile": {
            "dump": {
                "cls": [],
                "filename": [],
                "env": [],
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "escape": {
                "string": [],
                "return": []
            },
            "load": {
                "cls": [],
                "stream": [],
                "uri": [],
                "joinfunc": [],
                "return": []
            },
            "load_v1": {
                "cls": [],
                "stream": [],
                "uri": [],
                "join": [],
                "return": [
                    "dict"
                ]
            },
            "load_v2": {
                "cls": [],
                "stream": [],
                "uri": [],
                "join": [],
                "return": [
                    "dict"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.util.math": {
        "global": {
            "get_node_equation_number": {
                "writer": [],
                "node": [],
                "return": []
            },
            "global": {},
            "is_equation": {
                "part": [],
                "return": []
            },
            "wrap_displaymath": {
                "text": [],
                "label": [],
                "numbering": [],
                "return": [
                    "typing.Text"
                ]
            }
        }
    },
    "sphinx.util.osutil": {
        "FileAvoidWrite": {
            "__enter__": {
                "return": [
                    "FileAvoidWrite"
                ]
            },
            "__exit__": {
                "exc_type": [],
                "exc_value": [],
                "traceback": [],
                "return": [
                    "bool"
                ]
            },
            "__getattr__": {
                "name": [],
                "return": []
            },
            "__init__": {
                "path": [],
                "return": [
                    "None"
                ]
            },
            "close": {
                "return": [
                    "None"
                ]
            },
            "write": {
                "data": [],
                "return": [
                    "None"
                ]
            }
        },
        "_chdir": {
            "__enter__": {
                "return": [
                    "None"
                ]
            },
            "__exit__": {
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_copy_times": {
                "source": [],
                "dest": [],
                "return": [
                    "None"
                ]
            },
            "_last_modified_time": {
                "return": [
                    "int"
                ]
            },
            "canon_path": {
                "return": []
            },
            "copyfile": {
                "source": [],
                "dest": [],
                "force": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "ensuredir": {
                "file": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "make_filename": {
                "string": [],
                "return": [
                    "typing.Text"
                ]
            },
            "make_filename_from_project": {
                "project": [],
                "return": []
            },
            "os_path": {
                "return": []
            },
            "path_stabilize": {
                "return": []
            },
            "relative_uri": {
                "base": [],
                "to": [],
                "return": [
                    "typing.Text"
                ]
            },
            "relpath": {
                "path": [],
                "start": [],
                "return": [
                    "str"
                ]
            },
            "rmtree": {
                "path": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.util.parallel": {
        "ParallelTasks": {
            "__init__": {
                "nproc": [],
                "return": [
                    "None"
                ]
            },
            "_join_one": {
                "return": [
                    "bool"
                ]
            },
            "_process": {
                "pipe": [],
                "func": [],
                "arg": [],
                "return": [
                    "None"
                ]
            },
            "add_task": {
                "task_func": [],
                "arg": [
                    "None"
                ],
                "result_func": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "join": {
                "return": [
                    "None"
                ]
            },
            "terminate": {
                "return": [
                    "None"
                ]
            }
        },
        "SerialTasks": {
            "__init__": {
                "nproc": [
                    "int"
                ],
                "return": [
                    "None"
                ]
            },
            "add_task": {
                "task_func": [],
                "arg": [
                    "None"
                ],
                "result_func": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "join": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "make_chunks": {
                "arguments": [],
                "nproc": [],
                "maxbatch": [
                    "int"
                ],
                "return": [
                    "list"
                ]
            }
        }
    },
    "sphinx.util.parsing": {
        "global": {
            "_fresh_title_style_context": {
                "state": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "_text_to_string_list": {
                "source": [],
                "tab_width": [],
                "return": [
                    "StringList"
                ]
            },
            "global": {},
            "nested_parse_to_nodes": {
                "state": [],
                "text": [],
                "source": [
                    "typing.Text"
                ],
                "offset": [
                    "int"
                ],
                "allow_section_headings": [
                    "bool"
                ],
                "keep_title_context": [
                    "bool"
                ],
                "return": []
            }
        }
    },
    "sphinx.util.png": {
        "global": {
            "global": {},
            "read_png_depth": {
                "filename": [],
                "return": [
                    "None"
                ]
            },
            "write_png_depth": {
                "filename": [],
                "depth": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.util.requests": {
        "global": {
            "_get_tls_cacert": {
                "url": [],
                "certs": [],
                "return": [
                    "bool"
                ]
            },
            "get": {
                "url": [],
                "kwargs": [],
                "return": []
            },
            "global": {},
            "head": {
                "url": [],
                "kwargs": [],
                "return": []
            }
        },
        "_Session": {
            "request": {
                "method": [],
                "url": [],
                "_user_agent": [
                    "typing.Text"
                ],
                "_tls_info": [
                    "tuple"
                ],
                "kwargs": [],
                "return": []
            }
        }
    },
    "sphinx.util.rst": {
        "global": {
            "append_epilog": {
                "content": [],
                "epilog": [],
                "return": [
                    "None"
                ]
            },
            "charwidth": {
                "char": [],
                "widechars": [],
                "return": [
                    "int"
                ]
            },
            "default_role": {
                "docname": [],
                "name": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "escape": {
                "text": [],
                "return": []
            },
            "global": {},
            "heading": {
                "env": [],
                "text": [],
                "level": [
                    "int"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "prepend_prolog": {
                "content": [],
                "prolog": [],
                "return": [
                    "None"
                ]
            },
            "textwidth": {
                "text": [],
                "widechars": [
                    "typing.Text"
                ],
                "return": [
                    "bool"
                ]
            }
        }
    },
    "sphinx.util.tags": {
        "Tags": {
            "__contains__": {
                "tag": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "tags": [
                    "tuple"
                ],
                "return": [
                    "None"
                ]
            },
            "__iter__": {
                "return": []
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            },
            "_eval_node": {
                "node": [],
                "return": [
                    "bool"
                ]
            },
            "add": {
                "tag": [],
                "return": [
                    "None"
                ]
            },
            "eval_condition": {
                "condition": [],
                "return": []
            },
            "has": {
                "tag": [],
                "return": [
                    "bool"
                ]
            },
            "remove": {
                "tag": [],
                "return": [
                    "None"
                ]
            },
            "tags": {
                "return": []
            }
        },
        "global": {
            "global": {}
        },
        "BooleanParser": {
            "parse_compare": {
                "return": []
            }
        }
    },
    "sphinx.util.template": {
        "BaseRenderer": {
            "__init__": {
                "loader": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "render": {
                "template_name": [],
                "context": [],
                "return": []
            },
            "render_string": {
                "source": [],
                "context": [],
                "return": []
            }
        },
        "FileRenderer": {
            "__init__": {
                "search_path": [],
                "return": [
                    "None"
                ]
            },
            "render_from_file": {
                "cls": [],
                "filename": [],
                "context": [],
                "return": []
            }
        },
        "LaTeXRenderer": {
            "__init__": {
                "template_path": [
                    "None"
                ],
                "latex_engine": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "ReSTRenderer": {
            "__init__": {
                "template_path": [
                    "None"
                ],
                "language": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "SphinxRenderer": {
            "__init__": {
                "template_path": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "render_from_file": {
                "cls": [],
                "filename": [],
                "context": [],
                "return": []
            }
        },
        "SphinxTemplateLoader": {
            "__init__": {
                "confdir": [],
                "templates_paths": [],
                "system_templates_paths": [],
                "return": [
                    "None"
                ]
            },
            "get_source": {
                "environment": [],
                "template": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.util.texescape": {
        "global": {
            "escape": {
                "s": [],
                "latex_engine": [
                    "None"
                ],
                "return": []
            },
            "escape_abbr": {
                "text": [],
                "return": []
            },
            "global": {},
            "hlescape": {
                "s": [],
                "latex_engine": [
                    "None"
                ],
                "return": []
            },
            "init": {
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.util.typing": {
        "RoleFunction": {
            "__call__": {
                "options": [
                    "None"
                ],
                "content": [
                    "tuple"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "_ReadableStream": {
            "__enter__": {
                "return": [
                    "None"
                ]
            },
            "__exit__": {
                "exc_type": [],
                "exc_val": [],
                "exc_tb": [],
                "return": [
                    "None"
                ]
            },
            "read": {
                "size": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "__getattr__": {
                "name": [],
                "return": []
            },
            "_format_literal_arg_restify": {
                "mode": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "_format_literal_arg_stringify": {
                "mode": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "_is_annotated_form": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "_is_unpack_form": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "get_type_hints": {
                "obj": [],
                "globalns": [
                    "None"
                ],
                "localns": [
                    "None"
                ],
                "include_extras": [
                    "bool"
                ],
                "return": [
                    "dict"
                ]
            },
            "global": {},
            "is_invalid_builtin_class": {
                "obj": [],
                "return": [
                    "bool"
                ]
            },
            "is_system_TypeVar": {
                "typ": [],
                "return": [
                    "bool"
                ]
            },
            "restify": {
                "cls": [],
                "mode": [
                    "typing.Text"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "stringify_annotation": {
                "mode": [
                    "typing.Text"
                ],
                "return": [
                    "typing.Text"
                ]
            }
        }
    },
    "sphinx.versioning": {
        "global": {
            "add_uids": {
                "doctree": [],
                "condition": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "get_ratio": {
                "old": [],
                "new": [],
                "return": [
                    "int",
                    "float"
                ]
            },
            "global": {},
            "levenshtein_distance": {
                "a": [],
                "b": [],
                "return": [
                    "int"
                ]
            },
            "merge_doctrees": {
                "old": [],
                "new": [],
                "condition": [],
                "return": []
            },
            "setup": {
                "app": [],
                "return": [
                    "dict[typing.Text, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "UIDTransform": {
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "sphinx.writers": {
        "global": {
            "global": {}
        }
    },
    "sphinx.writers.html": {
        "HTMLWriter": {
            "__init__": {
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "translate": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.writers.html5": {
        "HTML5Translator": {
            "__init__": {
                "document": [],
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "_depart_sig_parameter_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "_visit_sig_parameter_list": {
                "node": [],
                "parameter_group": [],
                "sig_open_paren": [],
                "sig_close_paren": [],
                "return": [
                    "None"
                ]
            },
            "add_fignumber": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "add_permalink_ref": {
                "node": [],
                "title": [],
                "return": [
                    "None"
                ]
            },
            "add_secnumber": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "append_fignumber": {
                "figtype": [],
                "figure_id": [],
                "return": [
                    "None"
                ]
            },
            "depart_abbreviation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_acks": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_admonition": {
                "node": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "depart_attention": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_block_quote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_caption": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_caution": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_centered": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_classifier": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_compact_paragraph": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_danger": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_definition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_addname": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_annotation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_content": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_optional": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_parameterlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_returns": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_signature": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_signature_line": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_type": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_type_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_type_parameter_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_download_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_error": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_field_list": {
                "node": [],
                "return": []
            },
            "depart_glossary": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_hint": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_hlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_hlistcol": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_image": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_important": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_literal": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_literal_emphasis": {
                "node": [],
                "return": []
            },
            "depart_literal_strong": {
                "node": [],
                "return": []
            },
            "depart_manpage": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_math": {
                "node": [],
                "math_env": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "depart_math_block": {
                "node": [],
                "math_env": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "depart_note": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_number_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_production": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_productionlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_rubric": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_seealso": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_start_of_file": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_table": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_term": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_tip": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_title": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_versionmodified": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_warning": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "get_secnumber": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_Text": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_abbreviation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_acks": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_admonition": {
                "node": [],
                "name": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "visit_attention": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_block_quote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_bullet_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_caption": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_caution": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_centered": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_classifier": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_comment": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_compact_paragraph": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_danger": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_definition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_addname": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_annotation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_content": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_optional": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_parameterlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_returns": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_signature": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_signature_line": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type_parameter_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_doctest_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_download_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_error": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_field": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_field_list": {
                "node": [],
                "return": []
            },
            "visit_figure": {
                "node": [],
                "return": []
            },
            "visit_footnote_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_glossary": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_hint": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_hlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_hlistcol": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_image": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_important": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_index": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_literal": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_literal_block": {
                "node": [],
                "return": []
            },
            "visit_literal_emphasis": {
                "node": [],
                "return": []
            },
            "visit_literal_strong": {
                "node": [],
                "return": []
            },
            "visit_manpage": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_math": {
                "node": [],
                "math_env": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "visit_math_block": {
                "node": [],
                "math_env": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "visit_note": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_number_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_production": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_productionlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_row": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_rubric": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_seealso": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_start_of_file": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_table": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_tabular_col_spec": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_term": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_tip": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_title": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_toctree": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_versionmodified": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_warning": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "multiply_length": {
                "length": [],
                "scale": [],
                "return": [
                    "typing.Text"
                ]
            }
        }
    },
    "sphinx.writers.manpage": {
        "ManualPageTranslator": {
            "__init__": {
                "document": [],
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "depart_abbreviation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_caption": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_centered": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_compact_paragraph": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_addname": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_annotation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_content": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_optional": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_parameterlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_returns": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_signature": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_signature_line": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_type": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_type_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_type_parameter_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_download_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_glossary": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_hlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_hlistcol": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_literal_emphasis": {
                "node": [],
                "return": []
            },
            "depart_literal_strong": {
                "node": [],
                "return": []
            },
            "depart_manpage": {
                "node": [],
                "return": []
            },
            "depart_math": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_math_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_production": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_rubric": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_seealso": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_start_of_file": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_title": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_versionmodified": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "header": {
                "return": [
                    "typing.Text"
                ]
            },
            "visit_abbreviation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_acks": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_caption": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_centered": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_comment": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_compact_paragraph": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_addname": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_annotation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_content": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_optional": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_parameterlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_returns": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_signature": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_signature_line": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type_parameter_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_download_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_footnote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_glossary": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_hlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_hlistcol": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_image": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_index": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_literal_emphasis": {
                "node": [],
                "return": []
            },
            "visit_literal_strong": {
                "node": [],
                "return": []
            },
            "visit_manpage": {
                "node": [],
                "return": []
            },
            "visit_math": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_math_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_meta": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_number_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_production": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_productionlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_raw": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_rubric": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_seealso": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_start_of_file": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_tabular_col_spec": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_term": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_title": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_toctree": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_versionmodified": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "ManualPageWriter": {
            "__init__": {
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "translate": {
                "return": [
                    "None"
                ]
            }
        },
        "NestedInlineTransform": {
            "__init__": {
                "document": [],
                "return": [
                    "None"
                ]
            },
            "apply": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "sphinx.writers.text": {
        "Cell": {
            "__bool__": {
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "text": [
                    "typing.Text"
                ],
                "rowspan": [
                    "int"
                ],
                "colspan": [
                    "int"
                ],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            },
            "wrap": {
                "width": [],
                "return": [
                    "None"
                ]
            }
        },
        "Table": {
            "__getitem__": {
                "pos": [],
                "return": []
            },
            "__init__": {
                "colwidth": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": [
                    "str"
                ]
            },
            "__setitem__": {
                "pos": [],
                "cell": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": [
                    "str"
                ]
            },
            "_ensure_has_column": {
                "col": [],
                "return": [
                    "None"
                ]
            },
            "_ensure_has_line": {
                "line": [],
                "return": [
                    "None"
                ]
            },
            "add_cell": {
                "cell": [],
                "return": [
                    "None"
                ]
            },
            "add_row": {
                "return": [
                    "None"
                ]
            },
            "cell_width": {
                "cell": [],
                "source": [],
                "return": [
                    "int"
                ]
            },
            "cells": {
                "return": [
                    "typing.Generator"
                ]
            },
            "physical_lines_for_line": {
                "line": [],
                "return": [
                    "int"
                ]
            },
            "rewrap": {
                "return": [
                    "None"
                ]
            },
            "set_separator": {
                "return": [
                    "None"
                ]
            },
            "writesep": {
                "char": [
                    "typing.Text"
                ],
                "lineno": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "TextTranslator": {
            "__init__": {
                "document": [],
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "_depart_admonition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "_depart_sig_parameter_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "_visit_admonition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "_visit_sig_parameter_list": {
                "node": [],
                "parameter_group": [],
                "sig_open_paren": [],
                "sig_close_paren": [],
                "return": [
                    "None"
                ]
            },
            "add_text": {
                "text": [],
                "return": [
                    "None"
                ]
            },
            "depart_Text": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_abbreviation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_admonition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_attribution": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_block_quote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_bullet_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_caption": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_centered": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_citation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_classifier": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_compact_paragraph": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_compound": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_container": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_definition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_definition_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_definition_list_item": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_addname": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_annotation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_content": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_optional": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_parameterlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_returns": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_signature": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_signature_line": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_type": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_desc_type_parameter_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_description": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_doctest_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_document": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_download_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_emphasis": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_entry": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_enumerated_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_field": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_field_body": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_field_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_field_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_figure": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_footnote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_generated": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_glossary": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_hlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_hlistcol": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_legend": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_line": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_line_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_list_item": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_literal": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_literal_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_literal_emphasis": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_literal_strong": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_manpage": {
                "node": [],
                "return": []
            },
            "depart_math": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_math_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_option": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_option_argument": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_option_group": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_option_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_option_list_item": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_option_string": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_paragraph": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_pending_xref": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_problematic": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_row": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_rubric": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_section": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_strong": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_subscript": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_subtitle": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_superscript": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_table": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_tbody": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_term": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_tgroup": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_thead": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_title": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_title_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_topic": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "depart_versionmodified": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "do_format": {
                "return": [
                    "None"
                ]
            },
            "end_state": {
                "wrap": [
                    "bool"
                ],
                "end": [
                    "tuple[typing.Text]"
                ],
                "first": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "get_section_number_string": {
                "node": [],
                "return": [
                    "typing.Text"
                ]
            },
            "new_state": {
                "indent": [
                    "int"
                ],
                "return": [
                    "None"
                ]
            },
            "visit_Text": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_abbreviation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_acks": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_admonition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_attribution": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_block_quote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_bullet_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_caption": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_centered": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_citation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_citation_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_classifier": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_colspec": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_comment": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_compact_paragraph": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_compound": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_container": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_definition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_definition_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_definition_list_item": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_addname": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_annotation": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_content": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_optional": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_parameterlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_returns": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_signature": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_signature_line": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type_parameter": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_desc_type_parameter_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_description": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_doctest_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_document": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_download_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_emphasis": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_entry": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_enumerated_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_field": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_field_body": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_field_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_field_name": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_figure": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_footnote": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_footnote_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_generated": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_glossary": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_hlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_hlistcol": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_image": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_index": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_inline": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_label": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_legend": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_line": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_line_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_list_item": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_literal": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_literal_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_literal_emphasis": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_literal_strong": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_manpage": {
                "node": [],
                "return": []
            },
            "visit_math": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_math_block": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_meta": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_number_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_option": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_option_argument": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_option_group": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_option_list": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_option_list_item": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_option_string": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_paragraph": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_pending_xref": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_problematic": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_productionlist": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_raw": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_row": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_rubric": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_section": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_strong": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_subscript": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_substitution_definition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_subtitle": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_superscript": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_system_message": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_table": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_tabular_col_spec": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_target": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_tbody": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_term": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_tgroup": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_thead": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_title": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_title_reference": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_toctree": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_topic": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_transition": {
                "node": [],
                "return": [
                    "None"
                ]
            },
            "visit_versionmodified": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "TextWriter": {
            "__init__": {
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "translate": {
                "return": [
                    "None"
                ]
            }
        },
        "TextWrapper": {
            "_break_word": {
                "word": [],
                "space_left": [],
                "return": [
                    "tuple",
                    "tuple[typing.Text]"
                ]
            },
            "_handle_long_word": {
                "reversed_chunks": [],
                "cur_line": [],
                "cur_len": [],
                "width": [],
                "return": [
                    "None"
                ]
            },
            "_split": {
                "text": [],
                "return": [
                    "list"
                ]
            },
            "_wrap_chunks": {
                "chunks": [],
                "return": [
                    "list"
                ]
            },
            "split": {
                "t": [],
                "return": []
            }
        },
        "global": {
            "global": {},
            "my_wrap": {
                "text": [],
                "width": [
                    "int"
                ],
                "kwargs": [],
                "return": []
            }
        }
    },
    "sphinx.writers.xml": {
        "PseudoXMLWriter": {
            "__init__": {
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "supports": {
                "format": [],
                "return": [
                    "bool"
                ]
            },
            "translate": {
                "return": [
                    "None"
                ]
            }
        },
        "XMLWriter": {
            "__init__": {
                "builder": [],
                "return": [
                    "None"
                ]
            },
            "translate": {
                "kwargs": [],
                "args": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    }
}