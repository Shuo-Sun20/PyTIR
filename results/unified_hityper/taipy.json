{
    "taipy": {
        "global": {
            "global": {}
        }
    },
    "taipy._entrypoint": {
        "global": {
            "_entrypoint": {
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy._run": {
        "global": {
            "__get_app": {
                "apps": [],
                "type_": [],
                "return": []
            },
            "_run": {
                "kwargs": [],
                "services": [],
                "return": [
                    "None"
                ]
            },
            "filter_isinstance": {
                "tl": [],
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "taipy.common": {
        "global": {
            "global": {}
        }
    },
    "taipy.common._cli": {
        "global": {
            "global": {}
        }
    },
    "taipy.common._cli._base_cli": {
        "global": {
            "global": {}
        }
    },
    "taipy.common._cli._base_cli._abstract_cli": {
        "_AbstractCLI": {
            "_parse_arguments": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "create_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "handle_command": {
                "cls": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common._cli._create_cli": {
        "_CreateCLI": {
            "create_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "generate_template_map": {
                "cls": [],
                "template_path": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "handle_command": {
                "cls": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common._cli._help_cli": {
        "_HelpCLI": {
            "create_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "handle_command": {
                "cls": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common._cli._run_cli": {
        "_RunCLI": {
            "create_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "handle_command": {
                "cls": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config": {
        "global": {
            "_config_doc": {
                "func": [],
                "return": []
            },
            "_inject_section": {
                "section_clazz": [],
                "attribute_name": [],
                "default": [],
                "configuration_methods": [],
                "add_to_unconflicted_sections": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "func_with_doc": {
                "section": [],
                "attr_name": [],
                "default": [],
                "configuration_methods": [],
                "add_to_unconflicted_sections": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.common.config._config_comparator": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config._init": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config._serializer": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config._serializer._json_serializer": {
        "_JsonSerializer": {
            "_deserialize": {
                "cls": [],
                "config_as_string": [],
                "return": []
            },
            "_read": {
                "cls": [],
                "filename": [],
                "return": []
            },
            "_serialize": {
                "cls": [],
                "configuration": [],
                "return": []
            },
            "_write": {
                "cls": [],
                "configuration": [],
                "filename": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config._serializer._toml_serializer": {
        "_TomlSerializer": {
            "_deserialize": {
                "cls": [],
                "config_as_string": [],
                "return": []
            },
            "_read": {
                "cls": [],
                "filename": [],
                "return": []
            },
            "_serialize": {
                "cls": [],
                "configuration": [],
                "return": []
            },
            "_write": {
                "cls": [],
                "configuration": [],
                "filename": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.checker": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.checker._checker": {
        "_Checker": {
            "_check": {
                "cls": [],
                "_applied_config": [],
                "return": [
                    "IssueCollector"
                ]
            },
            "add_checker": {
                "cls": [],
                "checker_class": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.checker._checkers": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.checker._checkers._auth_config_checker": {
        "_AuthConfigChecker": {
            "__check_ldap": {
                "auth_config": [],
                "return": [
                    "None"
                ]
            },
            "__check_taipy": {
                "auth_config": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "config": [],
                "collector": [],
                "return": [
                    "None"
                ]
            },
            "_check": {
                "return": []
            },
            "_check_predefined_protocol": {
                "auth_config": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.checker._checkers._config_checker": {
        "_ConfigChecker": {
            "__init__": {
                "config": [],
                "collector": [],
                "return": [
                    "None"
                ]
            },
            "_check": {
                "return": [
                    "None"
                ]
            },
            "_check_children": {
                "parent_config_class": [],
                "config_id": [],
                "config_key": [],
                "config_value": [],
                "child_config_class": [],
                "can_be_empty": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_check_existing_config_id": {
                "config": [],
                "return": [
                    "None"
                ]
            },
            "_check_if_entity_property_key_used_is_predefined": {
                "config": [],
                "return": [
                    "None"
                ]
            },
            "_error": {
                "field": [],
                "value": [],
                "message": [],
                "return": [
                    "None"
                ]
            },
            "_info": {
                "field": [],
                "value": [],
                "message": [],
                "return": [
                    "None"
                ]
            },
            "_warning": {
                "field": [],
                "value": [],
                "message": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.checker.issue": {
        "Issue": {
            "__str__": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.checker.issue_collector": {
        "IssueCollector": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "_add_error": {
                "field": [],
                "value": [],
                "message": [],
                "checker_name": [],
                "return": [
                    "None"
                ]
            },
            "_add_info": {
                "field": [],
                "value": [],
                "message": [],
                "checker_name": [],
                "return": [
                    "None"
                ]
            },
            "_add_warning": {
                "field": [],
                "value": [],
                "message": [],
                "checker_name": [],
                "return": [
                    "None"
                ]
            },
            "all": {
                "return": []
            },
            "errors": {
                "return": []
            },
            "infos": {
                "return": []
            },
            "warnings": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.common": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.common._classproperty": {
        "_Classproperty": {
            "__get__": {
                "obj": [],
                "owner": [],
                "return": []
            },
            "__init__": {
                "f": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.common._config_blocker": {
        "_ConfigBlocker": {
            "_block": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "_check": {
                "cls": [],
                "return": []
            },
            "_check_if_is_blocking": {
                "kwargs": [],
                "args": [],
                "return": []
            },
            "_unblock": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "inner": {
                "f": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.common._repr_enum": {
        "_ReprEnum": {
            "_from_repr": {
                "cls": [],
                "repr_": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.common._validate_id": {
        "global": {
            "_validate_id": {
                "name": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.common.config.common.frequency": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.common.scope": {
        "_OrderedEnum": {
            "__ge__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__gt__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__le__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__lt__": {
                "other": [],
                "return": [
                    "bool"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.common.typing": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.exceptions": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.exceptions.exceptions": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.global_app": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.global_app.global_app_config": {
        "GlobalAppConfig": {
            "__getattr__": {
                "item": [],
                "return": []
            },
            "__init__": {
                "properties": [],
                "return": [
                    "None"
                ]
            },
            "_clean": {
                "return": [
                    "None"
                ]
            },
            "_from_dict": {
                "cls": [],
                "config_as_dict": [],
                "return": [
                    "GlobalAppConfig"
                ]
            },
            "_to_dict": {
                "return": [
                    "dict"
                ]
            },
            "_update": {
                "config_as_dict": [],
                "return": [
                    "None"
                ]
            },
            "default_config": {
                "cls": [],
                "return": [
                    "GlobalAppConfig"
                ]
            },
            "properties": {
                "return": [
                    "dict"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.section": {
        "Section": {
            "__copy__": {
                "return": [
                    "None"
                ]
            },
            "__getattr__": {
                "item": [],
                "return": []
            },
            "__init__": {
                "id": [],
                "properties": [],
                "return": [
                    "None"
                ]
            },
            "_clean": {
                "return": [
                    "None"
                ]
            },
            "_from_dict": {
                "cls": [],
                "config_as_dict": [],
                "id": [],
                "config": [],
                "return": [
                    "None"
                ]
            },
            "_replace_templates": {
                "value": [],
                "return": []
            },
            "_to_dict": {
                "return": [
                    "None"
                ]
            },
            "_update": {
                "config_as_dict": [],
                "default_section": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "name": {
                "return": [
                    "None"
                ]
            },
            "properties": {
                "return": [
                    "dict"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.stubs.generate_pyi": {
        "global": {
            "__add_docstring": {
                "base_pyi": [],
                "lines": [],
                "end_line": [],
                "return": []
            },
            "_build_base_config_pyi": {
                "filename": [],
                "base_pyi": [],
                "return": []
            },
            "_build_entity_config_pyi": {
                "base_pyi": [],
                "filename": [],
                "entity_map": [],
                "return": []
            },
            "_build_header": {
                "filename": [],
                "return": []
            },
            "_generate_acessors": {
                "base_pyi": [],
                "property_map": [],
                "return": []
            },
            "_generate_entity_and_property_maps": {
                "filename": [],
                "return": [
                    "tuple[dict[, dict]]"
                ]
            },
            "_get_file_ast": {
                "filename": [],
                "return": []
            },
            "_get_file_lines": {
                "filename": [],
                "return": []
            },
            "_get_function_delimiters": {
                "initial_line": [],
                "lines": [],
                "return": [
                    "tuple[int]"
                ]
            },
            "global": {}
        }
    },
    "taipy.common.config.stubs.pyi_header": {
        "global": {
            "global": {}
        }
    },
    "taipy.common.config.unique_section": {
        "UniqueSection": {
            "__init__": {
                "properties": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.common.logger": {
        "global": {
            "global": {}
        }
    },
    "taipy.core": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._cli": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._cli._core_cli": {
        "_CoreCLI": {
            "__add_taipy_prefix": {
                "cls": [],
                "key": [],
                "return": [
                    "typing.Text"
                ]
            },
            "create_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "create_run_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "handle_command": {
                "cls": [],
                "return": [
                    "dict[, typing.Union[typing.Text,bool]]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._cli._core_cli_factory": {
        "_CoreCLIFactory": {
            "_build_cli": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._core": {
        "Core": {
            "__new__": {
                "cls": [],
                "return": [
                    "Orchestrator"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._entity": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._entity._dag": {
        "_DAG": {
            "__compute_edges": {
                "dag": [],
                "return": [
                    "list[_Edge]"
                ]
            },
            "__compute_grid_size": {
                "return": [
                    "tuple[int]"
                ]
            },
            "__compute_nodes": {
                "return": [
                    "dict[, _Node]"
                ]
            },
            "__compute_size": {
                "return": [
                    "tuple[int]"
                ]
            },
            "__init__": {
                "dag": [],
                "return": [
                    "None"
                ]
            },
            "edges": {
                "return": []
            },
            "length": {
                "return": []
            },
            "nodes": {
                "return": []
            },
            "width": {
                "return": []
            }
        },
        "_Edge": {
            "__init__": {
                "src": [],
                "dest": [],
                "return": [
                    "None"
                ]
            }
        },
        "_Node": {
            "__init__": {
                "entity": [],
                "x": [],
                "y": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._entity._entity": {
        "_Entity": {
            "__enter__": {
                "return": [
                    "_Entity"
                ]
            },
            "__exit__": {
                "exc_type": [],
                "exc_value": [],
                "exc_traceback": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._entity._entity_ids": {
        "_EntityIds": {
            "__add__": {
                "other": [],
                "return": [
                    "_EntityIds"
                ]
            },
            "__iadd__": {
                "other": [],
                "return": [
                    "_EntityIds"
                ]
            },
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._entity._migrate": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._entity._migrate._migrate_fs": {
        "global": {
            "__write_entities_to_fs": {
                "_entities": [],
                "root": [],
                "return": [
                    "None"
                ]
            },
            "_load_all_entities_from_fs": {
                "root": [],
                "return": [
                    "dict[typing.Text, dict[typing.Text, ]]"
                ]
            },
            "_migrate_fs_entities": {
                "path": [],
                "backup": [
                    "bool"
                ],
                "return": [
                    "bool"
                ]
            },
            "_remove_backup_file_entities": {
                "path": [],
                "return": [
                    "bool"
                ]
            },
            "_restore_migrate_file_entities": {
                "path": [],
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "taipy.core._entity._migrate._utils": {
        "global": {
            "__fetch_tasks_from_pipelines": {
                "pipelines": [],
                "data": [],
                "return": [
                    "list"
                ]
            },
            "__is_cacheable": {
                "task": [],
                "data": [],
                "return": [
                    "bool"
                ]
            },
            "__migrate_datanode": {
                "datanode": [],
                "return": []
            },
            "__migrate_datanode_config": {
                "datanode": [],
                "return": []
            },
            "__migrate_datanode_entity": {
                "datanode": [],
                "data": [],
                "return": []
            },
            "__migrate_entities": {
                "entity_type": [],
                "data": [],
                "return": []
            },
            "__migrate_global_config": {
                "config": [],
                "return": []
            },
            "__migrate_job": {
                "job": [],
                "return": []
            },
            "__migrate_scenario": {
                "scenario": [],
                "data": [],
                "return": []
            },
            "__migrate_subscriber": {
                "fct_module": [],
                "fct_name": [],
                "return": [
                    "tuple"
                ]
            },
            "__migrate_task": {
                "task": [],
                "data": [],
                "is_entity": [
                    "bool"
                ],
                "return": []
            },
            "__migrate_task_config": {
                "task": [],
                "config": [],
                "return": []
            },
            "__migrate_task_entity": {
                "task": [],
                "data": [],
                "return": []
            },
            "__migrate_version": {
                "version": [],
                "return": []
            },
            "__search_parent_config": {
                "entity_id": [],
                "config": [],
                "entity_type": [],
                "return": [
                    "list[typing.Text]"
                ]
            },
            "__search_parent_ids": {
                "entity_id": [],
                "data": [],
                "return": [
                    "list"
                ]
            },
            "__update_config_parent_ids": {
                "id": [],
                "entity": [],
                "entity_type": [],
                "config": [],
                "return": []
            },
            "__update_parent_ids": {
                "entity": [],
                "data": [],
                "return": []
            },
            "__update_scope": {
                "scope": [],
                "return": [
                    "typing.Text"
                ]
            },
            "_migrate": {
                "entities": [],
                "versions": [
                    "None"
                ],
                "return": [
                    "tuple[dict]"
                ]
            },
            "global": {}
        }
    },
    "taipy.core._entity._migrate_cli": {
        "_MigrateCLI": {
            "__handle_remove_backup": {
                "cls": [],
                "repository_type": [],
                "repository_args": [],
                "return": [
                    "None"
                ]
            },
            "__handle_restore_backup": {
                "cls": [],
                "repository_type": [],
                "repository_args": [],
                "return": [
                    "None"
                ]
            },
            "__migrate_entities": {
                "cls": [],
                "repository_type": [],
                "repository_args": [],
                "do_backup": [],
                "return": [
                    "None"
                ]
            },
            "create_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "handle_command": {
                "cls": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._entity._properties": {
        "_Properties": {
            "__delitem__": {
                "key": [],
                "return": [
                    "None"
                ]
            },
            "__getitem__": {
                "key": [],
                "return": []
            },
            "__init__": {
                "entity_owner": [],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "__setitem__": {
                "key": [],
                "value": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._entity._ready_to_run_property": {
        "_ReadyToRunProperty": {
            "__add": {
                "cls": [],
                "submittable": [],
                "datanode": [],
                "reason": [],
                "return": [
                    "None"
                ]
            },
            "__publish_submittable_property_event": {
                "submittable": [],
                "submittable_property": [],
                "return": [
                    "None"
                ]
            },
            "_add": {
                "cls": [],
                "dn": [],
                "reason": [],
                "return": [
                    "None"
                ]
            },
            "_remove": {
                "cls": [],
                "datanode": [],
                "reason": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._init": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._manager": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._manager._manager": {
        "_Manager": {
            "_delete": {
                "cls": [],
                "id": [],
                "return": [
                    "None"
                ]
            },
            "_delete_all": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "_delete_by_version": {
                "cls": [],
                "version_number": [],
                "return": [
                    "None"
                ]
            },
            "_delete_entities_of_multiple_types": {
                "cls": [],
                "_entity_ids": [],
                "return": [
                    "None"
                ]
            },
            "_delete_many": {
                "cls": [],
                "ids": [],
                "return": [
                    "None"
                ]
            },
            "_exists": {
                "cls": [],
                "entity_id": [],
                "return": [
                    "ReasonCollection"
                ]
            },
            "_get": {
                "cls": [],
                "entity": [],
                "default": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_get_all": {
                "cls": [],
                "version_number": [
                    "typing.Text"
                ],
                "return": []
            },
            "_get_all_by": {
                "cls": [],
                "filters": [
                    "None"
                ],
                "return": []
            },
            "_is_editable": {
                "cls": [],
                "entity": [],
                "return": [
                    "ReasonCollection"
                ]
            },
            "_is_readable": {
                "cls": [],
                "entity": [],
                "return": [
                    "ReasonCollection"
                ]
            },
            "_set": {
                "cls": [],
                "entity": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._manager._manager_factory": {
        "_ManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "_build_repository": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "_get_repository_with_repo_map": {
                "repository_map": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._orchestrator": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._orchestrator._abstract_orchestrator": {
        "_AbstractOrchestrator": {
            "blocked_jobs": {
                "return": [
                    "None"
                ]
            },
            "cancel_job": {
                "cls": [],
                "job": [],
                "return": [
                    "None"
                ]
            },
            "initialize": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "jobs_to_run": {
                "return": [
                    "None"
                ]
            },
            "submit": {
                "cls": [],
                "submittable": [],
                "callbacks": [],
                "force": [
                    "bool"
                ],
                "wait": [
                    "bool"
                ],
                "timeout": [
                    "None"
                ],
                "properties": [],
                "return": [
                    "None"
                ]
            },
            "submit_task": {
                "cls": [],
                "task": [],
                "callbacks": [
                    "None"
                ],
                "force": [
                    "bool"
                ],
                "wait": [
                    "bool"
                ],
                "timeout": [
                    "None"
                ],
                "properties": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._orchestrator._dispatcher": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._orchestrator._dispatcher._development_job_dispatcher": {
        "_DevelopmentJobDispatcher": {
            "__init__": {
                "orchestrator": [],
                "return": [
                    "None"
                ]
            },
            "_can_execute": {
                "return": [
                    "bool"
                ]
            },
            "_dispatch": {
                "job": [],
                "return": [
                    "None"
                ]
            },
            "is_running": {
                "return": [
                    "bool"
                ]
            },
            "run": {
                "return": [
                    "None"
                ]
            },
            "start": {
                "return": [
                    "None"
                ]
            },
            "stop": {
                "wait": [
                    "bool"
                ],
                "timeout": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._orchestrator._dispatcher._job_dispatcher": {
        "_JobDispatcher": {
            "__init__": {
                "orchestrator": [],
                "return": [
                    "None"
                ]
            },
            "_can_execute": {
                "return": [
                    "None"
                ]
            },
            "_dispatch": {
                "job": [],
                "return": [
                    "None"
                ]
            },
            "_execute_job": {
                "job": [],
                "return": [
                    "None"
                ]
            },
            "_execute_jobs_synchronously": {
                "return": [
                    "None"
                ]
            },
            "_needs_to_run": {
                "task": [],
                "return": [
                    "bool"
                ]
            },
            "_update_job_status": {
                "job": [],
                "exceptions": [],
                "return": [
                    "None"
                ]
            },
            "is_running": {
                "return": []
            },
            "run": {
                "return": [
                    "None"
                ]
            },
            "start": {
                "return": [
                    "None"
                ]
            },
            "stop": {
                "wait": [
                    "bool"
                ],
                "timeout": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._orchestrator._dispatcher._standalone_job_dispatcher": {
        "_StandaloneJobDispatcher": {
            "__init__": {
                "orchestrator": [],
                "subproc_initializer": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_can_execute": {
                "return": [
                    "bool"
                ]
            },
            "_dispatch": {
                "job": [],
                "return": [
                    "None"
                ]
            },
            "_update_job_status_from_future": {
                "job": [],
                "ft": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._orchestrator._orchestrator_factory": {
        "_OrchestratorFactory": {
            "__build_development_job_dispatcher": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "__build_enterprise_job_dispatcher": {
                "cls": [],
                "force_restart": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "__build_standalone_job_dispatcher": {
                "cls": [],
                "force_restart": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_build_dispatcher": {
                "cls": [],
                "force_restart": [
                    "bool"
                ],
                "return": []
            },
            "_build_orchestrator": {
                "cls": [],
                "return": []
            },
            "_remove_dispatcher": {
                "cls": [],
                "wait": [
                    "bool"
                ],
                "timeout": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._repository": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._repository._abstract_converter": {
        "_AbstractConverter": {
            "_entity_to_model": {
                "cls": [],
                "entity": [],
                "return": [
                    "None"
                ]
            },
            "_model_to_entity": {
                "cls": [],
                "model": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._repository._abstract_repository": {
        "_AbstractRepository": {
            "_delete": {
                "entity_id": [],
                "return": [
                    "None"
                ]
            },
            "_delete_all": {
                "return": [
                    "None"
                ]
            },
            "_delete_by": {
                "attribute": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_delete_many": {
                "ids": [],
                "return": [
                    "None"
                ]
            },
            "_exists": {
                "entity_id": [],
                "return": [
                    "None"
                ]
            },
            "_export": {
                "entity_id": [],
                "folder_path": [],
                "return": [
                    "None"
                ]
            },
            "_import": {
                "entity_file_path": [],
                "return": []
            },
            "_load": {
                "entity_id": [],
                "return": [
                    "None"
                ]
            },
            "_load_all": {
                "filters": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_save": {
                "entity": [],
                "return": [
                    "None"
                ]
            },
            "_search": {
                "attribute": [],
                "value": [],
                "filters": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._repository._base_taipy_model": {
        "_BaseModel": {
            "__iter__": {
                "return": [
                    "typing.Generator"
                ]
            },
            "_deserialize_attribute": {
                "value": [],
                "return": [
                    "str"
                ]
            },
            "_serialize_attribute": {
                "value": [],
                "return": []
            },
            "from_dict": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "to_dict": {
                "return": [
                    "dict[, str]"
                ]
            },
            "to_list": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._repository._decoder": {
        "_Decoder": {
            "__init__": {
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "_str_to_timedelta": {
                "timedelta_str": [],
                "return": []
            },
            "object_hook": {
                "source": [],
                "return": []
            }
        },
        "global": {
            "global": {},
            "loads": {
                "d": [],
                "return": []
            }
        }
    },
    "taipy.core._repository._encoder": {
        "_Encoder": {
            "_timedelta_to_str": {
                "obj": [],
                "return": [
                    "typing.Text"
                ]
            },
            "default": {
                "o": [],
                "return": [
                    "dict[typing.Text, typing.Text]"
                ]
            }
        },
        "global": {
            "dumps": {
                "d": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.core._version": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._cli": {
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._cli._bcolor": {
        "global": {
            "_is_color_supported": {
                "return": [
                    "bool"
                ]
            },
            "_vt_codes_enabled_in_windows_registry": {
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "taipy.core._version._cli._version_cli": {
        "_VersionCLI": {
            "__compare_version_config": {
                "cls": [],
                "version_1": [],
                "version_2": [],
                "return": [
                    "None"
                ]
            },
            "__list_versions": {
                "cls": [],
                "return": [
                    "typing.Text"
                ]
            },
            "__rename_version": {
                "cls": [],
                "old_version": [],
                "new_version": [],
                "return": [
                    "None"
                ]
            },
            "create_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "handle_command": {
                "cls": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._cli._version_cli_factory": {
        "_VersionCLIFactory": {
            "_build_cli": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._version": {
        "_Version": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "id": [],
                "config": [],
                "return": [
                    "None"
                ]
            },
            "__is_config_eq": {
                "other": [],
                "return": [
                    "bool"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._version_converter": {
        "_VersionConverter": {
            "_entity_to_model": {
                "cls": [],
                "version": [],
                "return": [
                    "_VersionModel"
                ]
            },
            "_model_to_entity": {
                "cls": [],
                "model": [],
                "return": [
                    "_Version"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._version_fs_repository": {
        "_VersionFSRepository": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "_delete_all": {
                "return": [
                    "None"
                ]
            },
            "_get_development_version": {
                "return": []
            },
            "_get_latest_version": {
                "return": []
            },
            "_set_development_version": {
                "version_number": [],
                "return": [
                    "None"
                ]
            },
            "_set_latest_version": {
                "version_number": [],
                "return": [
                    "None"
                ]
            },
            "_version_file_path": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._version_manager_factory": {
        "_VersionManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": []
            },
            "_build_repository": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._version_mixin": {
        "_VersionMixin": {
            "__fetch_version_number": {
                "cls": [],
                "version_number": [],
                "return": [
                    "list"
                ]
            },
            "_build_filters_with_version": {
                "cls": [],
                "version_number": [],
                "return": []
            },
            "_get_latest_version": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core._version._version_model": {
        "_VersionModel": {
            "from_dict": {
                "data": [],
                "return": [
                    "_VersionModel"
                ]
            },
            "to_list": {
                "return": [
                    "list"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.common": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.common._check_dependencies": {
        "global": {
            "_check_dependency_is_installed": {
                "module_name": [],
                "package_name": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        },
        "EnterpriseEditionUtils": {
            "_using_enterprise": {
                "cls": [],
                "return": [
                    "bool"
                ]
            }
        }
    },
    "taipy.core.common._check_instance": {
        "global": {
            "_is_cycle": {
                "entity": [],
                "return": [
                    "bool"
                ]
            },
            "_is_data_node": {
                "entity": [],
                "return": [
                    "bool"
                ]
            },
            "_is_job": {
                "entity": [],
                "return": [
                    "bool"
                ]
            },
            "_is_scenario": {
                "entity": [],
                "return": [
                    "bool"
                ]
            },
            "_is_sequence": {
                "entity": [],
                "return": [
                    "bool"
                ]
            },
            "_is_submission": {
                "entity": [],
                "return": [
                    "bool"
                ]
            },
            "_is_task": {
                "entity": [],
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "taipy.core.common._listattributes": {
        "_ListAttributes": {
            "__add__": {
                "value": [],
                "return": [
                    "_ListAttributes"
                ]
            },
            "__add_iterable": {
                "iterable": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "parent": [],
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "__set_self": {
                "return": [
                    "None"
                ]
            },
            "append": {
                "value": [],
                "return": [
                    "None"
                ]
            },
            "clear": {
                "return": [
                    "None"
                ]
            },
            "extend": {
                "value": [],
                "return": [
                    "None"
                ]
            },
            "remove": {
                "value": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.common._mongo_connector": {
        "global": {
            "_connect_mongodb": {
                "db_host": [],
                "db_port": [],
                "db_username": [],
                "db_password": [],
                "db_extra_args": [],
                "db_driver": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.core.common._repr_enum": {
        "_ReprEnum": {
            "_from_repr": {
                "cls": [],
                "repr_": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.common._warnings": {
        "global": {
            "_check_if_core_service_is_running": {
                "kwargs": [],
                "args": [],
                "return": []
            },
            "_warn_deprecated": {
                "deprecated": [],
                "suggest": [
                    "None"
                ],
                "stacklevel": [
                    "int"
                ],
                "return": [
                    "None"
                ]
            },
            "_warn_no_orchestrator_service": {
                "specific_message": [],
                "stacklevel": [
                    "int"
                ],
                "return": []
            },
            "global": {},
            "inner": {
                "f": [],
                "return": []
            }
        }
    },
    "taipy.core.common.mongo_default_document": {
        "MongoDefaultDocument": {
            "__init__": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.common.typing": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.common.warn_if_inputs_not_ready": {
        "global": {
            "_warn_if_inputs_not_ready": {
                "inputs": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.core.config": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.config.checkers": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.config.checkers._config_id_checker": {
        "_ConfigIdChecker": {
            "__init__": {
                "config": [],
                "collector": [],
                "return": [
                    "None"
                ]
            },
            "_check": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.config.checkers._scenario_config_checker": {
        "_ScenarioConfigChecker": {
            "__init__": {
                "config": [],
                "collector": [],
                "return": [
                    "None"
                ]
            },
            "_check": {
                "return": []
            },
            "_check_addition_data_node_configs": {
                "scenario_config_id": [],
                "scenario_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_additional_dns_not_overlapping_tasks_dns": {
                "scenario_config_id": [],
                "scenario_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_comparators": {
                "scenario_config_id": [],
                "scenario_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_frequency": {
                "scenario_config_id": [],
                "scenario_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_if_children_config_id_is_overlapping_with_properties": {
                "scenario_config_id": [],
                "scenario_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_task_configs": {
                "scenario_config_id": [],
                "scenario_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_tasks_in_sequences_exist_in_scenario_tasks": {
                "scenario_config_id": [],
                "scenario_config": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.config.checkers._task_config_checker": {
        "_TaskConfigChecker": {
            "__init__": {
                "config": [],
                "collector": [],
                "return": [
                    "None"
                ]
            },
            "_check": {
                "return": []
            },
            "_check_existing_function": {
                "task_config_id": [],
                "task_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_if_children_config_id_is_overlapping_with_properties": {
                "task_config_id": [],
                "task_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_if_config_id_is_overlapping_with_scenario_attributes": {
                "task_config_id": [],
                "task_config": [],
                "scenario_attributes": [],
                "return": [
                    "None"
                ]
            },
            "_check_inputs": {
                "task_config_id": [],
                "task_config": [],
                "return": [
                    "None"
                ]
            },
            "_check_outputs": {
                "task_config_id": [],
                "task_config": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.config.core_section": {
        "CoreSection": {
            "__copy__": {
                "return": [
                    "CoreSection"
                ]
            },
            "__init__": {
                "root_folder": [
                    "None"
                ],
                "storage_folder": [
                    "None"
                ],
                "taipy_storage_folder": [
                    "None"
                ],
                "repository_type": [
                    "None"
                ],
                "repository_properties": [
                    "None"
                ],
                "read_entity_retry": [
                    "None"
                ],
                "mode": [
                    "None"
                ],
                "version_number": [
                    "None"
                ],
                "force": [
                    "None"
                ],
                "core_version": [
                    "None"
                ],
                "properties": [],
                "return": [
                    "None"
                ]
            },
            "__reload_repositories": {
                "return": [
                    "None"
                ]
            },
            "_check_compatibility": {
                "cls": [],
                "core_version": [],
                "return": [
                    "None"
                ]
            },
            "_clean": {
                "return": [
                    "None"
                ]
            },
            "_configure": {
                "root_folder": [
                    "None"
                ],
                "storage_folder": [
                    "None"
                ],
                "taipy_storage_folder": [
                    "None"
                ],
                "repository_type": [
                    "None"
                ],
                "repository_properties": [
                    "None"
                ],
                "read_entity_retry": [
                    "None"
                ],
                "mode": [
                    "None"
                ],
                "version_number": [
                    "None"
                ],
                "force": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_from_dict": {
                "cls": [],
                "as_dict": [],
                "id": [
                    "None"
                ],
                "config": [
                    "None"
                ],
                "return": [
                    "CoreSection"
                ]
            },
            "_to_dict": {
                "return": [
                    "dict"
                ]
            },
            "_update": {
                "as_dict": [],
                "default_section": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "core_version": {
                "return": []
            },
            "default_config": {
                "cls": [],
                "return": [
                    "CoreSection"
                ]
            },
            "force": {
                "return": []
            },
            "mode": {
                "return": []
            },
            "read_entity_retry": {
                "return": []
            },
            "repository_properties": {
                "return": [
                    "dict"
                ]
            },
            "repository_type": {
                "return": []
            },
            "root_folder": {
                "return": []
            },
            "storage_folder": {
                "return": []
            },
            "taipy_storage_folder": {
                "return": []
            },
            "version_number": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.config.data_node_config": {
        "DataNodeConfig": {
            "__configure": {
                "id": [],
                "storage_type": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "__copy__": {
                "return": [
                    "DataNodeConfig"
                ]
            },
            "__getattr__": {
                "item": [],
                "return": []
            },
            "__init__": {
                "id": [],
                "storage_type": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": [
                    "None"
                ]
            },
            "_clean": {
                "return": [
                    "None"
                ]
            },
            "_configure": {
                "cls": [],
                "id": [],
                "storage_type": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_csv": {
                "cls": [],
                "id": [],
                "default_path": [
                    "None"
                ],
                "encoding": [
                    "None"
                ],
                "has_header": [
                    "None"
                ],
                "exposed_type": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_excel": {
                "cls": [],
                "id": [],
                "default_path": [
                    "None"
                ],
                "has_header": [
                    "None"
                ],
                "sheet_name": [
                    "None"
                ],
                "exposed_type": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_from": {
                "cls": [],
                "source_configuration": [],
                "id": [],
                "properties": [],
                "return": []
            },
            "_configure_generic": {
                "cls": [],
                "id": [],
                "read_fct": [
                    "None"
                ],
                "write_fct": [
                    "None"
                ],
                "read_fct_args": [
                    "None"
                ],
                "write_fct_args": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_in_memory": {
                "cls": [],
                "id": [],
                "default_data": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_json": {
                "cls": [],
                "id": [],
                "default_path": [
                    "None"
                ],
                "encoding": [
                    "None"
                ],
                "encoder": [
                    "None"
                ],
                "decoder": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_mongo_collection": {
                "cls": [],
                "id": [],
                "db_name": [],
                "collection_name": [],
                "custom_document": [
                    "None"
                ],
                "db_username": [
                    "None"
                ],
                "db_password": [
                    "None"
                ],
                "db_host": [
                    "None"
                ],
                "db_port": [
                    "None"
                ],
                "db_driver": [
                    "None"
                ],
                "db_extra_args": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_parquet": {
                "cls": [],
                "id": [],
                "default_path": [
                    "None"
                ],
                "engine": [
                    "None"
                ],
                "compression": [
                    "None"
                ],
                "read_kwargs": [
                    "None"
                ],
                "write_kwargs": [
                    "None"
                ],
                "exposed_type": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_pickle": {
                "cls": [],
                "id": [],
                "default_path": [
                    "None"
                ],
                "default_data": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_s3_object": {
                "cls": [],
                "id": [],
                "aws_access_key": [],
                "aws_secret_access_key": [],
                "aws_s3_bucket_name": [],
                "aws_s3_object_key": [],
                "aws_region": [
                    "None"
                ],
                "aws_s3_object_parameters": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_sql": {
                "cls": [],
                "id": [],
                "db_name": [],
                "db_engine": [],
                "read_query": [],
                "write_query_builder": [],
                "append_query_builder": [
                    "None"
                ],
                "db_username": [
                    "None"
                ],
                "db_password": [
                    "None"
                ],
                "db_host": [
                    "None"
                ],
                "db_port": [
                    "None"
                ],
                "db_driver": [
                    "None"
                ],
                "sqlite_folder_path": [
                    "None"
                ],
                "sqlite_file_extension": [
                    "None"
                ],
                "db_extra_args": [
                    "None"
                ],
                "exposed_type": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_configure_sql_table": {
                "cls": [],
                "id": [],
                "db_name": [],
                "db_engine": [],
                "table_name": [],
                "db_username": [
                    "None"
                ],
                "db_password": [
                    "None"
                ],
                "db_host": [
                    "None"
                ],
                "db_port": [
                    "None"
                ],
                "db_driver": [
                    "None"
                ],
                "sqlite_folder_path": [
                    "None"
                ],
                "sqlite_file_extension": [
                    "None"
                ],
                "db_extra_args": [
                    "None"
                ],
                "exposed_type": [
                    "None"
                ],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_from_dict": {
                "cls": [],
                "as_dict": [],
                "id": [],
                "config": [
                    "None"
                ],
                "return": [
                    "DataNodeConfig"
                ]
            },
            "_set_default_configuration": {
                "storage_type": [],
                "scope": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_to_dict": {
                "return": [
                    "dict"
                ]
            },
            "_update": {
                "as_dict": [],
                "default_section": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "default_config": {
                "cls": [],
                "return": [
                    "DataNodeConfig"
                ]
            },
            "scope": {
                "return": []
            },
            "storage_type": {
                "return": []
            },
            "validity_period": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.config.job_config": {
        "JobConfig": {
            "__copy__": {
                "return": [
                    "JobConfig"
                ]
            },
            "__getattr__": {
                "key": [],
                "return": []
            },
            "__init__": {
                "mode": [
                    "None"
                ],
                "properties": [],
                "return": [
                    "None"
                ]
            },
            "_clean": {
                "return": [
                    "None"
                ]
            },
            "_configure": {
                "mode": [
                    "None"
                ],
                "max_nb_of_workers": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "_from_dict": {
                "cls": [],
                "config_as_dict": [],
                "id": [
                    "None"
                ],
                "config": [
                    "None"
                ],
                "return": [
                    "JobConfig"
                ]
            },
            "_to_dict": {
                "return": [
                    "dict"
                ]
            },
            "_update": {
                "as_dict": [],
                "default_section": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_update_default_max_nb_of_workers_properties": {
                "return": [
                    "None"
                ]
            },
            "default_config": {
                "cls": [],
                "return": [
                    "JobConfig"
                ]
            },
            "is_development": {
                "return": [
                    "bool"
                ]
            },
            "is_standalone": {
                "return": [
                    "bool"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.cycle": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.cycle._cycle_converter": {
        "_CycleConverter": {
            "_entity_to_model": {
                "cls": [],
                "cycle": [],
                "return": [
                    "_CycleModel"
                ]
            },
            "_model_to_entity": {
                "cls": [],
                "model": [],
                "return": [
                    "Cycle"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.cycle._cycle_fs_repository": {
        "_CycleFSRepository": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.cycle._cycle_manager": {
        "_CycleManager": {
            "_create": {
                "cls": [],
                "frequency": [],
                "name": [
                    "None"
                ],
                "creation_date": [
                    "None"
                ],
                "properties": [],
                "return": [
                    "Cycle"
                ]
            },
            "_get_children_entity_ids": {
                "cls": [],
                "cycle": [],
                "return": [
                    "_EntityIds"
                ]
            },
            "_get_cycles_by_frequency_and_overlapping_date": {
                "cls": [],
                "frequency": [],
                "date": [],
                "cycles": [],
                "return": []
            },
            "_get_cycles_by_frequency_and_start_date": {
                "cls": [],
                "frequency": [],
                "start_date": [],
                "cycles": [],
                "return": []
            },
            "_get_cycles_cdt": {
                "cls": [],
                "cdt": [],
                "cycles": [],
                "return": [
                    "list"
                ]
            },
            "_get_end_date_of_cycle": {
                "frequency": [],
                "start_date": [],
                "return": []
            },
            "_get_or_create": {
                "cls": [],
                "frequency": [],
                "creation_date": [
                    "None"
                ],
                "name": [
                    "None"
                ],
                "return": []
            },
            "_get_start_date_of_cycle": {
                "frequency": [],
                "creation_date": [],
                "return": []
            },
            "_hard_delete": {
                "cls": [],
                "cycle_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.cycle._cycle_manager_factory": {
        "_CycleManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": []
            },
            "_build_repository": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.cycle._cycle_model": {
        "_CycleModel": {
            "from_dict": {
                "data": [],
                "return": [
                    "_CycleModel"
                ]
            },
            "to_list": {
                "return": [
                    "list[str]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.cycle.cycle": {
        "Cycle": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "frequency": [],
                "properties": [],
                "creation_date": [],
                "start_date": [],
                "end_date": [],
                "name": [
                    "None"
                ],
                "id": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_get_valid_filename": {
                "name": [],
                "return": []
            },
            "_new_id": {
                "name": [],
                "return": [
                    "CycleId"
                ]
            },
            "_new_name": {
                "name": [
                    "None"
                ],
                "return": [
                    "None",
                    "typing.Text"
                ]
            },
            "creation_date": {
                "return": []
            },
            "end_date": {
                "return": []
            },
            "frequency": {
                "return": []
            },
            "get_label": {
                "return": []
            },
            "get_simple_label": {
                "return": []
            },
            "name": {
                "return": []
            },
            "properties": {
                "return": []
            },
            "start_date": {
                "return": []
            }
        },
        "global": {
            "_make_event_for_cycle": {
                "attribute_name": [
                    "None"
                ],
                "attribute_value": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "Event"
                ]
            },
            "global": {}
        }
    },
    "taipy.core.cycle.cycle_id": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.data": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.data._data_fs_repository": {
        "_DataFSRepository": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data._data_manager_factory": {
        "_DataManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": []
            },
            "_build_repository": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data._data_model": {
        "_DataNodeModel": {
            "from_dict": {
                "data": [],
                "return": [
                    "_DataNodeModel"
                ]
            },
            "to_list": {
                "return": [
                    "list[str]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data._file_datanode_mixin": {
        "_FileDataNodeMixin": {
            "__init__": {
                "properties": [],
                "return": [
                    "None"
                ]
            },
            "_build_path": {
                "storage_type": [],
                "return": [
                    "str"
                ]
            },
            "_get_downloadable_path": {
                "return": [
                    "typing.Text"
                ]
            },
            "_migrate_path": {
                "storage_type": [],
                "old_path": [],
                "return": []
            },
            "_read_from_path": {
                "path": [
                    "None"
                ],
                "read_kwargs": [],
                "return": [
                    "None"
                ]
            },
            "_upload": {
                "path": [],
                "upload_checker": [
                    "None"
                ],
                "return": [
                    "ReasonCollection"
                ]
            },
            "_write_default_data": {
                "default_value": [],
                "return": [
                    "None"
                ]
            },
            "is_downloadable": {
                "return": [
                    "ReasonCollection"
                ]
            },
            "is_generated": {
                "return": []
            },
            "is_uploadable": {
                "return": [
                    "ReasonCollection"
                ]
            },
            "path": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data._filter": {
        "_FilterDataNode": {
            "__dataframe_merge": {
                "df_list": [],
                "how": [
                    "typing.Text"
                ],
                "return": []
            },
            "__filter_dataframe": {
                "df_data": [],
                "operators": [],
                "join_operator": [],
                "return": []
            },
            "__filter_dataframe_per_key_value": {
                "df_data": [],
                "key": [],
                "value": [],
                "operator": [],
                "return": []
            },
            "__filter_list": {
                "list_data": [],
                "operators": [],
                "join_operator": [],
                "return": [
                    "list",
                    "list[set]"
                ]
            },
            "__filter_list_per_key_value": {
                "list_data": [],
                "key": [],
                "value": [],
                "operator": [],
                "return": [
                    "list[dict]"
                ]
            },
            "__filter_numpy_array": {
                "data": [],
                "operators": [],
                "join_operator": [],
                "return": []
            },
            "__get_filter_condition_per_key_value": {
                "array_data": [],
                "key": [],
                "value": [],
                "operator": [],
                "return": [
                    "bool"
                ]
            },
            "__getitem_bool_indexer": {
                "data": [],
                "key": [],
                "return": [
                    "list"
                ]
            },
            "__getitem_dataframe": {
                "data": [],
                "key": [],
                "return": [
                    "list[dict[, None]]",
                    "None"
                ]
            },
            "__getitem_hashable": {
                "data": [],
                "key": [],
                "return": [
                    "list"
                ]
            },
            "__getitem_int": {
                "data": [],
                "key": [],
                "return": []
            },
            "__getitem_iterable": {
                "data": [],
                "keys": [],
                "return": [
                    "list[dict]"
                ]
            },
            "__getitem_slice": {
                "data": [],
                "key": [],
                "return": []
            },
            "__is_list_of_dict": {
                "data": [],
                "return": [
                    "bool"
                ]
            },
            "__is_multi_sheet_excel": {
                "data": [],
                "return": [
                    "bool"
                ]
            },
            "__is_pandas_object": {
                "data": [],
                "return": [
                    "bool"
                ]
            },
            "__list_intersect": {
                "list_data": [],
                "return": [
                    "list"
                ]
            },
            "_filter": {
                "data": [],
                "operators": [],
                "join_operator": [],
                "return": [
                    "dict"
                ]
            },
            "_filter_by_key": {
                "data": [],
                "key": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data._tabular_datanode_mixin": {
        "_TabularDataNodeMixin": {
            "__init__": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "_check_exposed_type": {
                "cls": [],
                "exposed_type": [],
                "return": [
                    "None"
                ]
            },
            "_convert_data_to_dataframe": {
                "exposed_type": [],
                "data": [],
                "return": []
            },
            "_default_decoder_with_header": {
                "document": [],
                "return": []
            },
            "_default_decoder_without_header": {
                "document": [],
                "return": []
            },
            "_default_encoder": {
                "document_object": [],
                "return": []
            },
            "_get_valid_exposed_type": {
                "cls": [],
                "properties": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data.csv": {
        "CSVDataNode": {
            "__init__": {
                "config_id": [],
                "scope": [],
                "id": [
                    "None"
                ],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "last_edit_date": [
                    "None"
                ],
                "edits": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "edit_in_progress": [
                    "bool"
                ],
                "editor_id": [
                    "None"
                ],
                "editor_expiration_date": [
                    "None"
                ],
                "properties": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_append": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_read": {
                "return": []
            },
            "_read_as": {
                "path": [],
                "return": [
                    "list"
                ]
            },
            "_read_as_numpy": {
                "path": [],
                "return": []
            },
            "_read_as_pandas_dataframe": {
                "path": [],
                "usecols": [
                    "None"
                ],
                "column_names": [
                    "None"
                ],
                "return": []
            },
            "_read_from_path": {
                "path": [
                    "None"
                ],
                "read_kwargs": [],
                "return": []
            },
            "_write": {
                "data": [],
                "columns": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "storage_type": {
                "cls": [],
                "return": []
            },
            "write_with_column_names": {
                "data": [],
                "columns": [
                    "None"
                ],
                "job_id": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data.data_node": {
        "DataNode": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__getitem__": {
                "item": [],
                "return": []
            },
            "__getstate__": {
                "return": []
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "config_id": [],
                "scope": [
                    "Scope"
                ],
                "id": [
                    "None"
                ],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "last_edit_date": [
                    "None"
                ],
                "edits": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "edit_in_progress": [
                    "bool"
                ],
                "editor_id": [
                    "None"
                ],
                "editor_expiration_date": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "__ne__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__setstate__": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "_append": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_class_map": {
                "return": [
                    "dict"
                ]
            },
            "_get_last_modified_datetime": {
                "cls": [],
                "path": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_get_user_properties": {
                "return": [
                    "dict"
                ]
            },
            "_new_id": {
                "config_id": [],
                "return": [
                    "DataNodeId"
                ]
            },
            "_read": {
                "return": [
                    "None"
                ]
            },
            "_write": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "all_subclasses": {
                "cls": [],
                "return": [
                    "set"
                ]
            },
            "append": {
                "data": [],
                "job_id": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "config_id": {
                "return": []
            },
            "edit_in_progress": {
                "return": []
            },
            "editor_expiration_date": {
                "return": []
            },
            "editor_id": {
                "return": []
            },
            "edits": {
                "return": []
            },
            "expiration_date": {
                "return": []
            },
            "filter": {
                "operators": [],
                "join_operator": [],
                "return": []
            },
            "get_label": {
                "return": []
            },
            "get_last_edit": {
                "return": [
                    "None"
                ]
            },
            "get_parents": {
                "return": []
            },
            "get_simple_label": {
                "return": []
            },
            "is_ready_for_reading": {
                "return": [
                    "bool"
                ]
            },
            "is_up_to_date": {
                "return": [
                    "bool"
                ]
            },
            "is_valid": {
                "return": [
                    "bool"
                ]
            },
            "job_ids": {
                "return": [
                    "list"
                ]
            },
            "last_edit_date": {
                "return": []
            },
            "lock_edit": {
                "editor_id": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "name": {
                "return": []
            },
            "owner_id": {
                "return": []
            },
            "parent_ids": {
                "return": []
            },
            "properties": {
                "return": []
            },
            "read": {
                "return": [
                    "None"
                ]
            },
            "read_or_raise": {
                "return": []
            },
            "scope": {
                "return": []
            },
            "storage_type": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "track_edit": {
                "options": [],
                "return": [
                    "None"
                ]
            },
            "unlock_edit": {
                "editor_id": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "validity_period": {
                "return": [
                    "None"
                ]
            },
            "version": {
                "return": []
            },
            "write": {
                "data": [],
                "job_id": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_make_event_for_datanode": {
                "attribute_name": [
                    "None"
                ],
                "attribute_value": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "Event"
                ]
            },
            "_recompute_is_ready_for_reading": {
                "dn": [],
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "_update_ready_for_reading": {
                "fct": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.core.data.data_node_id": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.data.in_memory": {
        "InMemoryDataNode": {
            "__init__": {
                "config_id": [],
                "scope": [],
                "id": [
                    "None"
                ],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "last_edit_date": [
                    "None"
                ],
                "edits": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "edit_in_progress": [
                    "bool"
                ],
                "editor_id": [
                    "None"
                ],
                "editor_expiration_date": [
                    "None"
                ],
                "properties": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_read": {
                "return": []
            },
            "_write": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "storage_type": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data.operator": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.data.parquet": {
        "ParquetDataNode": {
            "__init__": {
                "config_id": [],
                "scope": [],
                "id": [
                    "None"
                ],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "last_edit_date": [
                    "None"
                ],
                "edits": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "edit_in_progress": [
                    "bool"
                ],
                "editor_id": [
                    "None"
                ],
                "editor_expiration_date": [
                    "None"
                ],
                "properties": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_append": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_do_read_from_path": {
                "path": [],
                "exposed_type": [],
                "kwargs": [],
                "return": []
            },
            "_read": {
                "return": []
            },
            "_read_as": {
                "path": [],
                "read_kwargs": [],
                "return": [
                    "list"
                ]
            },
            "_read_as_numpy": {
                "path": [],
                "read_kwargs": [],
                "return": []
            },
            "_read_as_pandas_dataframe": {
                "path": [],
                "read_kwargs": [],
                "return": []
            },
            "_read_from_path": {
                "path": [
                    "None"
                ],
                "read_kwargs": [],
                "return": [
                    "None"
                ]
            },
            "_write": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "_write_with_kwargs": {
                "data": [],
                "job_id": [
                    "None"
                ],
                "write_kwargs": [],
                "return": [
                    "None"
                ]
            },
            "read_with_kwargs": {
                "read_kwargs": [],
                "return": []
            },
            "storage_type": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data.pickle": {
        "PickleDataNode": {
            "__init__": {
                "config_id": [],
                "scope": [],
                "id": [
                    "None"
                ],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "last_edit_date": [
                    "None"
                ],
                "edits": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "edit_in_progress": [
                    "bool"
                ],
                "editor_id": [
                    "None"
                ],
                "editor_expiration_date": [
                    "None"
                ],
                "properties": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_read": {
                "return": []
            },
            "_read_from_path": {
                "path": [
                    "None"
                ],
                "read_kwargs": [],
                "return": []
            },
            "_write": {
                "data": [],
                "return": [
                    "None"
                ]
            },
            "storage_type": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data.sql": {
        "SQLDataNode": {
            "__execute_queries": {
                "queries": [],
                "connection": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "config_id": [],
                "scope": [],
                "id": [
                    "None"
                ],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "last_edit_date": [
                    "None"
                ],
                "edits": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "edit_in_progress": [
                    "bool"
                ],
                "editor_id": [
                    "None"
                ],
                "editor_expiration_date": [
                    "None"
                ],
                "properties": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_do_append": {
                "data": [],
                "engine": [],
                "connection": [],
                "return": [
                    "None"
                ]
            },
            "_do_write": {
                "data": [],
                "engine": [],
                "connection": [],
                "return": [
                    "None"
                ]
            },
            "_get_base_read_query": {
                "return": []
            },
            "storage_type": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.data.sql_table": {
        "SQLTableDataNode": {
            "__delete_all_rows": {
                "cls": [],
                "table": [],
                "connection": [],
                "delete_table": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "config_id": [],
                "scope": [],
                "id": [
                    "None"
                ],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "last_edit_date": [
                    "None"
                ],
                "edits": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "validity_period": [
                    "None"
                ],
                "edit_in_progress": [
                    "bool"
                ],
                "editor_id": [
                    "None"
                ],
                "editor_expiration_date": [
                    "None"
                ],
                "properties": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__insert_data": {
                "data": [],
                "engine": [],
                "connection": [],
                "delete_table": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_create_table": {
                "engine": [],
                "return": [
                    "Table"
                ]
            },
            "_do_append": {
                "data": [],
                "engine": [],
                "connection": [],
                "return": [
                    "None"
                ]
            },
            "_do_write": {
                "data": [],
                "engine": [],
                "connection": [],
                "return": [
                    "None"
                ]
            },
            "_get_base_read_query": {
                "return": [
                    "typing.Text"
                ]
            },
            "_insert_dataframe": {
                "cls": [],
                "df": [],
                "table": [],
                "connection": [],
                "delete_table": [],
                "return": [
                    "None"
                ]
            },
            "_insert_dicts": {
                "cls": [],
                "data": [],
                "table": [],
                "connection": [],
                "delete_table": [],
                "return": [
                    "None"
                ]
            },
            "storage_type": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.exceptions": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.exceptions.exceptions": {
        "AttributeKeyAlreadyExisted": {
            "__init__": {
                "key": [],
                "return": [
                    "None"
                ]
            }
        },
        "ConfigCoreVersionMismatched": {
            "__init__": {
                "config_core_version": [],
                "core_version": [],
                "return": [
                    "None"
                ]
            }
        },
        "DataNodeConfigIsNotGlobal": {
            "__init__": {
                "data_node_config_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "DataNodeIsBeingEdited": {
            "__init__": {
                "data_node_id": [],
                "editor_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "DependencyNotInstalled": {
            "__init__": {
                "package_name": [],
                "return": [
                    "None"
                ]
            }
        },
        "InvalidScenario": {
            "__init__": {
                "scenario_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "InvalidSequence": {
            "__init__": {
                "sequence_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "InvalidSequenceId": {
            "__init__": {
                "sequence_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "JobNotDeletedException": {
            "__init__": {
                "job_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "ModelNotFound": {
            "__init__": {
                "model_name": [],
                "model_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingCycle": {
            "__init__": {
                "cycle_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingDataNode": {
            "__init__": {
                "data_node_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingDataNodeConfig": {
            "__init__": {
                "data_node_config_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingExcelSheet": {
            "__init__": {
                "sheet_name": [],
                "excel_file_name": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingJob": {
            "__init__": {
                "job_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingScenario": {
            "__init__": {
                "scenario_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingScenarioConfig": {
            "__init__": {
                "scenario_config_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingSequence": {
            "__init__": {
                "sequence_id": [],
                "scenario_id": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingSequenceConfig": {
            "__init__": {
                "sequence_config_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingTask": {
            "__init__": {
                "task_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingTaskConfig": {
            "__init__": {
                "id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NonExistingVersion": {
            "__init__": {
                "version_number": [],
                "return": [
                    "None"
                ]
            }
        },
        "SequenceAlreadyExists": {
            "__init__": {
                "sequence_name": [],
                "scenario_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "SequenceBelongsToNonExistingScenario": {
            "__init__": {
                "sequence_id": [],
                "scenario_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "SequenceTaskConfigDoesNotExistInSameScenarioConfig": {
            "__init__": {
                "task_config_ids": [],
                "sequence_name": [],
                "scenario_config_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "SequenceTaskDoesNotExistInScenario": {
            "__init__": {
                "task_ids": [],
                "sequence_name": [],
                "scenario_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "SubmissionNotDeletedException": {
            "__init__": {
                "submission_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "VersionAlreadyExistsAsDevelopment": {
            "__init__": {
                "version_number": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.job": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.job._job_converter": {
        "_JobConverter": {
            "__serialize_subscribers": {
                "subscribers": [],
                "return": []
            },
            "_entity_to_model": {
                "cls": [],
                "job": [],
                "return": [
                    "_JobModel"
                ]
            },
            "_model_to_entity": {
                "cls": [],
                "model": [],
                "return": [
                    "Job"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.job._job_fs_repository": {
        "_JobFSRepository": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.job._job_manager": {
        "_JobManager": {
            "_cancel": {
                "cls": [],
                "job": [],
                "return": [
                    "None"
                ]
            },
            "_create": {
                "cls": [],
                "task": [],
                "callbacks": [],
                "submit_id": [],
                "submit_entity_id": [],
                "force": [
                    "bool"
                ],
                "return": [
                    "Job"
                ]
            },
            "_delete": {
                "cls": [],
                "job": [],
                "force": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_get_all": {
                "cls": [],
                "version_number": [
                    "None"
                ],
                "return": []
            },
            "_get_latest": {
                "cls": [],
                "task": [],
                "return": [
                    "None"
                ]
            },
            "_is_deletable": {
                "cls": [],
                "job": [],
                "return": [
                    "ReasonCollection"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.job._job_manager_factory": {
        "_JobManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": []
            },
            "_build_repository": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.job._job_model": {
        "_JobModel": {
            "from_dict": {
                "data": [],
                "return": [
                    "_JobModel"
                ]
            },
            "to_list": {
                "return": [
                    "list[str]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.job.job": {
        "Job": {
            "__contains__": {
                "task": [],
                "return": [
                    "bool"
                ]
            },
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__ge__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__gt__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "id": [],
                "task": [],
                "submit_id": [],
                "submit_entity_id": [],
                "force": [
                    "bool"
                ],
                "version": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__le__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__lt__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "_is_finished": {
                "return": [
                    "bool"
                ]
            },
            "_on_status_change": {
                "functions": [],
                "return": [
                    "None"
                ]
            },
            "_serialize_subscribers": {
                "subscribers": [],
                "return": []
            },
            "_unlock_edit_on_outputs": {
                "return": [
                    "None"
                ]
            },
            "abandoned": {
                "return": [
                    "None"
                ]
            },
            "blocked": {
                "return": [
                    "None"
                ]
            },
            "blocked_duration": {
                "return": [
                    "None"
                ]
            },
            "canceled": {
                "return": [
                    "None"
                ]
            },
            "completed": {
                "return": [
                    "None"
                ]
            },
            "creation_date": {
                "return": []
            },
            "execution_duration": {
                "return": [
                    "None"
                ]
            },
            "failed": {
                "return": [
                    "None"
                ]
            },
            "finished_at": {
                "return": [
                    "None"
                ]
            },
            "force": {
                "return": []
            },
            "get_event_context": {
                "return": [
                    "dict[typing.Text, ]"
                ]
            },
            "get_label": {
                "return": []
            },
            "get_simple_label": {
                "return": []
            },
            "is_abandoned": {
                "return": [
                    "bool"
                ]
            },
            "is_blocked": {
                "return": [
                    "bool"
                ]
            },
            "is_canceled": {
                "return": [
                    "bool"
                ]
            },
            "is_completed": {
                "return": [
                    "bool"
                ]
            },
            "is_deletable": {
                "return": []
            },
            "is_failed": {
                "return": [
                    "bool"
                ]
            },
            "is_finished": {
                "return": []
            },
            "is_pending": {
                "return": [
                    "bool"
                ]
            },
            "is_running": {
                "return": [
                    "bool"
                ]
            },
            "is_skipped": {
                "return": [
                    "bool"
                ]
            },
            "is_submitted": {
                "return": [
                    "bool"
                ]
            },
            "owner_id": {
                "return": []
            },
            "pending": {
                "return": [
                    "None"
                ]
            },
            "pending_duration": {
                "return": [
                    "None"
                ]
            },
            "run_at": {
                "return": []
            },
            "running": {
                "return": [
                    "None"
                ]
            },
            "skipped": {
                "return": [
                    "None"
                ]
            },
            "stacktrace": {
                "return": []
            },
            "status": {
                "return": []
            },
            "submit_entity": {
                "return": []
            },
            "submit_entity_id": {
                "return": []
            },
            "submit_id": {
                "return": []
            },
            "submitted_at": {
                "return": []
            },
            "task": {
                "return": []
            },
            "version": {
                "return": []
            }
        },
        "global": {
            "__run_callbacks": {
                "job": [],
                "return": [
                    "None"
                ]
            },
            "_make_event_for_job": {
                "attribute_name": [
                    "None"
                ],
                "attribute_value": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "Event"
                ]
            },
            "_run_callbacks": {
                "fn": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.core.job.job_id": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.job.status": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.notification": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.notification._core_event_consumer": {
        "_CoreEventConsumerBase": {
            "__init__": {
                "registration_id": [],
                "queue": [],
                "return": [
                    "None"
                ]
            },
            "process_event": {
                "event": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "return": [
                    "None"
                ]
            },
            "start": {
                "return": [
                    "None"
                ]
            },
            "stop": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.notification._registration": {
        "_Registration": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "__ne__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__repr__": {
                "return": []
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            },
            "_new_id": {
                "return": [
                    "RegistrationId"
                ]
            },
            "add_topic": {
                "entity_type": [
                    "None"
                ],
                "entity_id": [
                    "None"
                ],
                "operation": [
                    "None"
                ],
                "attribute_name": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "from_topic": {
                "entity_type": [
                    "None"
                ],
                "entity_id": [
                    "None"
                ],
                "operation": [
                    "None"
                ],
                "attribute_name": [
                    "None"
                ],
                "return": [
                    "_Registration"
                ]
            },
            "remove_topic": {
                "entity_type": [
                    "None"
                ],
                "entity_id": [
                    "None"
                ],
                "operation": [
                    "None"
                ],
                "attribute_name": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.notification._topic": {
        "_Topic": {
            "__eq__": {
                "__value": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "entity_type": [
                    "None"
                ],
                "entity_id": [
                    "None"
                ],
                "operation": [
                    "None"
                ],
                "attribute_name": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__ne__": {
                "__value": [],
                "return": [
                    "bool"
                ]
            },
            "__preprocess_operation": {
                "cls": [],
                "operation": [
                    "None"
                ],
                "entity_type": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.notification.core_event_consumer": {
        "CoreEventConsumerBase": {
            "__init__": {
                "registration_id": [],
                "queue": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.notification.event": {
        "Event": {
            "__post_init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_make_event": {
                "attribute_name": [
                    "None"
                ],
                "attribute_value": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.core.notification.registration_id": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.reason": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.reason.reason": {
        "Reason": {
            "__eq__": {
                "value": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "reason": [],
                "return": [
                    "None"
                ]
            },
            "__repr__": {
                "return": []
            },
            "__str__": {
                "return": []
            }
        },
        "DataNodeEditInProgress": {
            "__init__": {
                "datanode_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "DataNodeIsNotWritten": {
            "__init__": {
                "datanode_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "EntityDoesNotExist": {
            "__init__": {
                "entity_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "EntityIsNotAScenario": {
            "__init__": {
                "entity_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "EntityIsNotSubmittableEntity": {
            "__init__": {
                "entity_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "InvalidUploadFile": {
            "__init__": {
                "file_name": [],
                "datanode_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "JobIsNotFinished": {
            "__init__": {
                "job_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NoFileToDownload": {
            "__init__": {
                "file_path": [],
                "datanode_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NotAFile": {
            "__init__": {
                "file_path": [],
                "datanode_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "NotGlobalScope": {
            "__init__": {
                "config_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "ScenarioDoesNotBelongToACycle": {
            "__init__": {
                "scenario_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "ScenarioIsThePrimaryScenario": {
            "__init__": {
                "scenario_id": [],
                "cycle": [],
                "return": [
                    "None"
                ]
            }
        },
        "SubmissionIsNotFinished": {
            "__init__": {
                "submission_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "SubmissionStatusIsUndefined": {
            "__init__": {
                "submission_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "UploadFileCanNotBeRead": {
            "__init__": {
                "file_name": [],
                "datanode_id": [],
                "return": [
                    "None"
                ]
            }
        },
        "WrongConfigType": {
            "__init__": {
                "config_id": [],
                "config_type": [],
                "return": [
                    "None"
                ]
            }
        },
        "_DataNodeReasonMixin": {
            "__init__": {
                "datanode_id": [],
                "return": [
                    "None"
                ]
            },
            "datanode": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.reason.reason_collection": {
        "ReasonCollection": {
            "__bool__": {
                "return": [
                    "bool"
                ]
            },
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "_add_reason": {
                "entity_id": [],
                "reason": [],
                "return": [
                    "ReasonCollection"
                ]
            },
            "_entity_id_exists_in_reason": {
                "entity_id": [],
                "return": [
                    "bool"
                ]
            },
            "_remove_reason": {
                "entity_id": [],
                "reason": [],
                "return": [
                    "ReasonCollection"
                ]
            },
            "reasons": {
                "return": [
                    "str",
                    "typing.Text"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.scenario": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.scenario._scenario_fs_repository": {
        "_ScenarioFSRepository": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.scenario._scenario_manager_factory": {
        "_ScenarioManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": []
            },
            "_build_repository": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.scenario._scenario_model": {
        "_ScenarioModel": {
            "from_dict": {
                "data": [],
                "return": [
                    "_ScenarioModel"
                ]
            },
            "to_list": {
                "return": [
                    "list"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.scenario.scenario_id": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.sequence": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.sequence._sequence_converter": {
        "_SequenceConverter": {
            "__to_task_ids": {
                "tasks": [],
                "return": [
                    "list"
                ]
            },
            "_entity_to_model": {
                "cls": [],
                "sequence": [],
                "return": [
                    "dict[typing.Text, list]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.sequence._sequence_manager_factory": {
        "_SequenceManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.sequence.sequence": {
        "Sequence": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__getattr__": {
                "attribute_name": [],
                "return": []
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "properties": [],
                "tasks": [],
                "sequence_id": [],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "subscribers": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__setattr__": {
                "name": [],
                "value": [],
                "return": []
            },
            "_get_set_of_tasks": {
                "return": [
                    "set"
                ]
            },
            "_get_tasks": {
                "return": [
                    "dict"
                ]
            },
            "_is_consistent": {
                "return": [
                    "bool"
                ]
            },
            "_new_id": {
                "sequence_name": [],
                "scenario_id": [],
                "return": [
                    "SequenceId"
                ]
            },
            "data_nodes": {
                "return": [
                    "dict"
                ]
            },
            "get_label": {
                "return": []
            },
            "get_parents": {
                "return": []
            },
            "get_simple_label": {
                "return": []
            },
            "owner_id": {
                "return": []
            },
            "parent_ids": {
                "return": []
            },
            "properties": {
                "return": []
            },
            "submit": {
                "callbacks": [
                    "None"
                ],
                "force": [
                    "bool"
                ],
                "wait": [
                    "bool"
                ],
                "timeout": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "subscribe": {
                "callback": [],
                "params": [
                    "None"
                ],
                "return": []
            },
            "subscribers": {
                "return": []
            },
            "tasks": {
                "return": []
            },
            "unsubscribe": {
                "callback": [],
                "params": [
                    "None"
                ],
                "return": []
            },
            "version": {
                "return": []
            }
        },
        "global": {
            "_make_event_for_sequence": {
                "attribute_name": [
                    "None"
                ],
                "attribute_value": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "Event"
                ]
            },
            "global": {}
        }
    },
    "taipy.core.sequence.sequence_id": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.submission": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.submission._submission_converter": {
        "_SubmissionConverter": {
            "_entity_to_model": {
                "cls": [],
                "submission": [],
                "return": [
                    "_SubmissionModel"
                ]
            },
            "_model_to_entity": {
                "cls": [],
                "model": [],
                "return": [
                    "Submission"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.submission._submission_fs_repository": {
        "_SubmissionFSRepository": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.submission._submission_manager": {
        "_SubmissionManager": {
            "__set_submission_status": {
                "cls": [],
                "submission": [],
                "new_submission_status": [],
                "job": [],
                "return": [
                    "None"
                ]
            },
            "_create": {
                "cls": [],
                "entity_id": [],
                "entity_type": [],
                "entity_config": [],
                "properties": [],
                "return": [
                    "Submission"
                ]
            },
            "_delete": {
                "cls": [],
                "submission": [],
                "return": [
                    "None"
                ]
            },
            "_get_all": {
                "cls": [],
                "version_number": [
                    "None"
                ],
                "return": []
            },
            "_get_children_entity_ids": {
                "cls": [],
                "submission": [],
                "return": [
                    "_EntityIds"
                ]
            },
            "_get_latest": {
                "cls": [],
                "entity": [],
                "return": [
                    "None"
                ]
            },
            "_hard_delete": {
                "cls": [],
                "submission_id": [],
                "return": [
                    "None"
                ]
            },
            "_is_deletable": {
                "cls": [],
                "submission": [],
                "return": [
                    "ReasonCollection"
                ]
            },
            "_update_submission_status": {
                "cls": [],
                "submission": [],
                "job": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.submission._submission_manager_factory": {
        "_SubmissionManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": []
            },
            "_build_repository": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.submission._submission_model": {
        "_SubmissionModel": {
            "from_dict": {
                "data": [],
                "return": [
                    "_SubmissionModel"
                ]
            },
            "to_list": {
                "return": [
                    "list[str]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.submission.submission": {
        "Submission": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__ge__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__gt__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "entity_id": [],
                "entity_type": [],
                "entity_config_id": [
                    "None"
                ],
                "id": [
                    "None"
                ],
                "jobs": [
                    "None"
                ],
                "properties": [
                    "None"
                ],
                "creation_date": [
                    "None"
                ],
                "submission_status": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__le__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__lt__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__new_id": {
                "return": [
                    "SubmissionId"
                ]
            },
            "creation_date": {
                "return": []
            },
            "entity_config_id": {
                "return": []
            },
            "entity_id": {
                "return": []
            },
            "entity_type": {
                "return": []
            },
            "execution_duration": {
                "return": [
                    "None"
                ]
            },
            "finished_at": {
                "return": [
                    "None"
                ]
            },
            "get_label": {
                "return": []
            },
            "get_simple_label": {
                "return": []
            },
            "is_abandoned": {
                "return": []
            },
            "is_canceled": {
                "return": []
            },
            "is_completed": {
                "return": []
            },
            "is_deletable": {
                "return": []
            },
            "is_finished": {
                "return": [
                    "bool"
                ]
            },
            "jobs": {
                "return": [
                    "list"
                ]
            },
            "properties": {
                "return": []
            },
            "run_at": {
                "return": [
                    "None"
                ]
            },
            "submission_status": {
                "return": []
            },
            "submitted_at": {
                "return": [
                    "None"
                ]
            },
            "version": {
                "return": []
            }
        },
        "global": {
            "_make_event_for_submission": {
                "attribute_name": [
                    "None"
                ],
                "attribute_value": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "Event"
                ]
            },
            "global": {}
        }
    },
    "taipy.core.submission.submission_id": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.submission.submission_status": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.task": {
        "global": {
            "global": {}
        }
    },
    "taipy.core.task._task_fs_repository": {
        "_TaskFSRepository": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.task._task_manager_factory": {
        "_TaskManagerFactory": {
            "_build_manager": {
                "cls": [],
                "return": []
            },
            "_build_repository": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.task._task_model": {
        "_TaskModel": {
            "from_dict": {
                "data": [],
                "return": [
                    "_TaskModel"
                ]
            },
            "to_list": {
                "return": [
                    "list"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.core.task.task": {
        "Task": {
            "__eq__": {
                "other": [],
                "return": [
                    "bool"
                ]
            },
            "__getattr__": {
                "attribute_name": [],
                "return": []
            },
            "__getstate__": {
                "return": []
            },
            "__hash__": {
                "return": [
                    "int"
                ]
            },
            "__init__": {
                "config_id": [],
                "properties": [],
                "function": [],
                "input": [
                    "None"
                ],
                "output": [
                    "None"
                ],
                "id": [
                    "None"
                ],
                "owner_id": [
                    "None"
                ],
                "parent_ids": [
                    "None"
                ],
                "version": [
                    "None"
                ],
                "skippable": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "__setattr__": {
                "name": [],
                "value": [],
                "return": []
            },
            "__setstate__": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "config_id": {
                "return": []
            },
            "data_nodes": {
                "return": [
                    "dict"
                ]
            },
            "function": {
                "return": []
            },
            "get_label": {
                "return": []
            },
            "get_parents": {
                "return": []
            },
            "get_simple_label": {
                "return": []
            },
            "input": {
                "return": []
            },
            "output": {
                "return": []
            },
            "owner_id": {
                "return": []
            },
            "parent_ids": {
                "return": []
            },
            "properties": {
                "return": []
            },
            "scope": {
                "return": [
                    "Scope"
                ]
            },
            "skippable": {
                "return": []
            },
            "submit": {
                "callbacks": [
                    "None"
                ],
                "force": [
                    "bool"
                ],
                "wait": [
                    "bool"
                ],
                "timeout": [
                    "None"
                ],
                "properties": [],
                "return": []
            },
            "version": {
                "return": []
            }
        },
        "global": {
            "_make_event_for_task": {
                "attribute_name": [
                    "None"
                ],
                "attribute_value": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "Event"
                ]
            },
            "global": {}
        }
    },
    "taipy.core.task.task_id": {
        "global": {
            "global": {}
        }
    },
    "taipy.event": {
        "global": {
            "global": {}
        }
    },
    "taipy.event._event_callback": {
        "_Callback": {
            "__hash__": {
                "return": [
                    "int"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.event._event_processor": {
        "global": {
            "global": {}
        },
        "_AbstractEventProcessor": {
            "process_event": {
                "cls": [],
                "event_processor": [],
                "event": [],
                "return": [
                    "None"
                ]
            }
        },
        "_EventProcessor": {
            "process_event": {
                "cls": [],
                "event_processor": [],
                "event": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "taipy.event.event_processor": {
        "EventProcessor": {
            "__build_callback": {
                "callback": [],
                "callback_args": [],
                "filter": [],
                "broadcast": [],
                "return": [
                    "_Callback"
                ]
            },
            "__build_topic": {
                "entity_type": [],
                "entity_id": [],
                "operation": [],
                "attribute_name": [],
                "return": [
                    "_Topic"
                ]
            },
            "__do_process": {
                "cb": [],
                "event": [],
                "return": [
                    "None"
                ]
            },
            "__format_configs_parameter": {
                "clazz": [],
                "parameter": [],
                "return": [
                    "list[str]"
                ]
            },
            "__init__": {
                "gui": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__on_datanode_created": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "broadcast": [
                    "bool"
                ],
                "return": [
                    "EventProcessor"
                ]
            },
            "__on_datanode_deleted": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "broadcast": [
                    "bool"
                ],
                "return": [
                    "EventProcessor"
                ]
            },
            "__on_datanode_written": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "broadcast": [
                    "bool"
                ],
                "return": [
                    "EventProcessor"
                ]
            },
            "__on_event": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "entity_type": [
                    "None"
                ],
                "entity_id": [
                    "None"
                ],
                "operation": [
                    "None"
                ],
                "attribute_name": [
                    "None"
                ],
                "filter": [
                    "None"
                ],
                "broadcast": [
                    "bool"
                ],
                "return": [
                    "EventProcessor"
                ]
            },
            "__on_scenario_created": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "scenario_config": [
                    "None"
                ],
                "broadcast": [
                    "bool"
                ],
                "return": [
                    "EventProcessor"
                ]
            },
            "__on_scenario_deleted": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "scenario_config": [
                    "None"
                ],
                "broadcast": [
                    "bool"
                ],
                "return": [
                    "EventProcessor"
                ]
            },
            "__on_submission_finished": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "config_ids": [
                    "None"
                ],
                "broadcast": [
                    "bool"
                ],
                "return": [
                    "EventProcessor"
                ]
            },
            "__register_callback": {
                "topic": [],
                "cb": [],
                "return": [
                    "None"
                ]
            },
            "_filter": {
                "event": [],
                "return": [
                    "bool"
                ]
            },
            "_process_event": {
                "event": [],
                "return": [
                    "None"
                ]
            },
            "broadcast_on_datanode_created": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "return": []
            },
            "broadcast_on_datanode_deleted": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "return": []
            },
            "broadcast_on_datanode_written": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "return": []
            },
            "broadcast_on_event": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "entity_type": [
                    "None"
                ],
                "entity_id": [
                    "None"
                ],
                "operation": [
                    "None"
                ],
                "attribute_name": [
                    "None"
                ],
                "filter": [
                    "None"
                ],
                "return": []
            },
            "broadcast_on_scenario_created": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "scenario_config": [
                    "None"
                ],
                "return": []
            },
            "broadcast_on_scenario_deleted": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "scenario_config": [
                    "None"
                ],
                "return": []
            },
            "broadcast_on_submission_finished": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "config_ids": [
                    "None"
                ],
                "return": []
            },
            "on_datanode_created": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "return": []
            },
            "on_datanode_deleted": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "return": []
            },
            "on_datanode_written": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "datanode_config": [
                    "None"
                ],
                "return": []
            },
            "on_event": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "entity_type": [
                    "None"
                ],
                "entity_id": [
                    "None"
                ],
                "operation": [
                    "None"
                ],
                "attribute_name": [
                    "None"
                ],
                "filter": [
                    "None"
                ],
                "return": []
            },
            "on_scenario_created": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "scenario_config": [
                    "None"
                ],
                "return": []
            },
            "on_scenario_deleted": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "scenario_config": [
                    "None"
                ],
                "return": []
            },
            "on_submission_finished": {
                "callback": [],
                "callback_args": [
                    "None"
                ],
                "config_ids": [
                    "None"
                ],
                "return": []
            },
            "process_event": {
                "event": [],
                "return": [
                    "None"
                ]
            },
            "start": {
                "return": [
                    "None"
                ]
            },
            "stop": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.event.exceptions": {
        "global": {
            "global": {}
        }
    },
    "taipy.event.exceptions.exceptions": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui._default_config": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui._gui_cli": {
        "_GuiCLI": {
            "__add_taipy_prefix": {
                "cls": [],
                "key": [],
                "return": []
            },
            "create_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "create_run_parser": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "handle_command": {
                "cls": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._gui_section": {
        "_GuiSection": {
            "__copy__": {
                "return": [
                    "_GuiSection"
                ]
            },
            "__init__": {
                "property_list": [
                    "None"
                ],
                "properties": [],
                "return": [
                    "None"
                ]
            },
            "_clean": {
                "return": [
                    "None"
                ]
            },
            "_configure": {
                "properties": [],
                "return": []
            },
            "_from_dict": {
                "cls": [],
                "config_as_dict": [],
                "id": [],
                "config": [],
                "return": [
                    "_GuiSection"
                ]
            },
            "_to_dict": {
                "return": [
                    "dict"
                ]
            },
            "_update": {
                "config_as_dict": [],
                "default_section": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._hook": {
        "_Hooks": {
            "__getattr__": {
                "name": [],
                "return": []
            },
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "_register_hook": {
                "hook": [],
                "return": [
                    "None"
                ]
            },
            "_resolve_hook": {
                "kwargs": [],
                "args": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._init": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui._page": {
        "_Page": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "render": {
                "gui": [],
                "silent": [
                    "bool"
                ],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._renderers._html": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui._renderers._html.factory": {
        "_HtmlFactory": {
            "create_element": {
                "gui": [],
                "namespace": [],
                "control_type": [],
                "all_properties": [],
                "return": [
                    "tuple[typing.Text]",
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._renderers._markdown": {
        "_TaipyMarkdownExtension": {
            "extendMarkdown": {
                "md": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._renderers._markdown.blocproc": {
        "_StartBlockProcessor": {
            "extend": {
                "md": [],
                "gui": [],
                "priority": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "parent": [],
                "blocks": [],
                "return": [
                    "bool"
                ]
            },
            "test": {
                "parent": [],
                "block": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._renderers._markdown.control": {
        "_ControlPattern": {
            "extend": {
                "md": [],
                "gui": [],
                "priority": [],
                "return": [
                    "None"
                ]
            },
            "handleMatch": {
                "m": [],
                "data": [],
                "return": [
                    "tuple"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._renderers._markdown.factory": {
        "_MarkdownFactory": {
            "create_element": {
                "gui": [],
                "control_type": [],
                "all_properties": [],
                "return": [
                    "typing.Text",
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._renderers._markdown.postproc": {
        "_Postprocessor": {
            "extend": {
                "md": [],
                "gui": [],
                "priority": [],
                "return": [
                    "None"
                ]
            },
            "run": {
                "root": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui._renderers.json": {
        "_TaipyJsonAdapter": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "parse": {
                "o": [],
                "return": [
                    "bool",
                    "None"
                ]
            },
            "register": {
                "adapter": [],
                "return": [
                    "None"
                ]
            }
        },
        "_TaipyJsonEncoder": {
            "default": {
                "o": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        },
        "JsonAdapter": {
            "parse": {
                "o": [],
                "return": [
                    "None"
                ]
            },
            "register": {
                "return": [
                    "None"
                ]
            }
        },
        "_DefaultJsonAdapter": {
            "parse": {
                "o": [],
                "return": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "taipy.gui._renderers.utils": {
        "FileWatchdogHandler": {
            "__init__": {
                "file_path": [],
                "renderer": [],
                "return": [
                    "None"
                ]
            },
            "on_modified": {
                "event": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_add_to_dict_and_get": {
                "dico": [],
                "key": [],
                "value": [],
                "return": []
            },
            "_get_columns_dict": {
                "value": [],
                "columns": [],
                "col_types": [],
                "date_format": [
                    "None"
                ],
                "number_format": [
                    "None"
                ],
                "opt_columns": [],
                "return": [
                    "None"
                ]
            },
            "_get_columns_dict_from_list": {
                "col_list": [],
                "col_types_keys": [],
                "value": [],
                "return": [
                    "dict[, dict[typing.Text, int]]"
                ]
            },
            "_get_tuple_val": {
                "attr": [],
                "index": [],
                "default_val": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui._warnings": {
        "global": {
            "_warn": {
                "message": [],
                "e": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "global": {}
        },
        "TaipyGuiWarning": {
            "set_debug_mode": {
                "debug_mode": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "taipy.gui.builder": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.builder._api_generator": {
        "_ElementApiGenerator": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "add_default": {
                "return": [
                    "None"
                ]
            },
            "add_library": {
                "library": [],
                "return": [
                    "None"
                ]
            },
            "create_block_api": {
                "classname": [],
                "element_name": [],
                "default_property": [],
                "properties": [],
                "return": []
            },
            "create_control_api": {
                "classname": [],
                "element_name": [],
                "default_property": [],
                "properties": [],
                "return": []
            },
            "create_element_api": {
                "classname": [],
                "element_name": [],
                "default_property": [],
                "properties": [],
                "ElementBaseClass": [],
                "return": [
                    "typing.Type"
                ]
            },
            "find_default_property": {
                "property_list": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_properties_dict": {
                "property_list": [],
                "return": [
                    "dict"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.builder._context_manager": {
        "_BuilderContextManager": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "peek": {
                "return": [
                    "None"
                ]
            },
            "pop": {
                "return": [
                    "None"
                ]
            },
            "push": {
                "element": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.builder._factory": {
        "_BuilderFactory": {
            "create_element": {
                "gui": [],
                "element_type": [],
                "properties": [],
                "return": [
                    "tuple[typing.Text]",
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.builder._utils": {
        "_LambdaByName": {
            "__init__": {
                "element_name": [],
                "lineno": [],
                "lambdas": [],
                "return": [
                    "None"
                ]
            },
            "visit_Call": {
                "node": [],
                "return": [
                    "None"
                ]
            }
        },
        "_TransformVarToValue": {
            "__init__": {
                "frame": [],
                "non_vars": [],
                "return": [
                    "None"
                ]
            },
            "visit_Name": {
                "node": [],
                "return": []
            }
        },
        "global": {
            "_get_value_in_frame": {
                "frame": [],
                "name": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.builder.page": {
        "Page": {
            "__enter__": {
                "return": [
                    "Page"
                ]
            },
            "__exit__": {
                "exc_type": [],
                "exc_value": [],
                "traceback": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "element": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "add": {
                "elements": [],
                "return": [
                    "Page"
                ]
            },
            "render": {
                "gui": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.config": {
        "_Config": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "__log_outside_reloader": {
                "logger": [],
                "msg": [],
                "return": [
                    "None"
                ]
            },
            "_build_config": {
                "root_dir": [],
                "env_filename": [],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "_get_config": {
                "name": [],
                "default_value": [],
                "return": []
            },
            "_handle_argparse": {
                "return": [
                    "None"
                ]
            },
            "_load": {
                "config": [],
                "return": [
                    "None"
                ]
            },
            "_resolve_notebook_proxy": {
                "return": [
                    "None"
                ]
            },
            "_resolve_stylekit": {
                "return": [
                    "None"
                ]
            },
            "_resolve_url_prefix": {
                "return": [
                    "None"
                ]
            },
            "get_time_zone": {
                "return": [
                    "str"
                ]
            },
            "resolve": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.custom": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.custom._page": {
        "Page": {
            "__init__": {
                "resource_handler": [],
                "binding_variables": [
                    "None"
                ],
                "metadata": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "ResourceHandler": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "get_id": {
                "return": [
                    "str"
                ]
            },
            "get_resources": {
                "path": [],
                "taipy_resource_path": [],
                "base_url": [],
                "return": [
                    "None"
                ]
            }
        },
        "_ExternalResourceHandlerManager": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "get": {
                "id": [],
                "return": []
            },
            "get_all": {
                "return": [
                    "list"
                ]
            },
            "register": {
                "handler": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.custom.utils": {
        "global": {
            "get_current_resource_handler": {
                "return": [
                    "None"
                ]
            },
            "global": {},
            "is_in_custom_page_context": {
                "return": [
                    "bool"
                ]
            }
        }
    },
    "taipy.gui.data": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.array_dict_data_accessor": {
        "_ArrayDictDataAccessor": {
            "_from_pandas": {
                "value": [],
                "data_type": [],
                "return": [
                    "_MapDict",
                    "tuple"
                ]
            },
            "get_col_types": {
                "var_name": [],
                "value": [],
                "return": []
            },
            "get_data": {
                "var_name": [],
                "value": [],
                "payload": [],
                "data_format": [],
                "return": []
            },
            "get_supported_classes": {
                "return": [
                    "list"
                ]
            },
            "to_pandas": {
                "value": [],
                "return": [
                    "list",
                    "list[pd_@_DataFrame]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.comparison": {
        "global": {
            "_compare_function": {
                "gui": [],
                "compare_name": [],
                "name": [],
                "value": [],
                "datanames": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.data.content_accessor": {
        "_ContentAccessor": {
            "__get_display_name": {
                "var_name": [],
                "return": []
            },
            "__get_mime_from_file": {
                "path": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "data_url_max_size": [],
                "return": [
                    "None"
                ]
            },
            "get_content_path": {
                "url_path": [],
                "file_name": [],
                "bypass": [],
                "return": [
                    "tuple[typing.Optional[bool]]",
                    "tuple[bool]"
                ]
            },
            "get_info": {
                "var_name": [],
                "value": [],
                "image": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "get_path": {
                "path": [],
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.data_accessor": {
        "_DataAccessors": {
            "__get_instance": {
                "value": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "gui": [],
                "return": [
                    "None"
                ]
            },
            "_register": {
                "cls": [],
                "return": [
                    "None"
                ]
            },
            "get_col_types": {
                "var_name": [],
                "value": [],
                "return": []
            },
            "get_data": {
                "var_name": [],
                "value": [],
                "payload": [],
                "return": []
            },
            "get_dataframe": {
                "value": [],
                "return": []
            },
            "on_add": {
                "value": [],
                "payload": [],
                "new_row": [
                    "None"
                ],
                "return": []
            },
            "on_delete": {
                "value": [],
                "payload": [],
                "return": []
            },
            "on_edit": {
                "value": [],
                "payload": [],
                "return": []
            },
            "set_data_format": {
                "data_format": [],
                "return": [
                    "None"
                ]
            },
            "to_csv": {
                "var_name": [],
                "value": [],
                "return": []
            },
            "to_pandas": {
                "value": [],
                "return": []
            }
        },
        "_DataAccessor": {
            "__init__": {
                "gui": [],
                "return": [
                    "None"
                ]
            },
            "get_col_types": {
                "var_name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "get_data": {
                "var_name": [],
                "value": [],
                "payload": [],
                "data_format": [],
                "return": [
                    "None"
                ]
            },
            "get_supported_classes": {
                "return": [
                    "None"
                ]
            },
            "on_add": {
                "value": [],
                "payload": [],
                "new_row": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "on_delete": {
                "value": [],
                "payload": [],
                "return": [
                    "None"
                ]
            },
            "on_edit": {
                "value": [],
                "payload": [],
                "return": [
                    "None"
                ]
            },
            "to_csv": {
                "var_name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "to_pandas": {
                "value": [],
                "return": [
                    "None"
                ]
            }
        },
        "_InvalidDataAccessor": {
            "get_col_types": {
                "var_name": [],
                "value": [],
                "return": [
                    "dict"
                ]
            },
            "get_data": {
                "var_name": [],
                "value": [],
                "payload": [],
                "data_format": [],
                "return": [
                    "dict"
                ]
            },
            "get_supported_classes": {
                "return": [
                    "list"
                ]
            },
            "on_add": {
                "value": [],
                "payload": [],
                "new_row": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "on_delete": {
                "value": [],
                "payload": [],
                "return": [
                    "None"
                ]
            },
            "on_edit": {
                "value": [],
                "payload": [],
                "return": [
                    "None"
                ]
            },
            "to_csv": {
                "var_name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "to_pandas": {
                "value": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.data_format": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.data_scope": {
        "_DataScopes": {
            "__init__": {
                "gui": [],
                "return": [
                    "None"
                ]
            },
            "create_scope": {
                "id": [],
                "return": [
                    "None"
                ]
            },
            "delete_scope": {
                "id": [],
                "return": [
                    "None"
                ]
            },
            "get_all_scopes": {
                "return": []
            },
            "get_scope": {
                "client_id": [],
                "return": [
                    "tuple"
                ]
            },
            "is_single_client": {
                "return": []
            },
            "set_single_client": {
                "value": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.decimator": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.decimator.base": {
        "Decimator": {
            "__get_indexed_df_col": {
                "df": [],
                "return": [
                    "typing.Text"
                ]
            },
            "__init__": {
                "threshold": [],
                "zoom": [],
                "return": [
                    "None"
                ]
            },
            "_apply_decimator": {
                "dataframe": [],
                "x_column_name": [],
                "y_column_name": [],
                "z_column_name": [],
                "payload": [],
                "is_copied": [],
                "return": []
            },
            "_decimate": {
                "data": [],
                "payload": [],
                "return": [
                    "None"
                ]
            },
            "_df_apply_decimator": {
                "dataframe": [],
                "x_column_name": [],
                "y_column_name": [],
                "z_column_name": [],
                "payload": [],
                "is_copied": [],
                "return": [
                    "tuple"
                ]
            },
            "_df_relayout": {
                "dataframe": [],
                "x_column": [],
                "y_column": [],
                "chart_mode": [],
                "x0": [],
                "x1": [],
                "y0": [],
                "y1": [],
                "is_copied": [],
                "return": [
                    "tuple",
                    "tuple[bool]"
                ]
            },
            "_is_applicable": {
                "data": [],
                "nb_rows_max": [],
                "chart_mode": [],
                "return": [
                    "bool"
                ]
            },
            "_on_decimate": {
                "df": [],
                "decimator_instance_payload": [],
                "decimator_payload": [],
                "is_copied": [
                    "bool"
                ],
                "filter_unused_columns": [
                    "bool"
                ],
                "return": []
            },
            "_on_decimate_df": {
                "df": [],
                "decimator_instance_payload": [],
                "decimator_payload": [],
                "is_copied": [
                    "bool"
                ],
                "filter_unused_columns": [
                    "bool"
                ],
                "return": [
                    "tuple[bool]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.decimator.lttb": {
        "LTTB": {
            "__init__": {
                "n_out": [],
                "threshold": [
                    "None"
                ],
                "zoom": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_areas_of_triangles": {
                "a": [],
                "bs": [],
                "c": [],
                "return": [
                    "float"
                ]
            },
            "_decimate": {
                "data": [],
                "payload": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.decimator.minmax": {
        "MinMaxDecimator": {
            "__init__": {
                "n_out": [],
                "threshold": [
                    "None"
                ],
                "zoom": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_decimate": {
                "data": [],
                "payload": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.decimator.rdp": {
        "RDP": {
            "__dsquared_line_points": {
                "P1": [],
                "P2": [],
                "points": [],
                "return": []
            },
            "__init__": {
                "epsilon": [
                    "None"
                ],
                "n_out": [
                    "None"
                ],
                "threshold": [
                    "None"
                ],
                "zoom": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "__rdp_epsilon": {
                "data": [],
                "epsilon": [],
                "return": []
            },
            "__rdp_points": {
                "M": [],
                "n_out": [],
                "return": [
                    "bool"
                ]
            },
            "_decimate": {
                "data": [],
                "payload": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.decimator.scatter_decimator": {
        "ScatterDecimator": {
            "__init__": {
                "binning_ratio": [
                    "None"
                ],
                "max_overlap_points": [
                    "None"
                ],
                "threshold": [
                    "None"
                ],
                "zoom": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "_decimate": {
                "data": [],
                "payload": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.numpy_data_accessor": {
        "_NumpyDataAccessor": {
            "_from_pandas": {
                "value": [],
                "type": [],
                "return": []
            },
            "get_supported_classes": {
                "return": [
                    "list"
                ]
            },
            "to_pandas": {
                "value": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.data.pandas_data_accessor": {
        "_PandasDataAccessor": {
            "__apply_user_function": {
                "user_function": [],
                "column_name": [],
                "function_name": [],
                "data": [],
                "prefix": [],
                "return": [
                    "tuple[typing.Text]"
                ]
            },
            "__build_transferred_cols": {
                "payload_cols": [],
                "dataframe": [],
                "styles": [],
                "tooltips": [],
                "is_copied": [
                    "bool"
                ],
                "new_indexes": [
                    "None"
                ],
                "handle_nan": [
                    "bool"
                ],
                "formats": [],
                "return": []
            },
            "__format_data": {
                "data": [],
                "data_format": [],
                "orient": [],
                "start": [
                    "None"
                ],
                "rowcount": [
                    "None"
                ],
                "data_extraction": [
                    "None"
                ],
                "handle_nan": [
                    "bool"
                ],
                "fullrowcount": [
                    "None"
                ],
                "return": [
                    "dict[typing.Text, typing.Union[str,None]]"
                ]
            },
            "__get_data": {
                "var_name": [],
                "df": [],
                "payload": [],
                "data_format": [],
                "col_prefix": [
                    "typing.Text"
                ],
                "return": []
            },
            "__is_date_column": {
                "data": [],
                "col_name": [],
                "return": [
                    "bool"
                ]
            },
            "__to_dataframe": {
                "value": [],
                "return": []
            },
            "__user_function": {
                "row": [],
                "gui": [],
                "column_name": [],
                "user_function": [],
                "function_name": [],
                "return": [
                    "str",
                    "typing.Text"
                ]
            },
            "_from_pandas": {
                "value": [],
                "data_type": [],
                "return": []
            },
            "get_col_types": {
                "var_name": [],
                "value": [],
                "return": [
                    "dict[typing.Text, ]",
                    "dict[str, ]"
                ]
            },
            "get_data": {
                "var_name": [],
                "value": [],
                "payload": [],
                "data_format": [],
                "return": [
                    "dict[typing.Text, typing.Union[bool,dict[typing.Text, typing.Union[bool,list]]]]"
                ]
            },
            "get_supported_classes": {
                "return": [
                    "list"
                ]
            },
            "on_add": {
                "value": [],
                "payload": [],
                "new_row": [
                    "None"
                ],
                "return": []
            },
            "on_delete": {
                "value": [],
                "payload": [],
                "return": []
            },
            "on_edit": {
                "value": [],
                "payload": [],
                "return": []
            },
            "to_csv": {
                "var_name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "to_pandas": {
                "value": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.extension": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.gui_actions": {
        "global": {
            "broadcast_callback": {
                "gui": [],
                "callback": [],
                "args": [
                    "None"
                ],
                "module_context": [
                    "None"
                ],
                "return": []
            },
            "callback_on_exception": {
                "state": [],
                "function_name": [],
                "e": [],
                "return": [
                    "None"
                ]
            },
            "callback_on_status": {
                "status": [],
                "e": [
                    "None"
                ],
                "function_name": [
                    "None"
                ],
                "function_result": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "download": {
                "state": [],
                "content": [],
                "name": [
                    "typing.Text"
                ],
                "on_action": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "get_context_id": {
                "state": [],
                "return": []
            },
            "get_module_context": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "get_module_name_from_state": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "get_state_id": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "get_user_content_url": {
                "state": [],
                "path": [
                    "None"
                ],
                "params": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "hold_control": {
                "state": [],
                "callback": [
                    "None"
                ],
                "message": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "invoke_callback": {
                "gui": [],
                "state_id": [],
                "callback": [],
                "args": [
                    "None"
                ],
                "module_context": [
                    "None"
                ],
                "return": []
            },
            "invoke_long_callback": {
                "state": [],
                "user_function": [],
                "user_function_args": [
                    "None"
                ],
                "user_status_function": [
                    "None"
                ],
                "user_status_function_args": [
                    "None"
                ],
                "period": [
                    "int"
                ],
                "return": [
                    "None"
                ]
            },
            "invoke_state_callback": {
                "gui": [],
                "state_id": [],
                "callback": [],
                "args": [],
                "return": []
            },
            "navigate": {
                "state": [],
                "to": [
                    "typing.Text"
                ],
                "params": [
                    "None"
                ],
                "tab": [
                    "None"
                ],
                "force": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "notify": {
                "state": [],
                "notification_type": [
                    "typing.Text"
                ],
                "message": [
                    "typing.Text"
                ],
                "system_notification": [
                    "None"
                ],
                "duration": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "resume_control": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "thread_status": {
                "name": [],
                "period_s": [],
                "count": [],
                "return": [
                    "None"
                ]
            },
            "user_function_in_thread": {
                "uf_args": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "taipy.gui.icon": {
        "Icon": {
            "__init__": {
                "path": [],
                "text": [
                    "None"
                ],
                "light_path": [
                    "None"
                ],
                "dark_path": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_to_dict": {
                "a_dict": [
                    "None"
                ],
                "return": [
                    "dict[typing.Text, ]"
                ]
            },
            "get_dict_or": {
                "value": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.page": {
        "Page": {
            "__init__": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "_get_content_detail": {
                "gui": [],
                "return": [
                    "typing.Text"
                ]
            },
            "_get_frame": {
                "return": []
            },
            "_get_locals": {
                "return": [
                    "None"
                ]
            },
            "_get_module_name": {
                "return": [
                    "None",
                    "typing.Text"
                ]
            },
            "_get_style": {
                "return": []
            },
            "_is_class_module": {
                "return": [
                    "bool"
                ]
            },
            "create_page": {
                "return": [
                    "None"
                ]
            },
            "render": {
                "gui": [],
                "return": [
                    "typing.Text"
                ]
            },
            "set_content": {
                "content": [],
                "return": [
                    "None"
                ]
            },
            "set_style": {
                "style": [],
                "return": [
                    "Page"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.partial": {
        "Partial": {
            "__copy": {
                "content": [],
                "return": [
                    "Partial"
                ]
            },
            "__init__": {
                "route": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "update_content": {
                "state": [],
                "content": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.server": {
        "_Server": {
            "__init__": {
                "gui": [],
                "flask": [
                    "None"
                ],
                "path_mapping": [
                    "None"
                ],
                "async_mode": [
                    "None"
                ],
                "allow_upgrades": [
                    "bool"
                ],
                "server_config": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__is_ignored": {
                "file_path": [],
                "return": [
                    "bool"
                ]
            },
            "_apply_patch": {
                "return": [
                    "None"
                ]
            },
            "_direct_render_json": {
                "data": [],
                "return": []
            },
            "_get_async_mode": {
                "return": []
            },
            "_get_default_blueprint": {
                "static_folder": [],
                "template_folder": [],
                "title": [],
                "favicon": [],
                "root_margin": [],
                "scripts": [],
                "styles": [],
                "version": [],
                "client_config": [],
                "watermark": [],
                "css_vars": [],
                "base_url": [],
                "return": [
                    "Blueprint"
                ]
            },
            "_get_random_port": {
                "port_auto_ranges": [
                    "None"
                ],
                "return": []
            },
            "_render": {
                "html_fragment": [],
                "style": [],
                "head": [],
                "context": [],
                "return": []
            },
            "_run_notebook": {
                "return": [
                    "None"
                ]
            },
            "get_flask": {
                "return": []
            },
            "get_port": {
                "return": []
            },
            "handle_connect": {
                "return": [
                    "None"
                ]
            },
            "handle_disconnect": {
                "return": [
                    "None"
                ]
            },
            "handle_message": {
                "message": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "my_index": {
                "path": [],
                "return": [
                    "tuple[typing.Union[typing.Text,int]]"
                ]
            },
            "run": {
                "host": [],
                "port": [],
                "client_url": [],
                "debug": [],
                "use_reloader": [],
                "flask_log": [],
                "run_in_thread": [],
                "allow_unsafe_werkzeug": [],
                "notebook_proxy": [],
                "port_auto_ranges": [],
                "return": [
                    "None"
                ]
            },
            "stop_proxy": {
                "return": [
                    "None"
                ]
            },
            "stop_thread": {
                "return": [
                    "None"
                ]
            },
            "test_client": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.state": {
        "State": {
            "__enter__": {
                "return": [
                    "State"
                ]
            },
            "__exit__": {
                "exc_type": [],
                "exc_value": [],
                "traceback": [],
                "return": []
            },
            "__getitem__": {
                "key": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "_invoke_on_gui": {
                "method": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "_set_context": {
                "gui": [],
                "return": []
            },
            "assign": {
                "name": [],
                "value": [],
                "return": []
            },
            "broadcast": {
                "name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "get_gui": {
                "return": [
                    "None"
                ]
            },
            "refresh": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "set_favicon": {
                "favicon_path": [],
                "return": [
                    "None"
                ]
            }
        },
        "_GuiState": {
            "__filter_var_list": {
                "var_list": [],
                "excluded_attrs": [],
                "return": []
            },
            "__getattribute__": {
                "name": [],
                "return": [
                    "_GuiState"
                ]
            },
            "__getitem__": {
                "key": [],
                "return": [
                    "_GuiState"
                ]
            },
            "__init__": {
                "gui": [],
                "var_list": [],
                "context_list": [],
                "return": [
                    "None"
                ]
            },
            "__setattr__": {
                "name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_add_attribute": {
                "name": [],
                "default_value": [
                    "None"
                ],
                "return": [
                    "bool"
                ]
            },
            "_get_placeholder": {
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_get_placeholder_attrs": {
                "return": []
            },
            "_invoke_on_gui": {
                "method": [],
                "args": [],
                "return": []
            },
            "_notebook_context": {
                "gui": [],
                "return": []
            },
            "_set_context": {
                "gui": [],
                "return": []
            },
            "_set_placeholder": {
                "name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "get_gui": {
                "return": []
            }
        },
        "_AsyncState": {
            "__get_var_from_state": {
                "state": [],
                "var_name": [],
                "return": []
            },
            "__getattr__": {
                "var_name": [],
                "return": []
            },
            "__init__": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "__set_var_in_state": {
                "state": [],
                "var_name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "__setattr__": {
                "var_name": [],
                "var_value": [],
                "return": [
                    "None"
                ]
            },
            "_invoke_on_gui": {
                "method": [],
                "args": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.state_support": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.test": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.test.mock_state": {
        "MockState": {
            "__enter__": {
                "return": [
                    "MockState"
                ]
            },
            "__exit__": {
                "exc_type": [],
                "exc_value": [],
                "traceback": [],
                "return": [
                    "bool"
                ]
            },
            "__getattribute__": {
                "name": [],
                "return": [
                    "bool",
                    "None"
                ]
            },
            "__getitem__": {
                "key": [],
                "return": [
                    "MockState"
                ]
            },
            "__init__": {
                "gui": [],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "__setattr__": {
                "name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_invoke_on_gui": {
                "method": [],
                "args": [],
                "return": []
            },
            "broadcast": {
                "name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "get_gui": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.types": {
        "global": {
            "_get_taipy_type": {
                "a_type": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui.utils._adapter": {
        "_Adapter": {
            "__get_children": {
                "value": [],
                "return": [
                    "None",
                    "list"
                ]
            },
            "__get_for_var": {
                "var_name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "__get_id": {
                "value": [],
                "dig": [
                    "bool"
                ],
                "return": [
                    "str",
                    "typing.Text"
                ]
            },
            "__get_label": {
                "value": [],
                "dig": [
                    "bool"
                ],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "__on_tree": {
                "adapter": [],
                "tree": [],
                "return": [
                    "list"
                ]
            },
            "_add_for_type": {
                "type_name": [],
                "adapter": [],
                "return": [
                    "None"
                ]
            },
            "_add_type_for_var": {
                "var_name": [],
                "type_name": [],
                "return": [
                    "None"
                ]
            },
            "_get_adapted_lov": {
                "lov": [],
                "var_type": [],
                "return": [
                    "_AdaptedLov"
                ]
            },
            "_get_elt_per_ids": {
                "var_name": [],
                "lov": [],
                "adapter": [
                    "None"
                ],
                "return": [
                    "dict[, _MapDict]"
                ]
            },
            "_get_for_type": {
                "type_name": [],
                "return": []
            },
            "_get_unique_type": {
                "type_name": [],
                "return": [
                    "typing.Text"
                ]
            },
            "_get_valid_result": {
                "value": [],
                "id_only": [
                    "bool"
                ],
                "return": [
                    "None",
                    "tuple[None]"
                ]
            },
            "_run": {
                "adapter": [],
                "value": [],
                "var_name": [],
                "id_only": [
                    "bool"
                ],
                "return": [
                    "None",
                    "str",
                    "tuple"
                ]
            },
            "run": {
                "var_name": [],
                "value": [],
                "id_only": [
                    "bool"
                ],
                "return": [
                    "list"
                ]
            }
        },
        "_AdaptedLov": {
            "__init__": {
                "lov": [],
                "var_type": [],
                "return": [
                    "None"
                ]
            },
            "get_lov": {
                "lov": [],
                "return": []
            },
            "get_type": {
                "lov": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.utils._attributes": {
        "global": {
            "_attrsetter": {
                "obj": [],
                "attr_str": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_delscopeattr": {
                "gui": [],
                "name": [],
                "return": [
                    "None"
                ]
            },
            "_getscopeattr": {
                "gui": [],
                "name": [],
                "more": [],
                "return": []
            },
            "_getscopeattr_drill": {
                "gui": [],
                "name": [],
                "return": []
            },
            "_hasscopeattr": {
                "gui": [],
                "name": [],
                "return": [
                    "bool"
                ]
            },
            "_setscopeattr": {
                "gui": [],
                "name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_setscopeattr_drill": {
                "gui": [],
                "name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils._bindings": {
        "_Bindings": {
            "__get_property": {
                "name": [],
                "return": []
            },
            "__getter": {
                "ud": [],
                "return": [
                    "_MapDict"
                ]
            },
            "__init__": {
                "gui": [],
                "return": [
                    "None"
                ]
            },
            "__setter": {
                "ud": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_bind": {
                "name": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "_delete_scope": {
                "id": [],
                "return": [
                    "None"
                ]
            },
            "_get_all_scopes": {
                "return": []
            },
            "_get_data_scope": {
                "return": []
            },
            "_get_data_scope_metadata": {
                "return": []
            },
            "_get_or_create_scope": {
                "id": [],
                "return": [
                    "tuple[typing.Union[typing.Text,bool]]"
                ]
            },
            "_is_single_client": {
                "return": []
            },
            "_new_scopes": {
                "return": [
                    "None"
                ]
            },
            "_set_single_client": {
                "value": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.utils._css": {
        "global": {
            "get_style": {
                "style": [],
                "return": [
                    "None",
                    "dict"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils._lambda": {
        "global": {
            "_get_lambda_id": {
                "lambda_fn": [],
                "module": [
                    "None"
                ],
                "index": [
                    "None"
                ],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui.utils._locals_context": {
        "_LocalsContext": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "_get_locals_bind_from_context": {
                "context": [],
                "return": []
            },
            "add": {
                "context": [],
                "locals_dict": [],
                "return": [
                    "None"
                ]
            },
            "get_all_context": {
                "return": []
            },
            "get_all_keys": {
                "return": [
                    "set"
                ]
            },
            "get_context": {
                "return": [
                    "None"
                ]
            },
            "get_default": {
                "return": []
            },
            "get_locals": {
                "return": []
            },
            "is_default": {
                "return": [
                    "bool"
                ]
            },
            "set_default": {
                "default": [],
                "default_module_name": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "set_locals_context": {
                "context": [],
                "return": [
                    "typing.Generator"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.utils._map_dict": {
        "_MapDict": {
            "__contains__": {
                "item": [],
                "return": []
            },
            "__delitem__": {
                "key": [],
                "return": [
                    "None"
                ]
            },
            "__getattr__": {
                "attr": [],
                "return": [
                    "_MapDict",
                    "dict"
                ]
            },
            "__getitem__": {
                "key": [],
                "return": [
                    "_MapDict",
                    "dict"
                ]
            },
            "__init__": {
                "dict_import": [],
                "app_update_var": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "__iter__": {
                "return": []
            },
            "__len__": {
                "return": []
            },
            "__length_hint__": {
                "return": []
            },
            "__missing__": {
                "key": [],
                "return": []
            },
            "__reversed__": {
                "return": []
            },
            "__setattr__": {
                "attr": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "__setitem__": {
                "key": [],
                "value": [],
                "return": [
                    "None"
                ]
            },
            "clear": {
                "return": [
                    "None"
                ]
            },
            "copy": {
                "return": [
                    "_MapDict"
                ]
            },
            "get": {
                "key": [],
                "default_value": [
                    "None"
                ],
                "return": []
            },
            "items": {
                "return": []
            },
            "keys": {
                "return": []
            },
            "pop": {
                "key": [],
                "default": [
                    "None"
                ],
                "return": []
            },
            "popitem": {
                "return": []
            },
            "setdefault": {
                "key": [],
                "value": [
                    "None"
                ],
                "return": []
            },
            "update": {
                "d": [],
                "return": [
                    "None"
                ]
            },
            "values": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.utils.boolean": {
        "global": {
            "_is_boolean": {
                "s": [],
                "return": [
                    "bool"
                ]
            },
            "_is_true": {
                "s": [],
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.callable": {
        "global": {
            "_function_name": {
                "s": [],
                "return": [
                    "typing.Text",
                    "str"
                ]
            },
            "_is_function": {
                "s": [],
                "return": [
                    "bool"
                ]
            },
            "_is_unnamed_function": {
                "s": [],
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.clientvarname": {
        "global": {
            "_get_broadcast_var_name": {
                "s": [],
                "return": []
            },
            "_get_client_var_name": {
                "var_name": [],
                "return": []
            },
            "_to_camel_case": {
                "value": [],
                "upcase_first": [
                    "bool"
                ],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui.utils.datatype": {
        "global": {
            "_get_data_type": {
                "value": [],
                "return": [
                    "typing.Text",
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.date": {
        "global": {
            "_date_to_string": {
                "date_val": [],
                "return": []
            },
            "_string_to_date": {
                "date_str": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui.utils.expr_var_name": {
        "global": {
            "_get_expr_var_name": {
                "expr": [],
                "return": [
                    "typing.Text"
                ]
            },
            "_reset_expr_var_name": {
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.filename": {
        "global": {
            "_get_non_existent_file_path": {
                "dir_path": [],
                "file_name": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui.utils.filter_locals": {
        "global": {
            "_filter_locals": {
                "locals_dict": [],
                "return": [
                    "dict"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.get_imported_var": {
        "global": {
            "_get_imported_var": {
                "frame": [],
                "return": [
                    "list[tuple[typing.Text]]"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.get_module_name": {
        "global": {
            "_get_absolute_module_name_from_ast": {
                "based_module": [],
                "relative_module": [],
                "level": [],
                "return": [
                    "str"
                ]
            },
            "_get_module_name_from_frame": {
                "frame": [],
                "return": [
                    "None"
                ]
            },
            "_get_module_name_from_imported_var": {
                "var_name": [],
                "value": [],
                "sub_module_name": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui.utils.get_page_from_module": {
        "global": {
            "_get_page_from_module": {
                "module": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui.utils.getdatecolstrname": {
        "global": {
            "_get_date_col_str_name": {
                "columns": [],
                "col": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui.utils.html": {
        "global": {
            "_get_css_var_value": {
                "value": [],
                "return": [
                    "typing.Text"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.is_debugging": {
        "global": {
            "global": {},
            "is_debugging": {
                "return": [
                    "bool"
                ]
            }
        }
    },
    "taipy.gui.utils.is_port_open": {
        "global": {
            "_is_port_open": {
                "host": [],
                "port": [],
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.isnotebook": {
        "global": {
            "_is_in_notebook": {
                "return": [
                    "bool"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.singleton": {
        "_Singleton": {
            "__call__": {
                "kwargs": [],
                "args": [],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.utils.threads": {
        "global": {
            "_invoke_async_callback": {
                "user_function": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "_thread_async_target": {
                "user_function": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui.utils.types": {
        "_TaipyBase": {
            "__init__": {
                "data": [],
                "hash_name": [],
                "return": [
                    "None"
                ]
            },
            "_get_holder_prefixes": {
                "return": [
                    "list"
                ]
            },
            "_get_readable_name": {
                "return": [
                    "typing.Text"
                ]
            },
            "cast_value": {
                "value": [],
                "return": []
            },
            "get": {
                "return": []
            },
            "get_hash": {
                "return": [
                    "None"
                ]
            },
            "get_name": {
                "return": []
            },
            "set": {
                "data": [],
                "return": [
                    "None"
                ]
            }
        },
        "_DoNotUpdate": {
            "__repr__": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "_TaipyBool": {
            "cast_value": {
                "value": [],
                "return": [
                    "bool"
                ]
            },
            "get": {
                "return": []
            },
            "get_hash": {
                "return": []
            }
        },
        "_TaipyDate": {
            "cast_value": {
                "value": [],
                "return": []
            },
            "get": {
                "return": [
                    "None",
                    "str"
                ]
            },
            "get_hash": {
                "return": []
            }
        },
        "_TaipyDateRange": {
            "cast_value": {
                "value": [],
                "return": [
                    "list[str]"
                ]
            },
            "get": {
                "return": [
                    "list[typing.Optional[str]]",
                    "list"
                ]
            },
            "get_hash": {
                "return": []
            }
        },
        "_TaipyLoNumbers": {
            "cast_value": {
                "value": [],
                "return": [
                    "list[float]",
                    "list"
                ]
            },
            "get_hash": {
                "return": []
            }
        },
        "_TaipyNumber": {
            "cast_value": {
                "value": [],
                "return": [
                    "float"
                ]
            },
            "get": {
                "return": [
                    "None",
                    "float"
                ]
            },
            "get_hash": {
                "return": []
            }
        },
        "_TaipyDict": {
            "get": {
                "return": []
            },
            "get_hash": {
                "return": []
            }
        },
        "_TaipyToJson": {
            "get": {
                "return": [
                    "None",
                    "list"
                ]
            },
            "get_hash": {
                "return": []
            }
        },
        "_TaipyContent": {
            "get_hash": {
                "return": []
            }
        },
        "_TaipyContentHtml": {
            "get_hash": {
                "return": []
            }
        },
        "_TaipyContentImage": {
            "get_hash": {
                "return": []
            }
        },
        "_TaipyData": {
            "get_hash": {
                "return": []
            }
        },
        "_TaipyLov": {
            "get_hash": {
                "return": []
            }
        },
        "_TaipyLovValue": {
            "get_hash": {
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui.utils.varnamefromcontent": {
        "global": {
            "_varname_from_content": {
                "gui": [],
                "content": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.gui.utils.viselements": {
        "global": {
            "_resolve_inherit_property": {
                "element": [],
                "viselements": [],
                "return": []
            },
            "global": {},
            "resolve_inherits": {
                "viselements": [],
                "return": []
            }
        }
    },
    "taipy.gui_core._GuiCoreLib": {
        "_GuiCore": {
            "get_elements": {
                "return": []
            },
            "get_name": {
                "return": []
            },
            "get_scripts": {
                "return": [
                    "list[typing.Text]"
                ]
            },
            "get_version": {
                "return": []
            },
            "on_init": {
                "gui": [],
                "return": [
                    "tuple[_GuiCoreContext]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.gui_core": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui_core._init": {
        "global": {
            "_init_gui_core": {
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "taipy.gui_core._utils": {
        "global": {
            "global": {}
        }
    },
    "taipy.gui_core.filters": {
        "CustomScenarioFilter": {
            "__post_init__": {
                "return": [
                    "None"
                ]
            },
            "_get_custom": {
                "col": [],
                "return": [
                    "None"
                ]
            },
            "get_property": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "DataNodeFilter": {
            "get_property": {
                "return": []
            }
        },
        "DataNodeScenarioFilter": {
            "get_property": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "ScenarioFilter": {
            "get_property": {
                "return": []
            }
        },
        "_Filter": {
            "get_property": {
                "return": []
            },
            "get_type": {
                "return": [
                    "typing.Text"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.rest": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest._init": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.error_handler": {
        "global": {
            "_create_404": {
                "e": [],
                "return": [
                    "tuple[typing.Union[dict[typing.Text, ],int]]"
                ]
            },
            "global": {},
            "handle_config_id_missing_exception": {
                "e": [],
                "return": [
                    "tuple[int]"
                ]
            },
            "handle_cycle_not_found": {
                "e": [],
                "return": []
            },
            "handle_data_node_config_not_found": {
                "e": [],
                "return": []
            },
            "handle_data_node_not_found": {
                "e": [],
                "return": []
            },
            "handle_job_not_found": {
                "e": [],
                "return": []
            },
            "handle_marshmallow_error": {
                "e": [],
                "return": [
                    "tuple[int]"
                ]
            },
            "handle_scenario_config_not_found": {
                "e": [],
                "return": []
            },
            "handle_scenario_id_missing_exception": {
                "e": [],
                "return": [
                    "tuple[int]"
                ]
            },
            "handle_scenario_not_found": {
                "e": [],
                "return": []
            },
            "handle_sequence_config_not_found": {
                "e": [],
                "return": []
            },
            "handle_sequence_name_missing_exception": {
                "e": [],
                "return": [
                    "tuple[int]"
                ]
            },
            "handle_sequence_not_found": {
                "e": [],
                "return": []
            },
            "handle_task_config_not_found": {
                "e": [],
                "return": []
            },
            "handle_task_not_found": {
                "e": [],
                "return": []
            }
        }
    },
    "taipy.rest.api.exceptions": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.exceptions.exceptions": {
        "ConfigIdMissingException": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "ScenarioIdMissingException": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "SequenceNameMissingException": {
            "__init__": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.middlewares": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.middlewares._middleware": {
        "global": {
            "_enterprise_middleware": {
                "return": []
            },
            "_middleware": {
                "f": [],
                "return": []
            },
            "_using_enterprise": {
                "return": [
                    "bool"
                ]
            },
            "global": {},
            "wrapper": {
                "kwargs": [],
                "args": [],
                "return": []
            }
        }
    },
    "taipy.rest.api.resources": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.schemas": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.schemas.cycle": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.schemas.datanode": {
        "global": {
            "global": {}
        },
        "DataNodeConfigSchema": {
            "serialize_scope": {
                "obj": [],
                "kwargs": [],
                "return": []
            }
        }
    },
    "taipy.rest.api.schemas.job": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.schemas.scenario": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.schemas.sequence": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.schemas.task": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.api.views": {
        "global": {
            "global": {},
            "load_enterprise_resources": {
                "api": [],
                "return": [
                    "None"
                ]
            },
            "register_views": {
                "return": [
                    "None"
                ]
            }
        }
    },
    "taipy.rest.app": {
        "global": {
            "configure_apispec": {
                "app": [],
                "return": [
                    "None"
                ]
            },
            "create_app": {
                "testing": [
                    "bool"
                ],
                "flask_env": [
                    "None"
                ],
                "secret_key": [
                    "None"
                ],
                "return": [
                    "Flask"
                ]
            },
            "global": {},
            "register_blueprints": {
                "app": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "taipy.rest.commons": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.commons.apispec": {
        "APISpecExt": {
            "__init__": {
                "app": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "init_app": {
                "app": [],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "openapi_yaml": {
                "return": []
            },
            "redoc_ui": {
                "return": []
            },
            "swagger_json": {
                "return": []
            },
            "swagger_ui": {
                "return": []
            }
        },
        "FlaskRestfulPlugin": {
            "_rule_for_view": {
                "view": [],
                "app": [
                    "None"
                ],
                "return": []
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.rest.commons.encoder": {
        "_CustomEncoder": {
            "default": {
                "o": [],
                "return": [
                    "dict[typing.Text, typing.Text]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.rest.commons.pagination": {
        "global": {
            "extract_pagination": {
                "page": [
                    "None"
                ],
                "per_page": [
                    "None"
                ],
                "request_args": [],
                "return": [
                    "tuple[int]"
                ]
            },
            "global": {},
            "paginate": {
                "query": [],
                "schema": [],
                "return": [
                    "dict[typing.Text, ]"
                ]
            }
        }
    },
    "taipy.rest.commons.to_from_model": {
        "global": {
            "_to_model": {
                "repository": [],
                "entity": [],
                "kwargs": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.rest.extensions": {
        "global": {
            "global": {}
        }
    },
    "taipy.rest.rest": {
        "Rest": {
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "run": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.hooks.post_gen_project": {
        "global": {
            "generate_main_file": {
                "return": [
                    "None"
                ]
            },
            "global": {},
            "handle_multi_page_app": {
                "pages": [],
                "return": [
                    "None"
                ]
            },
            "handle_run_service": {
                "return": [
                    "None"
                ]
            },
            "handle_services": {
                "use_rest": [],
                "use_orchestrator": [],
                "return": [
                    "None"
                ]
            },
            "handle_single_page_app": {
                "return": [
                    "None"
                ]
            },
            "initialize_as_git_project": {
                "project_dir": [],
                "return": [
                    "typing.Text"
                ]
            }
        }
    },
    "taipy.templates.default.hooks.pre_gen_project": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.{{cookiecutter.__root_folder}}.algorithms": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.{{cookiecutter.__root_folder}}.algorithms.algorithms": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.{{cookiecutter.__root_folder}}.configuration": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.{{cookiecutter.__root_folder}}.configuration.config": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.{{cookiecutter.__root_folder}}.pages": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.{{cookiecutter.__root_folder}}.pages.page_example.page_example": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.{{cookiecutter.__root_folder}}.pages.root": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.default.{{cookiecutter.__root_folder}}.{{cookiecutter.__main_file}}": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.sdm.hooks.post_gen_project": {
        "global": {
            "global": {},
            "initialize_as_git_project": {
                "project_dir": [],
                "return": [
                    "typing.Text"
                ]
            }
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.algos": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.algos.algos": {
        "global": {
            "clean_data": {
                "df": [],
                "replacement_type": [],
                "return": []
            },
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.config": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.config.config": {
        "global": {
            "configure": {
                "return": []
            },
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.config.config_with_toml": {
        "global": {
            "configure": {
                "return": []
            },
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.pages": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.pages.job_page": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.pages.job_page.job_page": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.pages.root": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.pages.scenario_page": {
        "global": {
            "global": {}
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.pages.scenario_page.data_node_management": {
        "global": {
            "build_dn_partial": {
                "dn": [],
                "dn_label": [],
                "return": []
            },
            "global": {},
            "manage_partial": {
                "state": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.pages.scenario_page.scenario_page": {
        "global": {
            "global": {},
            "manage_data_node_partial": {
                "state": [],
                "return": [
                    "None"
                ]
            },
            "notify_on_submission": {
                "state": [],
                "submitable": [],
                "details": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "taipy.templates.sdm.{{cookiecutter.__root_folder}}.{{cookiecutter.__main_file}}": {
        "global": {
            "global": {},
            "on_change": {
                "state": [],
                "var": [],
                "val": [],
                "return": [
                    "None"
                ]
            },
            "on_init": {
                "state": [],
                "return": [
                    "None"
                ]
            }
        }
    }
}