{
    "pre_commit": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.__main__": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.all_languages": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.clientlib": {
        "global": {
            "_entry": {
                "modname": [],
                "return": [
                    "typing.Text"
                ]
            },
            "check_min_version": {
                "version": [],
                "return": [
                    "None"
                ]
            },
            "check_type_tag": {
                "tag": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "parse_version": {
                "s": [],
                "return": [
                    "tuple[int]"
                ]
            },
            "transform_stage": {
                "stage": [],
                "return": [
                    "typing.Text"
                ]
            },
            "warn_for_stages_on_repo_init": {
                "repo": [],
                "directory": [],
                "return": [
                    "None"
                ]
            },
            "warn_unknown_keys_repo": {
                "extra": [],
                "orig_keys": [],
                "dct": [],
                "return": [
                    "None"
                ]
            },
            "warn_unknown_keys_root": {
                "extra": [],
                "orig_keys": [],
                "dct": [],
                "return": [
                    "None"
                ]
            }
        },
        "DeprecatedDefaultStagesWarning": {
            "apply_default": {
                "dct": [],
                "return": [
                    "None"
                ]
            },
            "check": {
                "dct": [],
                "return": [
                    "None"
                ]
            },
            "remove_default": {
                "dct": [],
                "return": [
                    "None"
                ]
            }
        },
        "DeprecatedStagesWarning": {
            "apply_default": {
                "dct": [],
                "return": [
                    "None"
                ]
            },
            "check": {
                "dct": [],
                "return": [
                    "None"
                ]
            },
            "remove_default": {
                "dct": [],
                "return": [
                    "None"
                ]
            }
        },
        "StagesMigration": {
            "apply_default": {
                "dct": [],
                "return": [
                    "None"
                ]
            }
        },
        "StagesMigrationNoDefault": {
            "apply_default": {
                "dct": [],
                "return": [
                    "None"
                ]
            },
            "check": {
                "dct": [],
                "return": [
                    "None"
                ]
            },
            "remove_default": {
                "dct": [],
                "return": [
                    "None"
                ]
            }
        },
        "NotAllowed": {
            "check": {
                "dct": [],
                "return": [
                    "None"
                ]
            }
        },
        "OptionalSensibleRegexAtHook": {
            "check": {
                "dct": [],
                "return": [
                    "None"
                ]
            }
        },
        "OptionalSensibleRegexAtTop": {
            "check": {
                "dct": [],
                "return": [
                    "None"
                ]
            }
        },
        "WarnMutableRev": {
            "check": {
                "dct": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.color": {
        "global": {
            "_enable": {
                "return": [
                    "None"
                ]
            },
            "add_color_option": {
                "parser": [],
                "return": [
                    "None"
                ]
            },
            "bool_errcheck": {
                "result": [],
                "func": [],
                "args": [],
                "return": []
            },
            "format_color": {
                "text": [],
                "color": [],
                "use_color_setting": [],
                "return": [
                    "typing.Text"
                ]
            },
            "global": {},
            "use_color": {
                "setting": [],
                "return": [
                    "bool"
                ]
            }
        }
    },
    "pre_commit.commands": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.commands.autoupdate": {
        "global": {
            "_check_hooks_still_exist_at_rev": {
                "repo_config": [],
                "info": [],
                "return": [
                    "None"
                ]
            },
            "_original_lines": {
                "path": [],
                "rev_infos": [],
                "retry": [
                    "bool"
                ],
                "return": [
                    "tuple[typing.Union[list[str],list[typing.Union[int,str]]]]"
                ]
            },
            "_update_one": {
                "i": [],
                "repo": [],
                "tags_only": [],
                "freeze": [],
                "return": [
                    "tuple"
                ]
            },
            "_write_new_config": {
                "path": [],
                "rev_infos": [],
                "return": [
                    "None"
                ]
            },
            "autoupdate": {
                "config_file": [],
                "tags_only": [],
                "freeze": [],
                "repos": [
                    "tuple"
                ],
                "jobs": [
                    "int"
                ],
                "return": [
                    "int"
                ]
            },
            "global": {}
        },
        "RevInfo": {
            "from_config": {
                "cls": [],
                "config": [],
                "return": []
            },
            "update": {
                "tags_only": [],
                "freeze": [],
                "return": []
            }
        }
    },
    "pre_commit.commands.clean": {
        "global": {
            "clean": {
                "store": [],
                "return": [
                    "int"
                ]
            },
            "global": {}
        }
    },
    "pre_commit.commands.gc": {
        "global": {
            "_gc_repos": {
                "store": [],
                "return": [
                    "int"
                ]
            },
            "_mark_used_repos": {
                "store": [],
                "all_repos": [],
                "unused_repos": [],
                "repo": [],
                "return": [
                    "None"
                ]
            },
            "gc": {
                "store": [],
                "return": [
                    "int"
                ]
            },
            "global": {}
        }
    },
    "pre_commit.commands.hook_impl": {
        "global": {
            "_check_args_length": {
                "hook_type": [],
                "args": [],
                "return": [
                    "None"
                ]
            },
            "_ns": {
                "hook_type": [],
                "color": [],
                "all_files": [
                    "bool"
                ],
                "remote_branch": [
                    "None"
                ],
                "local_branch": [
                    "None"
                ],
                "from_ref": [
                    "None"
                ],
                "to_ref": [
                    "None"
                ],
                "pre_rebase_upstream": [
                    "None"
                ],
                "pre_rebase_branch": [
                    "None"
                ],
                "remote_name": [
                    "None"
                ],
                "remote_url": [
                    "None"
                ],
                "commit_msg_filename": [
                    "None"
                ],
                "prepare_commit_message_source": [
                    "None"
                ],
                "commit_object_name": [
                    "None"
                ],
                "checkout_type": [
                    "None"
                ],
                "is_squash_merge": [
                    "None"
                ],
                "rewrite_command": [
                    "None"
                ],
                "return": []
            },
            "_pre_push_ns": {
                "color": [],
                "args": [],
                "stdin": [],
                "return": [
                    "None"
                ]
            },
            "_rev_exists": {
                "rev": [],
                "return": [
                    "bool"
                ]
            },
            "_run_legacy": {
                "hook_type": [],
                "hook_dir": [],
                "args": [],
                "return": [
                    "tuple[typing.Union[int,bytes]]",
                    "tuple[bytes]"
                ]
            },
            "_run_ns": {
                "hook_type": [],
                "color": [],
                "args": [],
                "stdin": [],
                "return": []
            },
            "_validate_config": {
                "retv": [],
                "config": [],
                "skip_on_missing_config": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "hook_impl": {
                "store": [],
                "config": [],
                "color": [],
                "hook_type": [],
                "hook_dir": [],
                "skip_on_missing_config": [],
                "args": [],
                "return": []
            }
        }
    },
    "pre_commit.commands.init_templatedir": {
        "global": {
            "global": {},
            "init_templatedir": {
                "config_file": [],
                "store": [],
                "directory": [],
                "hook_types": [],
                "skip_on_missing_config": [
                    "bool"
                ],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.commands.install_uninstall": {
        "global": {
            "_hook_paths": {
                "hook_type": [],
                "git_dir": [
                    "None"
                ],
                "return": [
                    "tuple[typing.Text]"
                ]
            },
            "_hook_types": {
                "cfg_filename": [],
                "hook_types": [],
                "return": [
                    "list[typing.Text]"
                ]
            },
            "_install_hook_script": {
                "config_file": [],
                "hook_type": [],
                "overwrite": [
                    "bool"
                ],
                "skip_on_missing_config": [
                    "bool"
                ],
                "git_dir": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_uninstall_hook_script": {
                "hook_type": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "install": {
                "config_file": [],
                "store": [],
                "hook_types": [],
                "overwrite": [
                    "bool"
                ],
                "hooks": [
                    "bool"
                ],
                "skip_on_missing_config": [
                    "bool"
                ],
                "git_dir": [
                    "None"
                ],
                "return": [
                    "int"
                ]
            },
            "install_hooks": {
                "config_file": [],
                "store": [],
                "return": [
                    "int"
                ]
            },
            "is_our_script": {
                "filename": [],
                "return": [
                    "bool"
                ]
            },
            "uninstall": {
                "config_file": [],
                "hook_types": [],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.commands.migrate_config": {
        "global": {
            "_fix_stage": {
                "n": [],
                "return": []
            },
            "_is_header_line": {
                "line": [],
                "return": [
                    "bool"
                ]
            },
            "_migrate_composed": {
                "contents": [],
                "return": [
                    "str"
                ]
            },
            "_migrate_map": {
                "contents": [],
                "return": [
                    "typing.Text"
                ]
            },
            "_preserve_style": {
                "n": [],
                "s": [],
                "return": [
                    "typing.Text"
                ]
            },
            "global": {},
            "migrate_config": {
                "config_file": [],
                "quiet": [
                    "bool"
                ],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.commands.run": {
        "Classifier": {
            "__init__": {
                "filenames": [],
                "return": [
                    "None"
                ]
            },
            "_types_for_file": {
                "filename": [],
                "return": []
            },
            "by_types": {
                "names": [],
                "types": [],
                "types_or": [],
                "exclude_types": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "filenames_for_hook": {
                "hook": [],
                "return": []
            },
            "from_config": {
                "cls": [],
                "filenames": [],
                "include": [],
                "exclude": [],
                "return": [
                    "Classifier"
                ]
            }
        },
        "global": {
            "_all_filenames": {
                "args": [],
                "return": [
                    "tuple"
                ]
            },
            "_compute_cols": {
                "hooks": [],
                "return": [
                    "int"
                ]
            },
            "_full_msg": {
                "start": [],
                "cols": [],
                "end_msg": [],
                "end_color": [],
                "use_color": [],
                "postfix": [
                    "typing.Text"
                ],
                "return": [
                    "typing.Text"
                ]
            },
            "_get_diff": {
                "return": []
            },
            "_get_skips": {
                "environ": [],
                "return": [
                    "set"
                ]
            },
            "_has_unmerged_paths": {
                "return": [
                    "bool"
                ]
            },
            "_has_unstaged_config": {
                "config_file": [],
                "return": [
                    "bool"
                ]
            },
            "_len_cjk": {
                "msg": [],
                "return": [
                    "int"
                ]
            },
            "_run_hooks": {
                "config": [],
                "hooks": [],
                "skips": [],
                "args": [],
                "return": [
                    "int"
                ]
            },
            "_run_single_hook": {
                "classifier": [],
                "hook": [],
                "skips": [],
                "cols": [],
                "diff_before": [],
                "verbose": [],
                "use_color": [],
                "return": [
                    "tuple[bool]"
                ]
            },
            "_start_msg": {
                "start": [],
                "cols": [],
                "end_len": [],
                "return": [
                    "typing.Text"
                ]
            },
            "_subtle_line": {
                "s": [],
                "use_color": [],
                "return": [
                    "None"
                ]
            },
            "filter_by_include_exclude": {
                "names": [],
                "include": [],
                "exclude": [],
                "return": [
                    "bool",
                    "typing.Generator"
                ]
            },
            "global": {},
            "run": {
                "config_file": [],
                "store": [],
                "args": [],
                "environ": [],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.commands.sample_config": {
        "global": {
            "global": {},
            "sample_config": {
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.commands.try_repo": {
        "global": {
            "_repo_ref": {
                "tmpdir": [],
                "repo": [],
                "ref": [],
                "return": [
                    "tuple"
                ]
            },
            "global": {},
            "try_repo": {
                "args": [],
                "return": []
            }
        }
    },
    "pre_commit.commands.validate_config": {
        "global": {
            "global": {},
            "validate_config": {
                "filenames": [],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.commands.validate_manifest": {
        "global": {
            "global": {},
            "validate_manifest": {
                "filenames": [],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.constants": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.envcontext": {
        "global": {
            "envcontext": {
                "patch": [],
                "_env": [
                    "None"
                ],
                "return": [
                    "typing.Generator"
                ]
            },
            "format_env": {
                "parts": [],
                "env": [],
                "return": [
                    "str"
                ]
            },
            "global": {}
        }
    },
    "pre_commit.error_handler": {
        "global": {
            "_log_and_exit": {
                "msg": [],
                "ret_code": [],
                "exc": [],
                "formatted": [],
                "return": [
                    "None"
                ]
            },
            "error_handler": {
                "return": [
                    "typing.Generator"
                ]
            },
            "global": {}
        }
    },
    "pre_commit.errors": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.file_lock": {
        "global": {
            "_locked": {
                "fileno": [],
                "blocked_cb": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "global": {},
            "lock": {
                "path": [],
                "blocked_cb": [],
                "return": [
                    "typing.Generator"
                ]
            }
        }
    },
    "pre_commit.git": {
        "global": {
            "check_for_cygwin_mismatch": {
                "return": [
                    "None"
                ]
            },
            "commit": {
                "repo": [
                    "typing.Text"
                ],
                "return": [
                    "None"
                ]
            },
            "get_all_files": {
                "return": []
            },
            "get_best_candidate_tag": {
                "rev": [],
                "git_repo": [],
                "return": []
            },
            "get_changed_files": {
                "old": [],
                "new": [],
                "return": []
            },
            "get_conflicted_files": {
                "return": [
                    "set",
                    "int"
                ]
            },
            "get_git_common_dir": {
                "git_root": [
                    "typing.Text"
                ],
                "return": []
            },
            "get_git_dir": {
                "git_root": [
                    "typing.Text"
                ],
                "return": []
            },
            "get_root": {
                "return": []
            },
            "get_staged_files": {
                "cwd": [
                    "None"
                ],
                "return": []
            },
            "git_path": {
                "name": [],
                "repo": [
                    "typing.Text"
                ],
                "return": []
            },
            "global": {},
            "has_core_hookpaths_set": {
                "return": [
                    "bool"
                ]
            },
            "has_diff": {
                "repo": [
                    "typing.Text"
                ],
                "args": [],
                "return": [
                    "bool"
                ]
            },
            "head_rev": {
                "remote": [],
                "return": []
            },
            "init_repo": {
                "path": [],
                "remote": [],
                "return": [
                    "None"
                ]
            },
            "intent_to_add_files": {
                "return": []
            },
            "is_in_merge_conflict": {
                "return": []
            },
            "no_git_env": {
                "_env": [
                    "None"
                ],
                "return": [
                    "dict"
                ]
            },
            "parse_merge_msg_for_conflicts": {
                "merge_msg": [],
                "return": [
                    "list"
                ]
            },
            "zsplit": {
                "s": [],
                "return": [
                    "list"
                ]
            }
        }
    },
    "pre_commit.hook": {
        "Hook": {
            "create": {
                "cls": [],
                "src": [],
                "prefix": [],
                "dct": [],
                "return": []
            },
            "install_key": {
                "return": [
                    "tuple[tuple]"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "pre_commit.lang_base": {
        "Language": {
            "ENVIRONMENT_DIR": {
                "return": [
                    "None"
                ]
            },
            "get_default_version": {
                "return": [
                    "None"
                ]
            },
            "health_check": {
                "prefix": [],
                "version": [],
                "return": [
                    "None"
                ]
            },
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "None"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            },
            "run_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "file_args": [],
                "is_local": [],
                "require_serial": [],
                "color": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_shuffled": {
                "seq": [],
                "return": [
                    "list"
                ]
            },
            "assert_no_additional_deps": {
                "lang": [],
                "additional_deps": [],
                "return": [
                    "None"
                ]
            },
            "assert_version_default": {
                "binary": [],
                "version": [],
                "return": [
                    "None"
                ]
            },
            "basic_get_default_version": {
                "return": []
            },
            "basic_health_check": {
                "prefix": [],
                "language_version": [],
                "return": [
                    "None"
                ]
            },
            "basic_run_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "file_args": [],
                "is_local": [],
                "require_serial": [],
                "color": [],
                "return": []
            },
            "environment_dir": {
                "prefix": [],
                "d": [],
                "language_version": [],
                "return": []
            },
            "exe_exists": {
                "exe": [],
                "return": [
                    "bool"
                ]
            },
            "global": {},
            "hook_cmd": {
                "entry": [],
                "args": [],
                "return": [
                    "tuple"
                ]
            },
            "no_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "no_install": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            },
            "run_xargs": {
                "cmd": [],
                "file_args": [],
                "require_serial": [],
                "color": [],
                "return": []
            },
            "setup_cmd": {
                "prefix": [],
                "cmd": [],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "target_concurrency": {
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.languages": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.languages.conda": {
        "global": {
            "_conda_exe": {
                "return": [
                    "typing.Text"
                ]
            },
            "get_env_patch": {
                "env": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var],tuple[tuple[tuple[tuple[Var]]]]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.coursier": {
        "global": {
            "_install": {
                "opts": [],
                "return": [
                    "None"
                ]
            },
            "get_env_patch": {
                "target_dir": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.docker": {
        "global": {
            "_get_container_id": {
                "return": []
            },
            "_get_docker_path": {
                "path": [],
                "return": []
            },
            "_is_in_docker": {
                "return": [
                    "bool"
                ]
            },
            "build_docker_image": {
                "prefix": [],
                "pull": [],
                "return": [
                    "None"
                ]
            },
            "docker_cmd": {
                "color": [],
                "return": [
                    "tuple[typing.Text]"
                ]
            },
            "docker_tag": {
                "prefix": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_docker_tty": {
                "color": [],
                "return": [
                    "tuple[typing.Text]"
                ]
            },
            "get_docker_user": {
                "return": [
                    "tuple[typing.Text]",
                    "tuple"
                ]
            },
            "global": {},
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            },
            "md5": {
                "s": [],
                "return": []
            },
            "run_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "file_args": [],
                "is_local": [],
                "require_serial": [],
                "color": [],
                "return": []
            }
        }
    },
    "pre_commit.languages.docker_image": {
        "global": {
            "global": {},
            "run_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "file_args": [],
                "is_local": [],
                "require_serial": [],
                "color": [],
                "return": []
            }
        }
    },
    "pre_commit.languages.dotnet": {
        "global": {
            "_nuget_config_no_sources": {
                "return": [
                    "typing.Generator"
                ]
            },
            "get_env_patch": {
                "venv": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.fail": {
        "global": {
            "global": {},
            "run_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "file_args": [],
                "is_local": [],
                "require_serial": [],
                "color": [],
                "return": [
                    "tuple[typing.Union[int,bytes]]"
                ]
            }
        }
    },
    "pre_commit.languages.haskell": {
        "global": {
            "get_env_patch": {
                "target_dir": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.julia": {
        "global": {
            "get_env_patch": {
                "target_dir": [],
                "version": [],
                "return": [
                    "tuple[tuple[typing.Text]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            },
            "run_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "file_args": [],
                "is_local": [],
                "require_serial": [],
                "color": [],
                "return": []
            }
        }
    },
    "pre_commit.languages.lua": {
        "global": {
            "_get_lua_version": {
                "return": []
            },
            "get_env_patch": {
                "d": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.node": {
        "global": {
            "get_default_version": {
                "return": [
                    "typing.Text"
                ]
            },
            "get_env_patch": {
                "venv": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "health_check": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Text",
                    "None"
                ]
            },
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.perl": {
        "global": {
            "get_env_patch": {
                "venv": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.python": {
        "global": {
            "_find_by_py_launcher": {
                "version": [],
                "return": [
                    "None"
                ]
            },
            "_find_by_sys_executable": {
                "return": [
                    "None"
                ]
            },
            "_impl_exe_name": {
                "return": [
                    "typing.Text"
                ]
            },
            "_norm": {
                "path": [],
                "return": [
                    "None"
                ]
            },
            "_read_pyvenv_cfg": {
                "filename": [],
                "return": [
                    "dict[str, str]"
                ]
            },
            "_sys_executable_matches": {
                "version": [],
                "return": [
                    "bool"
                ]
            },
            "_version_info": {
                "exe": [],
                "return": [
                    "typing.Text"
                ]
            },
            "bin_dir": {
                "venv": [],
                "return": []
            },
            "get_default_version": {
                "return": [
                    "typing.Text"
                ]
            },
            "get_env_patch": {
                "venv": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "health_check": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Text",
                    "None"
                ]
            },
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            },
            "norm_version": {
                "version": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.r": {
        "global": {
            "_cmd_from_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "is_local": [],
                "return": [
                    "tuple[tuple[typing.Text]]"
                ]
            },
            "_entry_validate": {
                "entry": [],
                "return": [
                    "None"
                ]
            },
            "_execute_r": {
                "code": [],
                "prefix": [],
                "version": [],
                "args": [
                    "tuple"
                ],
                "cwd": [],
                "cli_opts": [],
                "return": []
            },
            "_execute_r_in_renv": {
                "code": [],
                "prefix": [],
                "version": [],
                "args": [
                    "tuple"
                ],
                "cwd": [],
                "return": []
            },
            "_execute_vanilla_r": {
                "code": [],
                "prefix": [],
                "version": [],
                "args": [
                    "tuple"
                ],
                "cwd": [],
                "return": []
            },
            "_inline_r_setup": {
                "code": [],
                "return": [
                    "str"
                ]
            },
            "_prefix_if_file_entry": {
                "entry": [],
                "prefix": [],
                "is_local": [],
                "return": [
                    "tuple"
                ]
            },
            "_r_code_in_tempfile": {
                "code": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "_read_executable_version": {
                "envdir": [],
                "prefix": [],
                "version": [],
                "return": []
            },
            "_read_installed_version": {
                "envdir": [],
                "prefix": [],
                "version": [],
                "return": []
            },
            "_rscript_exec": {
                "return": [
                    "typing.Text"
                ]
            },
            "_write_current_r_version": {
                "envdir": [],
                "prefix": [],
                "version": [],
                "return": [
                    "None"
                ]
            },
            "get_env_patch": {
                "venv": [],
                "return": [
                    "tuple[tuple[typing.Text]]"
                ]
            },
            "global": {},
            "health_check": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Text",
                    "None"
                ]
            },
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            },
            "run_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "file_args": [],
                "is_local": [],
                "require_serial": [],
                "color": [],
                "return": []
            }
        }
    },
    "pre_commit.languages.ruby": {
        "global": {
            "_extract_resource": {
                "filename": [],
                "dest": [],
                "return": [
                    "None"
                ]
            },
            "_install_rbenv": {
                "prefix": [],
                "version": [],
                "return": [
                    "None"
                ]
            },
            "_install_ruby": {
                "prefix": [],
                "version": [],
                "return": [
                    "None"
                ]
            },
            "_resource_bytesio": {
                "filename": [],
                "return": []
            },
            "get_default_version": {
                "return": [
                    "typing.Text"
                ]
            },
            "get_env_patch": {
                "venv": [],
                "language_version": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.rust": {
        "global": {
            "_add_dependencies": {
                "prefix": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            },
            "_rust_toolchain": {
                "language_version": [],
                "return": [
                    "typing.Text"
                ]
            },
            "get_default_version": {
                "return": [
                    "typing.Text"
                ]
            },
            "get_env_patch": {
                "target_dir": [],
                "version": [],
                "return": [
                    "tuple[typing.Union[tuple[typing.Union[typing.Text,tuple[Var]]],tuple[tuple[typing.Text]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            },
            "install_rust_with_toolchain": {
                "toolchain": [],
                "envdir": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.script": {
        "global": {
            "global": {},
            "run_hook": {
                "prefix": [],
                "entry": [],
                "args": [],
                "file_args": [],
                "is_local": [],
                "require_serial": [],
                "color": [],
                "return": []
            }
        }
    },
    "pre_commit.languages.swift": {
        "global": {
            "get_env_patch": {
                "venv": [],
                "return": [
                    "tuple[tuple[typing.Union[typing.Text,tuple[Var]]]]"
                ]
            },
            "global": {},
            "in_env": {
                "prefix": [],
                "version": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "install_environment": {
                "prefix": [],
                "version": [],
                "additional_dependencies": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.languages.system": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.logging_handler": {
        "LoggingHandler": {
            "__init__": {
                "use_color": [],
                "return": [
                    "None"
                ]
            },
            "emit": {
                "record": [],
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "global": {},
            "logging_handler": {
                "use_color": [],
                "return": [
                    "typing.Generator"
                ]
            }
        }
    },
    "pre_commit.main": {
        "global": {
            "_add_cmd": {
                "name": [],
                "help": [],
                "return": []
            },
            "_add_config_option": {
                "parser": [],
                "return": [
                    "None"
                ]
            },
            "_add_hook_type_option": {
                "parser": [],
                "return": [
                    "None"
                ]
            },
            "_add_run_options": {
                "parser": [],
                "return": [
                    "None"
                ]
            },
            "_adjust_args_and_chdir": {
                "args": [],
                "return": [
                    "None"
                ]
            },
            "global": {},
            "main": {
                "argv": [
                    "None"
                ],
                "return": []
            }
        }
    },
    "pre_commit.meta_hooks": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.meta_hooks.check_hooks_apply": {
        "global": {
            "check_all_hooks_match_files": {
                "config_file": [],
                "return": [
                    "int"
                ]
            },
            "global": {},
            "main": {
                "argv": [
                    "None"
                ],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.meta_hooks.check_useless_excludes": {
        "global": {
            "check_useless_excludes": {
                "config_file": [],
                "return": [
                    "int"
                ]
            },
            "exclude_matches_any": {
                "filenames": [],
                "include": [],
                "exclude": [],
                "return": [
                    "bool"
                ]
            },
            "global": {},
            "main": {
                "argv": [
                    "None"
                ],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.meta_hooks.identity": {
        "global": {
            "global": {},
            "main": {
                "argv": [
                    "None"
                ],
                "return": [
                    "int"
                ]
            }
        }
    },
    "pre_commit.output": {
        "global": {
            "global": {},
            "write": {
                "s": [],
                "stream": [],
                "return": [
                    "None"
                ]
            },
            "write_line": {
                "s": [
                    "None"
                ],
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "write_line_b": {
                "s": [
                    "None"
                ],
                "stream": [],
                "logfile_name": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.prefix": {
        "Prefix": {
            "exists": {
                "parts": [],
                "return": []
            },
            "path": {
                "parts": [],
                "return": []
            },
            "star": {
                "end": [],
                "return": [
                    "tuple"
                ]
            }
        },
        "global": {
            "global": {}
        }
    },
    "pre_commit.repository": {
        "global": {
            "_cloned_repository_hooks": {
                "repo_config": [],
                "store": [],
                "root_config": [],
                "return": [
                    "tuple"
                ]
            },
            "_hook": {
                "root_config": [],
                "hook_dicts": [],
                "return": []
            },
            "_hook_install": {
                "hook": [],
                "return": [
                    "None"
                ]
            },
            "_hook_installed": {
                "hook": [],
                "return": [
                    "bool"
                ]
            },
            "_need_installed": {
                "return": [
                    "list"
                ]
            },
            "_non_cloned_repository_hooks": {
                "repo_config": [],
                "store": [],
                "root_config": [],
                "return": [
                    "tuple"
                ]
            },
            "_prefix": {
                "language_name": [],
                "deps": [],
                "return": [
                    "Prefix"
                ]
            },
            "_read_state": {
                "venv": [],
                "return": [
                    "None"
                ]
            },
            "_repository_hooks": {
                "repo_config": [],
                "store": [],
                "root_config": [],
                "return": []
            },
            "_state": {
                "additional_deps": [],
                "return": [
                    "dict[typing.Text, ]"
                ]
            },
            "_state_filename_v1": {
                "venv": [],
                "return": []
            },
            "_state_filename_v2": {
                "venv": [],
                "return": []
            },
            "all_hooks": {
                "root_config": [],
                "store": [],
                "return": [
                    "tuple"
                ]
            },
            "global": {},
            "install_hook_envs": {
                "hooks": [],
                "store": [],
                "return": [
                    "None"
                ]
            }
        }
    },
    "pre_commit.resources": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.resources.empty_template_setup": {
        "global": {
            "global": {}
        }
    },
    "pre_commit.staged_files_only": {
        "global": {
            "_git_apply": {
                "patch": [],
                "return": [
                    "None"
                ]
            },
            "_intent_to_add_cleared": {
                "return": [
                    "typing.Generator"
                ]
            },
            "_unstaged_changes_cleared": {
                "patch_dir": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "global": {},
            "staged_files_only": {
                "patch_dir": [],
                "return": [
                    "typing.Generator"
                ]
            }
        }
    },
    "pre_commit.store": {
        "Store": {
            "__init__": {
                "directory": [
                    "None"
                ],
                "return": [
                    "None"
                ]
            },
            "_complete_clone": {
                "ref": [],
                "git_cmd": [],
                "return": [
                    "None"
                ]
            },
            "_create_config_table": {
                "db": [],
                "return": [
                    "None"
                ]
            },
            "_get_result": {
                "return": [
                    "None"
                ]
            },
            "_git_cmd": {
                "args": [],
                "return": [
                    "None"
                ]
            },
            "_new_repo": {
                "repo": [],
                "ref": [],
                "deps": [],
                "make_strategy": [],
                "return": []
            },
            "_shallow_clone": {
                "ref": [],
                "git_cmd": [],
                "return": [
                    "None"
                ]
            },
            "blocked_cb": {
                "return": [
                    "None"
                ]
            },
            "clone": {
                "repo": [],
                "ref": [],
                "deps": [
                    "tuple"
                ],
                "return": []
            },
            "clone_strategy": {
                "directory": [],
                "return": [
                    "None"
                ]
            },
            "connect": {
                "db_path": [
                    "None"
                ],
                "return": [
                    "typing.Generator"
                ]
            },
            "db_repo_name": {
                "cls": [],
                "repo": [],
                "deps": [],
                "return": [
                    "typing.Text"
                ]
            },
            "delete_configs": {
                "configs": [],
                "return": [
                    "None"
                ]
            },
            "delete_repo": {
                "db_repo_name": [],
                "ref": [],
                "path": [],
                "return": [
                    "None"
                ]
            },
            "exclusive_lock": {
                "return": [
                    "typing.Generator"
                ]
            },
            "make_local": {
                "deps": [],
                "return": []
            },
            "mark_config_used": {
                "path": [],
                "return": [
                    "None"
                ]
            },
            "select_all_configs": {
                "return": [
                    "list"
                ]
            },
            "select_all_repos": {
                "return": []
            }
        },
        "global": {
            "_get_default_directory": {
                "return": []
            },
            "_make_local_repo": {
                "directory": [],
                "return": [
                    "None"
                ]
            },
            "global": {}
        }
    },
    "pre_commit.util": {
        "CalledProcessError": {
            "__bytes__": {
                "return": [
                    "bytes"
                ]
            },
            "__init__": {
                "returncode": [],
                "cmd": [],
                "stdout": [],
                "stderr": [],
                "return": [
                    "None"
                ]
            },
            "__str__": {
                "return": []
            },
            "_indent_or_none": {
                "part": [],
                "return": [
                    "bytes"
                ]
            }
        },
        "Pty": {
            "__enter__": {
                "return": [
                    "Pty"
                ]
            },
            "__exit__": {
                "exc_type": [],
                "exc_value": [],
                "traceback": [],
                "return": [
                    "None"
                ]
            },
            "__init__": {
                "return": [
                    "None"
                ]
            },
            "close_r": {
                "return": [
                    "None"
                ]
            },
            "close_w": {
                "return": [
                    "None"
                ]
            }
        },
        "global": {
            "_handle_readonly": {
                "func": [],
                "path": [],
                "exc": [],
                "return": [
                    "None"
                ]
            },
            "_handle_readonly_old": {
                "func": [],
                "path": [],
                "excinfo": [],
                "return": []
            },
            "_oserror_to_output": {
                "e": [],
                "return": [
                    "tuple[typing.Optional[int]]"
                ]
            },
            "_setdefault_kwargs": {
                "kwargs": [],
                "return": [
                    "None"
                ]
            },
            "clean_path_on_failure": {
                "path": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "cmd_output": {
                "kwargs": [],
                "cmd": [],
                "return": [
                    "tuple[None]"
                ]
            },
            "cmd_output_b": {
                "check": [
                    "bool"
                ],
                "kwargs": [],
                "cmd": [],
                "return": [
                    "tuple"
                ]
            },
            "cmd_output_p": {
                "check": [
                    "bool"
                ],
                "kwargs": [],
                "cmd": [],
                "return": [
                    "tuple[typing.Optional[bytes]]"
                ]
            },
            "force_bytes": {
                "exc": [],
                "return": [
                    "bytes"
                ]
            },
            "global": {},
            "make_executable": {
                "filename": [],
                "return": [
                    "None"
                ]
            },
            "resource_text": {
                "filename": [],
                "return": []
            },
            "rmtree": {
                "path": [],
                "return": [
                    "None"
                ]
            },
            "win_exe": {
                "s": [],
                "return": [
                    "typing.Text"
                ]
            }
        }
    },
    "pre_commit.xargs": {
        "global": {
            "_command_length": {
                "cmd": [],
                "return": [
                    "int"
                ]
            },
            "_environ_size": {
                "_env": [
                    "None"
                ],
                "return": [
                    "int"
                ]
            },
            "_get_platform_max_length": {
                "return": [
                    "int"
                ]
            },
            "_thread_mapper": {
                "maxsize": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "cpu_count": {
                "return": [
                    "int"
                ]
            },
            "global": {},
            "partition": {
                "cmd": [],
                "varargs": [],
                "target_concurrency": [],
                "_max_length": [
                    "None"
                ],
                "return": [
                    "tuple[tuple]"
                ]
            },
            "run_cmd_partition": {
                "run_cmd": [],
                "return": []
            },
            "xargs": {
                "cmd": [],
                "varargs": [],
                "color": [
                    "bool"
                ],
                "target_concurrency": [
                    "int"
                ],
                "_max_length": [],
                "kwargs": [],
                "return": [
                    "tuple[typing.Union[int,bytes]]"
                ]
            }
        }
    },
    "pre_commit.yaml": {
        "global": {
            "global": {},
            "yaml_dump": {
                "o": [],
                "kwargs": [],
                "return": []
            }
        }
    },
    "pre_commit.yaml_rewrite": {
        "global": {
            "_match": {
                "gen": [],
                "m": [],
                "return": [
                    "typing.Generator"
                ]
            },
            "global": {},
            "match": {
                "n": [],
                "matcher": [],
                "return": [
                    "typing.Generator"
                ]
            }
        },
        "MappingKey": {
            "match": {
                "n": [],
                "return": [
                    "typing.Generator"
                ]
            }
        },
        "MappingValue": {
            "match": {
                "n": [],
                "return": [
                    "typing.Generator"
                ]
            }
        },
        "SequenceItem": {
            "match": {
                "n": [],
                "return": [
                    "typing.Generator"
                ]
            }
        },
        "_Matcher": {
            "match": {
                "n": [],
                "return": [
                    "None"
                ]
            }
        }
    }
}