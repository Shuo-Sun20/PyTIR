{
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/__init__.py": {
        "_catch_valueerror@global": [
            {
                "category": "arg",
                "name": "unraisable",
                "type": []
            },
            {
                "category": "return",
                "name": "_catch_valueerror",
                "type": [
                    "None"
                ]
            }
        ],
        "_run_pylint_config@global": [
            {
                "category": "arg",
                "name": "argv",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "argv",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_run_pylint_config",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "modify_sys_path@global": [
            {
                "category": "return",
                "name": "modify_sys_path",
                "type": [
                    "None"
                ]
            }
        ],
        "run_pylint@global": [
            {
                "category": "arg",
                "name": "argv",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "argv",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "run_pylint",
                "type": [
                    "None"
                ]
            }
        ],
        "run_pyreverse@global": [
            {
                "category": "arg",
                "name": "argv",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "argv",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "run_pyreverse",
                "type": [
                    "None"
                ]
            }
        ],
        "run_symilar@global": [
            {
                "category": "arg",
                "name": "argv",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "argv",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "run_symilar",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/__main__.py": {
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/__pkginfo__.py": {
        "get_numversion_from_version@global": [
            {
                "category": "arg",
                "name": "v",
                "type": []
            },
            {
                "category": "local",
                "name": "result_version",
                "type": [
                    "list",
                    "list[int]"
                ]
            },
            {
                "category": "local",
                "name": "current_number",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "get_numversion_from_version",
                "type": [
                    "tuple"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "__version__",
                "type": [
                    "typing.Text"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "initialize@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "initialize",
                "type": [
                    "None"
                ]
            }
        ],
        "table_lines_from_stats@global": [
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "old_stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "stat_type",
                "type": []
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list",
                    "list[str]"
                ]
            },
            {
                "category": "local",
                "name": "new",
                "type": [
                    "list[tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "old",
                "type": [
                    "list[tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "index",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "new_value",
                "type": [
                    "typing.Text",
                    "float"
                ]
            },
            {
                "category": "local",
                "name": "old_value",
                "type": [
                    "typing.Text",
                    "float"
                ]
            },
            {
                "category": "local",
                "name": "diff_str",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "new_str",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "old_str",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "table_lines_from_stats",
                "type": [
                    "list[str]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/async.py": {
        "global@global": [],
        "open@AsyncChecker": [
            {
                "category": "local",
                "name": "_async_generators",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_asyncfunctiondef@AsyncChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_asyncfunctiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_asyncwith@AsyncChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_AsyncFunctionDef",
                    "astroid_@_bases_@_AsyncGenerator",
                    "astroid_@_Instance"
                ]
            },
            {
                "category": "return",
                "name": "visit_asyncwith",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/bad_chained_comparison.py": {
        "_has_diff_semantic_groups@BadChainedComparisonChecker": [
            {
                "category": "arg",
                "name": "operators",
                "type": []
            },
            {
                "category": "local",
                "name": "semantic_group",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "COMPARISON_OP",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "IDENTITY_OP",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "MEMBERSHIP_OP",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "group",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_has_diff_semantic_groups",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "COMPARISON_OP",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "IDENTITY_OP",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "MEMBERSHIP_OP",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_compare@BadChainedComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "operators",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "num_parts",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "incompatibles",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "visit_compare",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base/basic_error_checker.py": {
        "_check_else_on_loop@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_else_on_loop",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_in_loop@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "node_name",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_in_loop",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_inferred_class_is_abstract@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_inferred_class_is_abstract",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "klass",
                "type": [
                    "inferred"
                ]
            },
            {
                "category": "local",
                "name": "metaclass",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ABC_METACLASSES",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "_check_name_used_prior_global@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "scope_globals",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "_check_name_used_prior_global",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_nonlocal_and_global@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "nonlocals",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "_check_nonlocal_and_global",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "global_vars",
                "type": [
                    "set"
                ]
            }
        ],
        "_check_nonlocal_without_binding@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_nonlocal_without_binding",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_redefinition@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "redeftype",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_If"
                ]
            },
            {
                "category": "local",
                "name": "redefinitions",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "REDEFINABLE_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_check_redefinition",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "redefinition_index",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_FORWARD_REF_QNAME",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_yield_outside_func@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_yield_outside_func",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_break_loop_node@global": [
            {
                "category": "arg",
                "name": "break_node",
                "type": []
            },
            {
                "category": "local",
                "name": "loop_nodes",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "parent",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_get_break_loop_node",
                "type": [
                    "None"
                ]
            }
        ],
        "_has_abstract_methods@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_has_abstract_methods",
                "type": [
                    "bool"
                ]
            }
        ],
        "_loop_exits_early@global": [
            {
                "category": "arg",
                "name": "loop",
                "type": []
            },
            {
                "category": "local",
                "name": "loop_nodes",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "definition_nodes",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "inner_loop_nodes",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_loop_exits_early",
                "type": [
                    "bool"
                ]
            }
        ],
        "_too_many_starred_for_tuple@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "assign_tuple",
                "type": []
            },
            {
                "category": "local",
                "name": "starred_count",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "elem",
                "type": [
                    "nodes_@_Tuple",
                    "nodes_@_Starred"
                ]
            },
            {
                "category": "return",
                "name": "_too_many_starred_for_tuple",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "ABC_METACLASSES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "REDEFINABLE_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_FORWARD_REF_QNAME",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "open@BasicErrorChecker": [
            {
                "category": "local",
                "name": "_py38_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "redefined_by_decorator@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "redefined_by_decorator",
                "type": [
                    "bool"
                ]
            }
        ],
        "same_scope@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "current",
                "type": []
            },
            {
                "category": "return",
                "name": "same_scope",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit_assign@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assign",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_break@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_break",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_classdef@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_continue@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_continue",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_for@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_for",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "values",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "arg_clusters",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_nonlocal@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_nonlocal",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_return@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_return",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_starred@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Call"
                ]
            },
            {
                "category": "return",
                "name": "visit_starred",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_unaryop@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_unaryop",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_while@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_while",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_yield@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_yield",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_yieldfrom@BasicErrorChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_yieldfrom",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base/comparison_checker.py": {
        "_check_callable_comparison@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "COMPARISON_OPERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_check_callable_comparison",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "bare_callables",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "number_of_bare_callables",
                "type": [
                    "int"
                ]
            }
        ],
        "_check_constants_comparison@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_constants_comparison",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_literal_comparison@ComparisonChecker": [
            {
                "category": "arg",
                "name": "literal",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "literal",
                "type": [
                    "nodes_@_Const"
                ]
            },
            {
                "category": "local",
                "name": "is_other_literal",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "is_const",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_check_literal_comparison",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "equal_or_not_equal",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "is_or_is_not",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_logical_tautology@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_logical_tautology",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_nan_comparison@ComparisonChecker": [
            {
                "category": "arg",
                "name": "left_value",
                "type": []
            },
            {
                "category": "arg",
                "name": "right_value",
                "type": []
            },
            {
                "category": "arg",
                "name": "root_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "checking_for_absence",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_check_nan_comparison",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "absence_text",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "checking_for_absence",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_singleton_comparison@ComparisonChecker": [
            {
                "category": "arg",
                "name": "left_value",
                "type": []
            },
            {
                "category": "arg",
                "name": "right_value",
                "type": []
            },
            {
                "category": "arg",
                "name": "root_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "checking_for_absence",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_check_singleton_comparison",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "singleton_comparison_example",
                "type": [
                    "dict[bool, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "suggestion_template",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "truthiness_example",
                "type": [
                    "dict[bool, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "truthiness_phrase",
                "type": [
                    "dict[bool, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "checking_for_absence",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "checking_truthiness",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "str"
                ]
            }
        ],
        "_check_type_x_is_y@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "left",
                "type": []
            },
            {
                "category": "arg",
                "name": "right",
                "type": []
            },
            {
                "category": "local",
                "name": "TYPE_QNAME",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_type_x_is_y",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "LITERAL_NODE_TYPES",
                "type": [
                    "tuple"
                ]
            }
        ],
        "_check_unidiomatic_typecheck@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "TYPECHECK_COMPARISON_OPERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_check_unidiomatic_typecheck",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_float_nan@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_float_nan",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_nan@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_nan",
                "type": []
            }
        ],
        "_is_numpy_nan@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Name"
                ]
            },
            {
                "category": "return",
                "name": "_is_numpy_nan",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_one_arg_pos_call@global": [
            {
                "category": "arg",
                "name": "call",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_one_arg_pos_call",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "LITERAL_NODE_TYPES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "COMPARISON_OPERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "TYPECHECK_COMPARISON_OPERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "TYPE_QNAME",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "visit_compare@ComparisonChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_compare",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base/docstring_checker.py": {
        "_check_docstring@DocStringChecker": [
            {
                "category": "arg",
                "name": "node_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "report_missing",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": []
            },
            {
                "category": "local",
                "name": "docstring",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "report_missing",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_check_docstring",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "message",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_infer_dunder_doc_attribute@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_infer_dunder_doc_attribute",
                "type": [
                    "None",
                    "str"
                ]
            }
        ],
        "global@global": [],
        "open@DocStringChecker": [
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_classdef@DocStringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@DocStringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ftype",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "overridden",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit_module@DocStringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base/name_checker/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base/name_checker/checker.py": {
        "__init__@NameChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_name_group",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_bad_names",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_name_regexps",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_name_hints",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_good_names_rgxs_compiled",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_bad_names_rgxs_compiled",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_assigns_typealias@NameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_ClassDef",
                    "nodes_@_FunctionDef"
                ]
            },
            {
                "category": "return",
                "name": "_assigns_typealias",
                "type": [
                    "bool"
                ]
            }
        ],
        "_assigns_typevar@NameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "astroid_@_Call"
                ]
            },
            {
                "category": "local",
                "name": "TYPE_VAR_QNAME",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_assigns_typevar",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_name@NameChecker": [
            {
                "category": "arg",
                "name": "node_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": []
            },
            {
                "category": "arg",
                "name": "disallowed_check_only",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_check_name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "bad_name_group",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "warnings",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "disallowed_check_only",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_typevar@NameChecker": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Assign",
                    "nodes_@_Tuple"
                ]
            },
            {
                "category": "local",
                "name": "keywords",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "name_arg",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "suggest_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_typevar",
                "type": [
                    "None"
                ]
            }
        ],
        "_create_naming_rules@NameChecker": [
            {
                "category": "local",
                "name": "regexps",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "hints",
                "type": [
                    "dict",
                    "dict[, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "naming_style_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_PATTERNS",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "local",
                "name": "custom_regex_setting_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "custom_regex",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_create_naming_rules",
                "type": [
                    "tuple[dict[, typing.Text]]"
                ]
            }
        ],
        "_determine_function_name_type@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "config",
                "type": []
            },
            {
                "category": "return",
                "name": "_determine_function_name_type",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "decorators",
                "type": [
                    "list"
                ]
            }
        ],
        "_find_name_group@NameChecker": [
            {
                "category": "arg",
                "name": "node_type",
                "type": []
            },
            {
                "category": "return",
                "name": "_find_name_group",
                "type": []
            }
        ],
        "_get_properties@global": [
            {
                "category": "arg",
                "name": "config",
                "type": []
            },
            {
                "category": "local",
                "name": "BUILTIN_PROPERTY",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "property_classes",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "property_names",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "config",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_get_properties",
                "type": [
                    "tuple[set[typing.Text]]"
                ]
            }
        ],
        "_is_multi_naming_match@global": [
            {
                "category": "arg",
                "name": "match",
                "type": []
            },
            {
                "category": "arg",
                "name": "node_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": []
            },
            {
                "category": "local",
                "name": "EXEMPT_NAME_CATEGORIES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_is_multi_naming_match",
                "type": [
                    "bool"
                ]
            }
        ],
        "_name_allowed_by_regex@NameChecker": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "_name_allowed_by_regex",
                "type": [
                    "bool"
                ]
            }
        ],
        "_name_disallowed_by_regex@NameChecker": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "_name_disallowed_by_regex",
                "type": [
                    "bool"
                ]
            }
        ],
        "_raise_name_warning@NameChecker": [
            {
                "category": "arg",
                "name": "prevalent_group",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "node_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": []
            },
            {
                "category": "arg",
                "name": "warning",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "hint",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "warning",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_raise_name_warning",
                "type": [
                    "None"
                ]
            }
        ],
        "_recursive_check_names@NameChecker": [
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "return",
                "name": "_recursive_check_names",
                "type": [
                    "None"
                ]
            }
        ],
        "_redefines_import@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_redefines_import",
                "type": [
                    "bool"
                ]
            }
        ],
        "_should_exempt_from_invalid_name@NameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "return",
                "name": "_should_exempt_from_invalid_name",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "DEFAULT_PATTERNS",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "local",
                "name": "BUILTIN_PROPERTY",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TYPE_VAR_QNAME",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "EXEMPT_NAME_CATEGORIES",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "leave_module@NameChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "local",
                "name": "min_warnings",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "by_line",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "leave_module",
                "type": [
                    "None"
                ]
            }
        ],
        "open@NameChecker": [
            {
                "category": "local",
                "name": "_good_names_rgxs_compiled",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_bad_names_rgxs_compiled",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assignname@NameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "frame",
                "type": [
                    "nodes_@_Module",
                    "nodes_@_FunctionDef"
                ]
            },
            {
                "category": "local",
                "name": "assign_type",
                "type": [
                    "nodes_@_Comprehension",
                    "nodes_@_TypeVar",
                    "nodes_@_TypeAlias",
                    "nodes_@_Assign"
                ]
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Assign"
                ]
            },
            {
                "category": "return",
                "name": "visit_assignname",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_classdef@NameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@NameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@NameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "_bad_names",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base/name_checker/naming_style.py": {
        "_create_naming_options@global": [
            {
                "category": "local",
                "name": "name_options",
                "type": [
                    "list",
                    "list[tuple[typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,list[list[typing.Text]]]]]]]"
                ]
            },
            {
                "category": "local",
                "name": "name_type",
                "type": [
                    "typing.Text",
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "KNOWN_NAME_TYPES",
                "type": [
                    "set[typing.Union[set[typing.Text],typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "name_type_hyphened",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "help_msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "KNOWN_NAME_TYPES_WITH_STYLE",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_NAMING_STYLES",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "default_style",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "NAMING_STYLES",
                "type": [
                    "dict[typing.Text, typing.Union[SnakeCaseStyle,CamelCaseStyle,PascalCaseStyle,UpperCaseStyle,AnyStyle]]"
                ]
            },
            {
                "category": "return",
                "name": "_create_naming_options",
                "type": [
                    "tuple"
                ]
            }
        ],
        "get_regex@NamingStyle": [
            {
                "category": "arg",
                "name": "cls",
                "type": []
            },
            {
                "category": "arg",
                "name": "name_type",
                "type": []
            },
            {
                "category": "return",
                "name": "get_regex",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "NAMING_STYLES",
                "type": [
                    "dict[typing.Text, typing.Union[SnakeCaseStyle,CamelCaseStyle,PascalCaseStyle,UpperCaseStyle,AnyStyle]]"
                ]
            },
            {
                "category": "local",
                "name": "KNOWN_NAME_TYPES_WITH_STYLE",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_NAMING_STYLES",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "KNOWN_NAME_TYPES",
                "type": [
                    "set[typing.Union[set[typing.Text],typing.Text]]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base/pass_checker.py": {
        "global@global": [],
        "visit_pass@PassChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_pass",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/base_checker.py": {
        "__eq__@BaseChecker": [
            {
                "category": "arg",
                "name": "other",
                "type": []
            },
            {
                "category": "return",
                "name": "__eq__",
                "type": [
                    "bool"
                ]
            }
        ],
        "__gt__@BaseChecker": [
            {
                "category": "arg",
                "name": "other",
                "type": []
            },
            {
                "category": "return",
                "name": "__gt__",
                "type": [
                    "bool"
                ]
            }
        ],
        "__hash__@BaseChecker": [
            {
                "category": "return",
                "name": "__hash__",
                "type": [
                    "int"
                ]
            }
        ],
        "__init__@BaseChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__repr__@BaseChecker": [
            {
                "category": "local",
                "name": "status",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "msgs",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "__repr__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "__str__@BaseChecker": [
            {
                "category": "return",
                "name": "__str__",
                "type": []
            }
        ],
        "add_message@BaseChecker": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "end_lineno",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "end_col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "end_lineno",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "end_col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "add_message",
                "type": [
                    "None"
                ]
            }
        ],
        "check_consistency@BaseChecker": [
            {
                "category": "local",
                "name": "checker_id",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "existing_ids",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "error_msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "check_consistency",
                "type": [
                    "None"
                ]
            }
        ],
        "close@BaseChecker": [
            {
                "category": "return",
                "name": "close",
                "type": [
                    "None"
                ]
            }
        ],
        "create_message_definition_from_tuple@BaseChecker": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg_tuple",
                "type": []
            },
            {
                "category": "local",
                "name": "options",
                "type": [
                    "dict",
                    "ExtraMessageOptions"
                ]
            },
            {
                "category": "local",
                "name": "error_msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "create_message_definition_from_tuple",
                "type": [
                    "MessageDefinition"
                ]
            }
        ],
        "get_full_documentation@BaseChecker": [
            {
                "category": "arg",
                "name": "msgs",
                "type": []
            },
            {
                "category": "arg",
                "name": "options",
                "type": []
            },
            {
                "category": "arg",
                "name": "reports",
                "type": []
            },
            {
                "category": "arg",
                "name": "doc",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "show_options",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "checker_title",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "doc",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "options_list",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "show_options",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "get_full_documentation",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_map_data@BaseChecker": [
            {
                "category": "return",
                "name": "get_map_data",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "messages@BaseChecker": [
            {
                "category": "return",
                "name": "messages",
                "type": [
                    "list"
                ]
            }
        ],
        "open@BaseChecker": [
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "process_module@BaseRawFileChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "process_module",
                "type": [
                    "None"
                ]
            }
        ],
        "process_tokens@BaseTokenChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            }
        ],
        "reduce_map_data@BaseChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "data",
                "type": []
            },
            {
                "category": "return",
                "name": "reduce_map_data",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/classes/__init__.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/classes/special_methods_checker.py": {
        "__init__@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_protocol_map",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_bool@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_bool",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_bytes@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_bytes",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_format@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_format",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_getnewargs@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_getnewargs",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_getnewargs_ex@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_getnewargs_ex",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "found_error",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_hash@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_hash",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_index@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_index",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_iter@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_iter",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_len@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_len",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_length_hint@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_length_hint",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_repr@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_repr",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_str@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_str",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_unexpected_method_signature@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "expected_params",
                "type": [
                    "None",
                    "tuple",
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_unexpected_method_signature",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "mandatory",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "optional",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "current_params",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "emit",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "rest",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "verb",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_is_bool@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_bool",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_bytes@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_bytes",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_dict@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_dict",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_int@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_int",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_iterator@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "bases_@_Generator",
                    "nodes_@_ComprehensionScope",
                    "bases_@_Instance",
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "return",
                "name": "_is_iterator",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "NEXT_METHOD",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_is_str@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_str",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_tuple@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_tuple",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_wrapped_type@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_wrapped_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "_safe_infer_call_result@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "caller",
                "type": []
            },
            {
                "category": "arg",
                "name": "context",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "context",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_safe_infer_call_result",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "NEXT_METHOD",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "visit_functiondef@SpecialMethodsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/dataclass_checker.py": {
        "_check_invalid_field_call@DataclassChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_invalid_field_call",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "scope_node",
                "type": [
                    "nodes_@_Call"
                ]
            }
        ],
        "_check_invalid_field_call_within_call@DataclassChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope_node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_invalid_field_call_within_call",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_name_or_attrname_eq_to@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_with",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Name"
                ]
            },
            {
                "category": "return",
                "name": "_check_name_or_attrname_eq_to",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_dataclasses_module@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_dataclasses_module",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@DataclassChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/deprecated.py": {
        "check_deprecated_attribute@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "check_deprecated_attribute",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "attribute_qname",
                "type": [
                    "str"
                ]
            }
        ],
        "check_deprecated_class@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "mod_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "class_names",
                "type": []
            },
            {
                "category": "return",
                "name": "check_deprecated_class",
                "type": [
                    "None"
                ]
            }
        ],
        "check_deprecated_class_in_call@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "check_deprecated_class_in_call",
                "type": [
                    "None"
                ]
            }
        ],
        "check_deprecated_method@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "inferred",
                "type": []
            },
            {
                "category": "local",
                "name": "ACCEPTABLE_NODES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "check_deprecated_method",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Attribute",
                    "nodes_@_Name"
                ]
            },
            {
                "category": "local",
                "name": "qnames",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "num_of_args",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "kwargs",
                "type": [
                    "set",
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "deprecated_arguments",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "check_deprecated_module@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "mod_path",
                "type": []
            },
            {
                "category": "return",
                "name": "check_deprecated_module",
                "type": [
                    "None"
                ]
            }
        ],
        "deprecated_arguments@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "method",
                "type": []
            },
            {
                "category": "return",
                "name": "deprecated_arguments",
                "type": [
                    "tuple"
                ]
            }
        ],
        "deprecated_attributes@DeprecatedMixin": [
            {
                "category": "return",
                "name": "deprecated_attributes",
                "type": [
                    "tuple"
                ]
            }
        ],
        "deprecated_classes@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "return",
                "name": "deprecated_classes",
                "type": [
                    "tuple"
                ]
            }
        ],
        "deprecated_decorators@DeprecatedMixin": [
            {
                "category": "return",
                "name": "deprecated_decorators",
                "type": [
                    "tuple"
                ]
            }
        ],
        "deprecated_methods@DeprecatedMixin": [
            {
                "category": "return",
                "name": "deprecated_methods",
                "type": [
                    "tuple"
                ]
            }
        ],
        "deprecated_modules@DeprecatedMixin": [
            {
                "category": "return",
                "name": "deprecated_modules",
                "type": [
                    "tuple"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "ACCEPTABLE_NODES",
                "type": [
                    "tuple"
                ]
            }
        ],
        "visit_attribute@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_attribute",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_decorators@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "visit_decorators",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_import@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_import",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_importfrom@DeprecatedMixin": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "class_names",
                "type": [
                    "typing.Generator"
                ]
            },
            {
                "category": "return",
                "name": "visit_importfrom",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/design_analysis.py": {
        "__init__@MisdesignChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_boolean_expressions@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_boolean_expressions",
                "type": [
                    "None"
                ]
            }
        ],
        "_count_boolean_expressions@global": [
            {
                "category": "arg",
                "name": "bool_op",
                "type": []
            },
            {
                "category": "local",
                "name": "nb_bool_expr",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "bool_expr",
                "type": [
                    "astroid_@_BoolOp"
                ]
            },
            {
                "category": "return",
                "name": "_count_boolean_expressions",
                "type": [
                    "int"
                ]
            }
        ],
        "_count_methods_in_class@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "all_methods",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_count_methods_in_class",
                "type": [
                    "int"
                ]
            }
        ],
        "_get_parents@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignored_parents",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_parents",
                "type": [
                    "set"
                ]
            }
        ],
        "_get_parents_iter@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignored_parents",
                "type": []
            },
            {
                "category": "local",
                "name": "parents",
                "type": [
                    "set",
                    "set[list]"
                ]
            },
            {
                "category": "local",
                "name": "to_explore",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "parent",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_get_parents_iter",
                "type": [
                    "typing.Generator[list]"
                ]
            }
        ],
        "_inc_all_stmts@MisdesignChecker": [
            {
                "category": "arg",
                "name": "amount",
                "type": []
            },
            {
                "category": "return",
                "name": "_inc_all_stmts",
                "type": [
                    "None"
                ]
            }
        ],
        "_inc_branch@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "branchesnum",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "branchesnum",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_inc_branch",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_exempt_from_public_methods@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_exempt_from_public_methods",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_NAMEDTUPLE",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_TYPEDDICT",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_EXTENSIONS_TYPEDDICT",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "root_locals",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "decorator",
                "type": [
                    "astroid_@_Call",
                    "astroid_@_Name"
                ]
            },
            {
                "category": "local",
                "name": "DATACLASSES_DECORATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DATACLASS_IMPORT",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ATTRS_DECORATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ATTRS_IMPORT",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "MSGS",
                "type": [
                    "dict[typing.Text, tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "DATACLASSES_DECORATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DATACLASS_IMPORT",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ATTRS_DECORATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ATTRS_IMPORT",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_NAMEDTUPLE",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_TYPEDDICT",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_EXTENSIONS_TYPEDDICT",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "STDLIB_CLASSES_IGNORE_ANCESTOR",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "leave_classdef@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "my_methods",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "leave_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "leave_functiondef@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "leave_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "open@MisdesignChecker": [
            {
                "category": "local",
                "name": "_returns",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_stmts",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_classdef@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "STDLIB_CLASSES_IGNORE_ANCESTOR",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "nb_parents",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "filtered_attrs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_default@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_default",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ignored_args_num",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "ignored_pos_args_num",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "ignored_kwonly_args_num",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "argnum",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "pos_args_count",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "locnum",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_if@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "branches",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "visit_if",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_return@MisdesignChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_return",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_try@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "branches",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "visit_try",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_while@MisdesignChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "branches",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "visit_while",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/dunder_methods.py": {
        "global@global": [],
        "is_lambda_rule_exception@DunderCallChecker": [
            {
                "category": "arg",
                "name": "ancestor",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_lambda_rule_exception",
                "type": [
                    "bool"
                ]
            }
        ],
        "open@DunderCallChecker": [
            {
                "category": "local",
                "name": "_dunder_methods",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@DunderCallChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "within_dunder_or_lambda_def@DunderCallChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "within_dunder_or_lambda_def",
                "type": [
                    "bool"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/ellipsis_checker.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_const@EllipsisChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_const",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/format.py": {
        "__init__@FormatChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_lines",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_visited_lines",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@TokenWrapper": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_keyword_parentheses@FormatChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "arg",
                "name": "start",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_keyword_parentheses",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "found_and_or",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "contains_walrus_operator",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "walrus_operator_depth",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "contains_double_parens",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "depth",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "keyword_token",
                "type": [
                    "str"
                ]
            }
        ],
        "_check_line_ending@FormatChecker": [
            {
                "category": "arg",
                "name": "line_ending",
                "type": []
            },
            {
                "category": "arg",
                "name": "line_num",
                "type": []
            },
            {
                "category": "local",
                "name": "_last_line_ending",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "line_ending",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_line_ending",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_multi_statement_line@FormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_With"
                ]
            },
            {
                "category": "return",
                "name": "_check_multi_statement_line",
                "type": [
                    "None"
                ]
            }
        ],
        "_infer_else_finally_line_number@FormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "local",
                "name": "last_line_of_prev_block",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_infer_else_finally_line_number",
                "type": [
                    "int"
                ]
            }
        ],
        "_is_first_node_in_else_finally_body@FormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_first_node_in_else_finally_body",
                "type": [
                    "bool"
                ]
            }
        ],
        "_last_token_on_line_is@global": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "arg",
                "name": "line_end",
                "type": []
            },
            {
                "category": "arg",
                "name": "token",
                "type": []
            },
            {
                "category": "return",
                "name": "_last_token_on_line_is",
                "type": [
                    "bool"
                ]
            }
        ],
        "check_indent_level@FormatChecker": [
            {
                "category": "arg",
                "name": "string",
                "type": []
            },
            {
                "category": "arg",
                "name": "expected",
                "type": []
            },
            {
                "category": "arg",
                "name": "line_num",
                "type": []
            },
            {
                "category": "local",
                "name": "indent",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "level",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "unit_size",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "suppl",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "i_type",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "check_indent_level",
                "type": [
                    "None"
                ]
            }
        ],
        "check_line_length@FormatChecker": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "i",
                "type": []
            },
            {
                "category": "arg",
                "name": "checker_off",
                "type": []
            },
            {
                "category": "return",
                "name": "check_line_length",
                "type": [
                    "None"
                ]
            }
        ],
        "check_lines@FormatChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "arg",
                "name": "line_start",
                "type": []
            },
            {
                "category": "arg",
                "name": "lines",
                "type": []
            },
            {
                "category": "arg",
                "name": "lineno",
                "type": []
            },
            {
                "category": "local",
                "name": "potential_line_length_warning",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "check_lines",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "checker_off",
                "type": [
                    "bool"
                ]
            }
        ],
        "check_trailing_whitespace_ending@FormatChecker": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "i",
                "type": []
            },
            {
                "category": "return",
                "name": "check_trailing_whitespace_ending",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "_KEYWORD_TOKENS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "_JUNK_TOKENS",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "MSGS",
                "type": [
                    "dict[typing.Text, tuple[typing.Union[typing.Text,dict[typing.Text, ]]]]"
                ]
            }
        ],
        "is_line_length_check_activated@FormatChecker": [
            {
                "category": "arg",
                "name": "pylint_pattern_match_object",
                "type": []
            },
            {
                "category": "return",
                "name": "is_line_length_check_activated",
                "type": [
                    "bool"
                ]
            }
        ],
        "line@TokenWrapper": [
            {
                "category": "arg",
                "name": "idx",
                "type": []
            },
            {
                "category": "return",
                "name": "line",
                "type": []
            }
        ],
        "new_line@FormatChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "arg",
                "name": "line_end",
                "type": []
            },
            {
                "category": "arg",
                "name": "line_start",
                "type": []
            },
            {
                "category": "local",
                "name": "_JUNK_TOKENS",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "new_line",
                "type": [
                    "None"
                ]
            }
        ],
        "process_module@FormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "process_module",
                "type": [
                    "None"
                ]
            }
        ],
        "process_tokens@FormatChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "local",
                "name": "indents",
                "type": [
                    "list[int]"
                ]
            },
            {
                "category": "local",
                "name": "check_equal",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "line_num",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "_lines",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_visited_lines",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_last_line_ending",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "last_blank_line_num",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "_KEYWORD_TOKENS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "names",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "remove_pylint_option_from_lines@FormatChecker": [
            {
                "category": "arg",
                "name": "options_pattern_obj",
                "type": []
            },
            {
                "category": "return",
                "name": "remove_pylint_option_from_lines",
                "type": []
            }
        ],
        "specific_splitlines@FormatChecker": [
            {
                "category": "arg",
                "name": "lines",
                "type": []
            },
            {
                "category": "local",
                "name": "unsplit_ends",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "res",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "buffer",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "specific_splitlines",
                "type": [
                    "list"
                ]
            }
        ],
        "start_col@TokenWrapper": [
            {
                "category": "arg",
                "name": "idx",
                "type": []
            },
            {
                "category": "return",
                "name": "start_col",
                "type": []
            }
        ],
        "start_line@TokenWrapper": [
            {
                "category": "arg",
                "name": "idx",
                "type": []
            },
            {
                "category": "return",
                "name": "start_line",
                "type": []
            }
        ],
        "token@TokenWrapper": [
            {
                "category": "arg",
                "name": "idx",
                "type": []
            },
            {
                "category": "return",
                "name": "token",
                "type": []
            }
        ],
        "type@TokenWrapper": [
            {
                "category": "arg",
                "name": "idx",
                "type": []
            },
            {
                "category": "return",
                "name": "type",
                "type": []
            }
        ],
        "visit_default@FormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Module"
                ]
            },
            {
                "category": "return",
                "name": "visit_default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "prev_sibl",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "prev_line",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/imports.py": {
        "__init__@ImportsChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_imports_stack",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_first_non_import_node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_module_pkg",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_allow_any_import_level",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "reports",
                "type": [
                    "tuple[tuple[typing.Text]]"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_add_imported_module@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "importedmodname",
                "type": []
            },
            {
                "category": "local",
                "name": "dependencies_stat",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "importedmodnames",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "_add_imported_module",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_import_as_rename@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_import_as_rename",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_imports_order@ImportsChecker": [
            {
                "category": "arg",
                "name": "_module_node",
                "type": []
            },
            {
                "category": "local",
                "name": "std_imports",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "third_party_imports",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "first_party_imports",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "external_imports",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "local_imports",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "third_party_not_ignored",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "first_party_not_ignored",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "local_not_ignored",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "isort_driver",
                "type": [
                    "IsortDriver"
                ]
            },
            {
                "category": "local",
                "name": "nested",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "ignore_for_import_order",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "node_and_package_import",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "wrong_import",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_check_imports_order",
                "type": [
                    "tuple[list[tuple]]"
                ]
            }
        ],
        "_check_misplaced_future@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_misplaced_future",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_position@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_position",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_preferred_module@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "mod_path",
                "type": []
            },
            {
                "category": "local",
                "name": "mod_compare",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "astroid_@_nodes_@_node_classes_@_ImportFrom"
                ]
            },
            {
                "category": "local",
                "name": "mod",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "matches",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_check_preferred_module",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_reimport@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "basename",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "level",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_check_reimport",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "root",
                "type": [
                    "frame"
                ]
            },
            {
                "category": "local",
                "name": "level",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "contexts",
                "type": [
                    "list[tuple[None]]"
                ]
            },
            {
                "category": "local",
                "name": "known_context",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "known_level",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "basename",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_same_line_imports@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "names",
                "type": [
                    "typing.Generator"
                ]
            },
            {
                "category": "return",
                "name": "_check_same_line_imports",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_toplevel@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_ImportFrom"
                ]
            },
            {
                "category": "return",
                "name": "_check_toplevel",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "module_names",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "scoped_imports",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "_check_wildcard_imports@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "imported_module",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_wildcard_imports",
                "type": [
                    "None"
                ]
            }
        ],
        "_dependencies_graph@global": [
            {
                "category": "arg",
                "name": "filename",
                "type": []
            },
            {
                "category": "arg",
                "name": "dep_info",
                "type": []
            },
            {
                "category": "local",
                "name": "done",
                "type": [
                    "dict",
                    "dict[, int]"
                ]
            },
            {
                "category": "local",
                "name": "printer",
                "type": [
                    "DotBackend"
                ]
            },
            {
                "category": "local",
                "name": "sorted_dependencies",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_dependencies_graph",
                "type": []
            }
        ],
        "_external_dependencies_info@ImportsChecker": [
            {
                "category": "return",
                "name": "_external_dependencies_info",
                "type": []
            }
        ],
        "_filter_dependencies_graph@ImportsChecker": [
            {
                "category": "arg",
                "name": "internal",
                "type": []
            },
            {
                "category": "return",
                "name": "_filter_dependencies_graph",
                "type": []
            }
        ],
        "_get_first_import@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "context",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "base",
                "type": []
            },
            {
                "category": "arg",
                "name": "level",
                "type": []
            },
            {
                "category": "arg",
                "name": "alias",
                "type": []
            },
            {
                "category": "local",
                "name": "fullname",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "first",
                "type": [
                    "None",
                    "node",
                    "nodes_@_Import",
                    "nodes_@_ImportFrom"
                ]
            },
            {
                "category": "local",
                "name": "found",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_get_first_import",
                "type": [
                    "tuple[typing.Union[node,nodes_@_ImportFrom,nodes_@_Import,typing.Text]]",
                    "tuple[None]"
                ]
            }
        ],
        "_get_full_import_name@ImportsChecker": [
            {
                "category": "arg",
                "name": "importNode",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_full_import_name",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_get_imported_module@ImportsChecker": [
            {
                "category": "arg",
                "name": "importnode",
                "type": []
            },
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_imported_module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "message",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            }
        ],
        "_get_out_of_order_string@ImportsChecker": [
            {
                "category": "arg",
                "name": "third_party_imports",
                "type": []
            },
            {
                "category": "arg",
                "name": "first_party_imports",
                "type": []
            },
            {
                "category": "arg",
                "name": "local_imports",
                "type": []
            },
            {
                "category": "local",
                "name": "plural",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "imports_list",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "third_party",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "first_party",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "local",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "delimiter_third_party",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "delimiter_first_party1",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "delimiter_first_party2",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "delimiter_first_party",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_get_out_of_order_string",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_ignore_import_failure@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignored_modules",
                "type": []
            },
            {
                "category": "return",
                "name": "_ignore_import_failure",
                "type": [
                    "bool"
                ]
            }
        ],
        "_import_graph_without_ignored_edges@ImportsChecker": [
            {
                "category": "return",
                "name": "_import_graph_without_ignored_edges",
                "type": []
            }
        ],
        "_internal_dependencies_info@ImportsChecker": [
            {
                "category": "return",
                "name": "_internal_dependencies_info",
                "type": []
            }
        ],
        "_is_fallback_import@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "imports",
                "type": []
            },
            {
                "category": "local",
                "name": "imports",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_is_fallback_import",
                "type": [
                    "bool"
                ]
            }
        ],
        "_make_graph@global": [
            {
                "category": "arg",
                "name": "filename",
                "type": []
            },
            {
                "category": "arg",
                "name": "dep_info",
                "type": []
            },
            {
                "category": "arg",
                "name": "sect",
                "type": []
            },
            {
                "category": "arg",
                "name": "gtype",
                "type": []
            },
            {
                "category": "return",
                "name": "_make_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "_make_tree_defs@global": [
            {
                "category": "arg",
                "name": "mod_files_list",
                "type": []
            },
            {
                "category": "local",
                "name": "tree_defs",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "list[typing.Union[dict,list]]",
                    "tuple[typing.Union[dict,list]]"
                ]
            },
            {
                "category": "return",
                "name": "_make_tree_defs",
                "type": [
                    "dict"
                ]
            }
        ],
        "_record_import@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "importedmodnode",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_ImportFrom"
                ]
            },
            {
                "category": "local",
                "name": "importedname",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_record_import",
                "type": [
                    "None"
                ]
            }
        ],
        "_report_dependencies_graph@ImportsChecker": [
            {
                "category": "arg",
                "name": "sect",
                "type": []
            },
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "arg",
                "name": "_dummy",
                "type": []
            },
            {
                "category": "return",
                "name": "_report_dependencies_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "_report_external_dependencies@ImportsChecker": [
            {
                "category": "arg",
                "name": "sect",
                "type": []
            },
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "arg",
                "name": "_dummy",
                "type": []
            },
            {
                "category": "return",
                "name": "_report_external_dependencies",
                "type": [
                    "None"
                ]
            }
        ],
        "_repr_tree_defs@global": [
            {
                "category": "arg",
                "name": "data",
                "type": []
            },
            {
                "category": "arg",
                "name": "indent_str",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "files_list",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "indent_str",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "sub_indent_str",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_repr_tree_defs",
                "type": [
                    "str"
                ]
            }
        ],
        "_wildcard_import_is_allowed@ImportsChecker": [
            {
                "category": "arg",
                "name": "imported_module",
                "type": []
            },
            {
                "category": "return",
                "name": "_wildcard_import_is_allowed",
                "type": [
                    "bool"
                ]
            }
        ],
        "close@ImportsChecker": [
            {
                "category": "local",
                "name": "vertices",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "close",
                "type": [
                    "None"
                ]
            }
        ],
        "compute_first_non_import_node@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "_first_non_import_node",
                "type": [
                    "nodes_@_Assign"
                ]
            },
            {
                "category": "return",
                "name": "compute_first_non_import_node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Assign"
                ]
            },
            {
                "category": "local",
                "name": "valid_targets",
                "type": [
                    "list[bool]"
                ]
            }
        ],
        "deprecated_modules@ImportsChecker": [
            {
                "category": "local",
                "name": "all_deprecated_modules",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "since_vers",
                "type": [
                    "tuple[typing.Union[tuple[int],set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "mod_set",
                "type": [
                    "tuple[typing.Union[tuple[int],set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_MODULES",
                "type": [
                    "dict[tuple[int], set[typing.Text]]"
                ]
            },
            {
                "category": "return",
                "name": "deprecated_modules",
                "type": [
                    "set"
                ]
            }
        ],
        "get_map_data@ImportsChecker": [
            {
                "category": "return",
                "name": "get_map_data",
                "type": [
                    "tuple"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "DEPRECATED_MODULES",
                "type": [
                    "dict[tuple[int], set[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "MSGS",
                "type": [
                    "dict[typing.Text, tuple[typing.Union[typing.Text,dict[typing.Text, list[tuple[typing.Text]]]]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_STANDARD_LIBRARY",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_KNOWN_THIRD_PARTY",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_PREFERRED_MODULES",
                "type": [
                    "tuple"
                ]
            }
        ],
        "leave_module@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "met_import",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "met_from",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "current_package",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "import_node",
                "type": [
                    "nodes_@_ImportFrom"
                ]
            },
            {
                "category": "local",
                "name": "met",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_imports_stack",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_first_non_import_node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "leave_module",
                "type": [
                    "None"
                ]
            }
        ],
        "open@ImportsChecker": [
            {
                "category": "local",
                "name": "self_",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_module_pkg",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_current_module_package",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_allow_any_import_level",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "reduce_map_data@ImportsChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "data",
                "type": []
            },
            {
                "category": "return",
                "name": "reduce_map_data",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_import@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Module"
                ]
            },
            {
                "category": "local",
                "name": "names",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "imported_module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "visit_import",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_importfrom@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Module"
                ]
            },
            {
                "category": "local",
                "name": "imported_module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "visit_importfrom",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@ImportsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/lambda_expressions.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assign@LambdaExpressionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assign",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@LambdaExpressionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Lambda"
                ]
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_namedexpr@LambdaExpressionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_namedexpr",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/logging.py": {
        "_check_call_func@LoggingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "types",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "methods",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_check_call_func",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_format_string@LoggingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "format_arg",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_format_string",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "format_string",
                "type": [
                    "bytes",
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "required_num_args",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "keyword_args_cnt",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "char",
                "type": [
                    "str"
                ]
            }
        ],
        "_check_log_method@LoggingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_log_method",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "format_pos",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "CHECKED_CONVENIENCE_FUNCTIONS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "format_arg",
                "type": [
                    "nodes_@_BinOp",
                    "nodes_@_Call",
                    "nodes_@_Const",
                    "nodes_@_JoinedStr"
                ]
            },
            {
                "category": "local",
                "name": "binop",
                "type": [
                    "nodes_@_BinOp"
                ]
            },
            {
                "category": "local",
                "name": "emit",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "total_number_of_strings",
                "type": [
                    "int"
                ]
            }
        ],
        "_count_supplied_tokens@global": [
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "return",
                "name": "_count_supplied_tokens",
                "type": [
                    "int"
                ]
            }
        ],
        "_helper_string@LoggingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "valid_types",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_helper_string",
                "type": [
                    "str"
                ]
            }
        ],
        "_is_node_explicit_str_concatenation@LoggingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_node_explicit_str_concatenation",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_operand_literal_str@LoggingChecker": [
            {
                "category": "arg",
                "name": "operand",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_operand_literal_str",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "MSGS",
                "type": [
                    "dict[typing.Text, tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "CHECKED_CONVENIENCE_FUNCTIONS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "MOST_COMMON_FORMATTING",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "is_complex_format_str@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_complex_format_str",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "parsed",
                "type": [
                    "list"
                ]
            }
        ],
        "is_logger_class@LoggingChecker": [
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "astroid_@_BoundMethod"
                ]
            },
            {
                "category": "return",
                "name": "is_logger_class",
                "type": [
                    "tuple[bool]",
                    "tuple[typing.Optional[bool]]"
                ]
            }
        ],
        "is_logging_name@LoggingChecker": [
            {
                "category": "return",
                "name": "is_logging_name",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_method_call@global": [
            {
                "category": "arg",
                "name": "func",
                "type": []
            },
            {
                "category": "arg",
                "name": "types",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "arg",
                "name": "methods",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "types",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "methods",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "is_method_call",
                "type": [
                    "bool"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "str_formatting_in_f_string@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "MOST_COMMON_FORMATTING",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "x",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "str_formatting_in_f_string",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit_call@LoggingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_import@LoggingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_import",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_importfrom@LoggingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_importfrom",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@LoggingChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "local",
                "name": "_logging_names",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_logging_modules",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_from_imports",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/method_args.py": {
        "_check_missing_timeout@MethodArgsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "keyword_arguments",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_check_missing_timeout",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_positional_only_arguments_expected@MethodArgsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_positional_only_arguments_expected",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "pos_args",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "kws",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@MethodArgsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/misc.py": {
        "_check_encoding@EncodingChecker": [
            {
                "category": "arg",
                "name": "lineno",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "file_encoding",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_encoding",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_clear_by_id_managed_msgs@ByIdManagedMessagesChecker": [
            {
                "category": "return",
                "name": "_clear_by_id_managed_msgs",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_by_id_managed_msgs@ByIdManagedMessagesChecker": [
            {
                "category": "return",
                "name": "_get_by_id_managed_msgs",
                "type": []
            }
        ],
        "global@global": [],
        "open@EncodingChecker": [
            {
                "category": "local",
                "name": "notes",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "regex_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "process_module@ByIdManagedMessagesChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "verb",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "txt",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "process_module",
                "type": [
                    "None"
                ]
            }
        ],
        "process_module@EncodingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "encoding",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "process_module",
                "type": [
                    "None"
                ]
            }
        ],
        "process_tokens@EncodingChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/modified_iterating_checker.py": {
        "_common_cond_list_set@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "iter_obj",
                "type": []
            },
            {
                "category": "arg",
                "name": "infer_val",
                "type": []
            },
            {
                "category": "local",
                "name": "iter_obj",
                "type": [
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "return",
                "name": "_common_cond_list_set",
                "type": [
                    "bool"
                ]
            }
        ],
        "_deleted_iteration_target_cond@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "iter_obj",
                "type": []
            },
            {
                "category": "return",
                "name": "_deleted_iteration_target_cond",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_node_assigns_subscript_name@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_node_assigns_subscript_name",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_node_expr_that_calls_attribute_name@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_node_expr_that_calls_attribute_name",
                "type": [
                    "bool"
                ]
            }
        ],
        "_modified_iterating_check@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "iter_obj",
                "type": []
            },
            {
                "category": "local",
                "name": "msg_id",
                "type": [
                    "None",
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_List",
                    "nodes_@_Dict",
                    "nodes_@_Set"
                ]
            },
            {
                "category": "return",
                "name": "_modified_iterating_check",
                "type": [
                    "None"
                ]
            }
        ],
        "_modified_iterating_check_on_node_and_children@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "body_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "iter_obj",
                "type": []
            },
            {
                "category": "return",
                "name": "_modified_iterating_check_on_node_and_children",
                "type": [
                    "None"
                ]
            }
        ],
        "_modified_iterating_dict_cond@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "iter_obj",
                "type": []
            },
            {
                "category": "return",
                "name": "_modified_iterating_dict_cond",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "iter_obj",
                "type": [
                    "nodes_@_Attribute"
                ]
            }
        ],
        "_modified_iterating_list_cond@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "iter_obj",
                "type": []
            },
            {
                "category": "return",
                "name": "_modified_iterating_list_cond",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_LIST_MODIFIER_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "_modified_iterating_set_cond@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "iter_obj",
                "type": []
            },
            {
                "category": "return",
                "name": "_modified_iterating_set_cond",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_SET_MODIFIER_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "_LIST_MODIFIER_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "_SET_MODIFIER_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_for@ModifiedIterationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_for",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/nested_min_max.py": {
        "_is_splattable_expression@NestedMinMaxChecker": [
            {
                "category": "arg",
                "name": "arg",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_splattable_expression",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "DICT_TYPES",
                "type": [
                    "tuple"
                ]
            }
        ],
        "get_redundant_calls@NestedMinMaxChecker": [
            {
                "category": "arg",
                "name": "cls",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "get_redundant_calls",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "DICT_TYPES",
                "type": [
                    "tuple"
                ]
            }
        ],
        "is_min_max_call@NestedMinMaxChecker": [
            {
                "category": "arg",
                "name": "cls",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_min_max_call",
                "type": [
                    "bool"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@NestedMinMaxChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/newstyle.py": {
        "global@global": [
            {
                "category": "local",
                "name": "MSGS",
                "type": [
                    "dict[typing.Text, tuple[typing.Text]]"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@NewStyleConflictChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/non_ascii_names.py": {
        "_check_module_import@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_module_import",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_name@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_check_name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "tuple[None]"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "NON_ASCII_HELP",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assignname@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "frame",
                "type": [
                    "nodes_@_FunctionDef",
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "return",
                "name": "visit_assignname",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_classdef@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_global@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_global",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_import@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_import",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_importfrom@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_importfrom",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@NonAsciiNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/raw_metrics.py": {
        "get_type@global": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "arg",
                "name": "start_index",
                "type": []
            },
            {
                "category": "local",
                "name": "line_type",
                "type": [
                    "None",
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "JUNK",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "get_type",
                "type": [
                    "tuple[typing.Text]"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "JUNK",
                "type": [
                    "tuple"
                ]
            }
        ],
        "open@RawMetricsChecker": [
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "process_tokens@RawMetricsChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "local",
                "name": "i",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "tokens",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "report_raw_stats@global": [
            {
                "category": "arg",
                "name": "sect",
                "type": []
            },
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "old_stats",
                "type": []
            },
            {
                "category": "local",
                "name": "sect",
                "type": [
                    "list[typing.Union[int,Paragraph]]",
                    "list[typing.Union[int,Paragraph,Table]]"
                ]
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list[typing.Text]",
                    "list[typing.Optional[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "node_type",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "percent",
                "type": [
                    "float",
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "old",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "diff_str",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "report_raw_stats",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/refactoring/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/refactoring/implicit_booleaness_checker.py": {
        "_check_compare_to_str_or_zero@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_compare_to_str_or_zero",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ops",
                "type": [
                    "list[tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "all_ops",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "operand",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "original",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "node_name",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_use_implicit_booleaness_not_comparison@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_use_implicit_booleaness_not_comparison",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "target_instance",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "t",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "is_base_comprehension_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "_get_node_description@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_node_description",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_implicit_booleaness_message_args@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "literal_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "operator",
                "type": []
            },
            {
                "category": "arg",
                "name": "target_node",
                "type": []
            },
            {
                "category": "local",
                "name": "collection_literal",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "instance_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "original_comparison",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_implicit_booleaness_message_args",
                "type": [
                    "tuple[typing.Text]"
                ]
            }
        ],
        "_is_constant_zero@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_constant_zero",
                "type": [
                    "bool"
                ]
            }
        ],
        "base_names_of_instance@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "bases_@_Instance"
                ]
            },
            {
                "category": "return",
                "name": "base_names_of_instance",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": [],
        "instance_has_bool@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "class_def",
                "type": []
            },
            {
                "category": "return",
                "name": "instance_has_bool",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit_call@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "t",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "affected_by_pep8",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit_compare@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_compare",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_unaryop@ImplicitBooleanessChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_unaryop",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/refactoring/not_checker.py": {
        "global@global": [],
        "visit_unaryop@NotChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_unaryop",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "operand",
                "type": [
                    "nodes_@_Compare"
                ]
            },
            {
                "category": "local",
                "name": "_type",
                "type": [
                    "self_@_skipped_nodes"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "typing.Text"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/refactoring/recommendation_checker.py": {
        "_check_consider_iterating_dictionary@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_consider_iterating_dictionary",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_consider_using_dict_items@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "iterating_object_name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_check_consider_using_dict_items",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "subscript_",
                "type": [
                    "nodes_@_Delete"
                ]
            }
        ],
        "_check_consider_using_dict_items_comprehension@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "iterating_object_name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_check_consider_using_dict_items_comprehension",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_consider_using_enumerate@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_consider_using_enumerate",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "is_constant_zero",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "iterating_object",
                "type": [
                    "nodes_@_Name",
                    "nodes_@_Attribute"
                ]
            }
        ],
        "_check_use_maxsplit_arg@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Subscript",
                    "nodes_@_Name"
                ]
            },
            {
                "category": "return",
                "name": "_check_use_maxsplit_arg",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "new_fn",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_use_sequence_for_iteration@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_use_sequence_for_iteration",
                "type": [
                    "None"
                ]
            }
        ],
        "_detect_replacable_format_call@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_detect_replacable_format_call",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "keyword_args",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "arg",
                "type": [
                    "nodes_@_Starred"
                ]
            }
        ],
        "_is_builtin@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "function",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_builtin",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [],
        "open@RecommendationChecker": [
            {
                "category": "local",
                "name": "_py36_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_comprehension@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_comprehension",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_const@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_const",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_for@RecommendationChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_for",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/refactoring/refactoring_checker.py": {
        "__init__@RefactoringChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_return_nodes",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_consider_using_with_stack",
                "type": [
                    "ConsiderUsingWithStack"
                ]
            },
            {
                "category": "local",
                "name": "_never_returning_functions",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_suggest_join_with_non_empty_separator",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__iter__@ConsiderUsingWithStack": [
            {
                "category": "return",
                "name": "__iter__",
                "type": [
                    "typing.Generator[tuple]"
                ]
            }
        ],
        "_and_or_ternary_arguments@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_and_or_ternary_arguments",
                "type": [
                    "tuple"
                ]
            }
        ],
        "_append_context_managers_to_stack@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_append_context_managers_to_stack",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "assignees",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "values",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "n",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "assignee",
                "type": [
                    "nodes_@_AssignName"
                ]
            },
            {
                "category": "local",
                "name": "CALLS_RETURNING_CONTEXT_MANAGERS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "_apply_boolean_simplification_rules@RefactoringChecker": [
            {
                "category": "arg",
                "name": "operator",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "local",
                "name": "simplified_values",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "inferred_bool",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_apply_boolean_simplification_rules",
                "type": [
                    "list"
                ]
            }
        ],
        "_check_chained_comparison@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_chained_comparison",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "comparison_node",
                "type": [
                    "nodes_@_Compare"
                ]
            },
            {
                "category": "local",
                "name": "num_shared",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "num_lower_bounds",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "num_upper_bounds",
                "type": [
                    "int"
                ]
            }
        ],
        "_check_consider_get@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_consider_get",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_consider_merging_isinstance@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_consider_merging_isinstance",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "names",
                "type": [
                    "list"
                ]
            }
        ],
        "_check_consider_using_comprehension_constructor@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "element",
                "type": [
                    "nodes_@_Call"
                ]
            },
            {
                "category": "return",
                "name": "_check_consider_using_comprehension_constructor",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "message_name",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_consider_using_generator@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "checked_call",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "inside_comp",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_consider_using_generator",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_consider_using_in@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "allowed_ops",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_check_consider_using_in",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "comparable",
                "type": [
                    "nodes_@_Call"
                ]
            },
            {
                "category": "local",
                "name": "variables",
                "type": [
                    "list",
                    "list[set]"
                ]
            },
            {
                "category": "local",
                "name": "values",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "variable_set",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "values_string",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "maybe_not",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_consider_using_join@RefactoringChecker": [
            {
                "category": "arg",
                "name": "aug_assign",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_consider_using_join",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "result_assign_names",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "is_concat_loop",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_consider_using_min_max_builtin@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_consider_using_min_max_builtin",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "reduced_to",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_consider_using_with@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_consider_using_with",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "CALLS_THAT_COULD_BE_REPLACED_BY_WITH",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "CALLS_RETURNING_CONTEXT_MANAGERS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "could_be_used_in_with",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_consistent_returns@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "explicit_returns",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_check_consistent_returns",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_exception_inherit_from_stopiteration@RefactoringChecker": [
            {
                "category": "arg",
                "name": "exc",
                "type": []
            },
            {
                "category": "local",
                "name": "stopiteration_qname",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_exception_inherit_from_stopiteration",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_nested_blocks@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_nested_blocks",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_nested_blocks",
                "type": [
                    "list"
                ]
            }
        ],
        "_check_quit_exit_call@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "BUILTIN_EXIT_FUNCS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_check_quit_exit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_raising_stopiteration_in_generator_next_call@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "return",
                "name": "_check_raising_stopiteration_in_generator_next_call",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "has_sentinel_value",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_redefined_argument_from_local@RefactoringChecker": [
            {
                "category": "arg",
                "name": "name_node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_redefined_argument_from_local",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_return_at_the_end@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_return_at_the_end",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "last",
                "type": [
                    "nodes_@_Return"
                ]
            },
            {
                "category": "local",
                "name": "last_",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_simplifiable_condition@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_simplifiable_condition",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_can_simplify_bool_op",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_simplifiable_if@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_simplifiable_if",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "first_branch",
                "type": [
                    "nodes_@_Return",
                    "nodes_@_Assign"
                ]
            },
            {
                "category": "local",
                "name": "reduced_to",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "first_branch_targets",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "else_branch_targets",
                "type": [
                    "list"
                ]
            }
        ],
        "_check_simplifiable_ifexp@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Compare"
                ]
            },
            {
                "category": "return",
                "name": "_check_simplifiable_ifexp",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "test_reduced_to",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "reduced_to",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_stop_iteration_inside_generator@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_stop_iteration_inside_generator",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_super_with_arguments@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_super_with_arguments",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "frame_class",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_superfluous_else@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg_id",
                "type": []
            },
            {
                "category": "arg",
                "name": "returning_node_class",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_superfluous_else",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "tuple[typing.Text]"
                ]
            }
        ],
        "_check_superfluous_else_break@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_superfluous_else_break",
                "type": []
            }
        ],
        "_check_superfluous_else_continue@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_superfluous_else_continue",
                "type": []
            }
        ],
        "_check_superfluous_else_raise@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_superfluous_else_raise",
                "type": []
            }
        ],
        "_check_superfluous_else_return@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_superfluous_else_return",
                "type": []
            }
        ],
        "_check_swap_variables@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_swap_variables",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "assignments",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "left",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "right",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "message",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_unnecessary_comprehension@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_DictComp",
                    "nodes_@_ListComp",
                    "nodes_@_SetComp"
                ]
            },
            {
                "category": "return",
                "name": "_check_unnecessary_comprehension",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "expr_list",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "target_list",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "expr",
                "type": [
                    "nodes_@_Name",
                    "nodes_@_Tuple"
                ]
            },
            {
                "category": "local",
                "name": "target",
                "type": [
                    "nodes_@_AssignName",
                    "nodes_@_Tuple"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "None",
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "func",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_unnecessary_dict_index_lookup@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_For"
                ]
            },
            {
                "category": "return",
                "name": "_check_unnecessary_dict_index_lookup",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list",
                    "list[dict[typing.Text, ]]",
                    "list[dict[typing.Text, str]]"
                ]
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "has_nested_loops",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "subscript_",
                "type": [
                    "nodes_@_Delete"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "nodes_@_Name",
                    "nodes_@_Subscript"
                ]
            },
            {
                "category": "local",
                "name": "message",
                "type": [
                    "dict[typing.Text, str]"
                ]
            }
        ],
        "_check_unnecessary_list_index_lookup@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_For"
                ]
            },
            {
                "category": "return",
                "name": "_check_unnecessary_list_index_lookup",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "bad_nodes",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "has_nested_loops",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "has_if_statements",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "subscript_",
                "type": [
                    "nodes_@_Delete"
                ]
            },
            {
                "category": "local",
                "name": "index",
                "type": [
                    "nodes_@_Name"
                ]
            }
        ],
        "_check_use_dict_literal@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_use_dict_literal",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_use_list_literal@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_use_list_literal",
                "type": [
                    "None"
                ]
            }
        ],
        "_dict_literal_suggestion@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "elements",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "_dict_literal_suggestion",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_dummy_rgx@RefactoringChecker": [
            {
                "category": "return",
                "name": "_dummy_rgx",
                "type": []
            }
        ],
        "_duplicated_isinstance_types@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "duplicated_objects",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "isinstance_types",
                "type": [
                    "nodes_@_Tuple"
                ]
            },
            {
                "category": "local",
                "name": "elems",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_duplicated_isinstance_types",
                "type": [
                    "dict"
                ]
            }
        ],
        "_emit_consider_using_with_if_needed@RefactoringChecker": [
            {
                "category": "arg",
                "name": "stack",
                "type": []
            },
            {
                "category": "return",
                "name": "_emit_consider_using_with_if_needed",
                "type": [
                    "None"
                ]
            }
        ],
        "_emit_nested_blocks_message_if_needed@RefactoringChecker": [
            {
                "category": "arg",
                "name": "nested_blocks",
                "type": []
            },
            {
                "category": "return",
                "name": "_emit_nested_blocks_message_if_needed",
                "type": [
                    "None"
                ]
            }
        ],
        "_enumerate_with_start@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "start_val",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_enumerate_with_start",
                "type": [
                    "tuple[bool]"
                ]
            }
        ],
        "_except_statement_is_always_returning@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "returning_node_class",
                "type": []
            },
            {
                "category": "return",
                "name": "_except_statement_is_always_returning",
                "type": [
                    "bool"
                ]
            }
        ],
        "_find_lower_upper_bounds@RefactoringChecker": [
            {
                "category": "arg",
                "name": "comparison_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "uses",
                "type": []
            },
            {
                "category": "local",
                "name": "operand",
                "type": [
                    "nodes_@_Name",
                    "nodes_@_Const",
                    "left_operand",
                    "right_operand"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_find_lower_upper_bounds",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_start_value@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_UnaryOp",
                    "nodes_@_Const"
                ]
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_Const"
                ]
            },
            {
                "category": "local",
                "name": "start_val",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_get_start_value",
                "type": [
                    "tuple[None]",
                    "tuple"
                ]
            }
        ],
        "_has_exit_in_scope@RefactoringChecker": [
            {
                "category": "arg",
                "name": "scope",
                "type": []
            },
            {
                "category": "return",
                "name": "_has_exit_in_scope",
                "type": [
                    "bool"
                ]
            }
        ],
        "_has_return_in_siblings@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "next_sibling",
                "type": [
                    "nodes_@_Return"
                ]
            },
            {
                "category": "return",
                "name": "_has_return_in_siblings",
                "type": [
                    "bool"
                ]
            }
        ],
        "_if_statement_is_always_returning@global": [
            {
                "category": "arg",
                "name": "if_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "returning_node_class",
                "type": []
            },
            {
                "category": "return",
                "name": "_if_statement_is_always_returning",
                "type": [
                    "bool"
                ]
            }
        ],
        "_init@RefactoringChecker": [
            {
                "category": "local",
                "name": "_nested_blocks",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_elifs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_reported_swap_nodes",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_can_simplify_bool_op",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_init",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_a_return_statement@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "parent",
                "type": [
                    "frame",
                    "nodes_@_Return"
                ]
            },
            {
                "category": "return",
                "name": "_is_a_return_statement",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_actual_elif@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_If"
                ]
            },
            {
                "category": "return",
                "name": "_is_actual_elif",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_and_or_ternary@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_and_or_ternary",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_bool_const@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_bool_const",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_dict_get_block@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_dict_get_block",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_function_def_never_returning@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_function_def_never_returning",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_if_node_return_ended@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "is_if_returning",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_is_if_node_return_ended",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "is_orelse_returning",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_inside_context_manager@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_inside_context_manager",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_node_return_ended@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Return",
                    "nodes_@_Call",
                    "nodes_@_While",
                    "nodes_@_Raise",
                    "nodes_@_If",
                    "nodes_@_Try"
                ]
            },
            {
                "category": "return",
                "name": "_is_node_return_ended",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "handlers",
                "type": [
                    "set"
                ]
            }
        ],
        "_is_part_of_assignment_target@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Assign",
                    "nodes_@_AugAssign"
                ]
            },
            {
                "category": "return",
                "name": "_is_part_of_assignment_target",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_part_of_with_items@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "current",
                "type": [
                    "nodes_@_With"
                ]
            },
            {
                "category": "return",
                "name": "_is_part_of_with_items",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_raise_node_return_ended@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_raise_node_return_ended",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "handlers",
                "type": [
                    "None",
                    "list"
                ]
            }
        ],
        "_is_simple_assignment@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_simple_assignment",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_trailing_comma@global": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "arg",
                "name": "index",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_trailing_comma",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "more_tokens_on_line",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "expected_tokens",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "_looks_like_infinite_iterator@RefactoringChecker": [
            {
                "category": "arg",
                "name": "param",
                "type": []
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "bases_@_Instance"
                ]
            },
            {
                "category": "local",
                "name": "KNOWN_INFINITE_ITERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_looks_like_infinite_iterator",
                "type": [
                    "bool"
                ]
            }
        ],
        "_name_to_concatenate@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Name"
                ]
            },
            {
                "category": "return",
                "name": "_name_to_concatenate",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "values",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "with_separators",
                "type": [
                    "bool"
                ]
            }
        ],
        "_simplify_boolean_operation@RefactoringChecker": [
            {
                "category": "arg",
                "name": "bool_op",
                "type": []
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "child",
                "type": [
                    "nodes_@_BoolOp"
                ]
            },
            {
                "category": "local",
                "name": "intermediate",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_can_simplify_bool_op",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_simplify_boolean_operation",
                "type": []
            }
        ],
        "_type_and_name_are_equal@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node_a",
                "type": []
            },
            {
                "category": "arg",
                "name": "node_b",
                "type": []
            },
            {
                "category": "return",
                "name": "_type_and_name_are_equal",
                "type": [
                    "bool"
                ]
            }
        ],
        "_will_be_released_automatically@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "callables_taking_care_of_exit",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_will_be_released_automatically",
                "type": [
                    "bool"
                ]
            }
        ],
        "clear_all@ConsiderUsingWithStack": [
            {
                "category": "return",
                "name": "clear_all",
                "type": [
                    "None"
                ]
            }
        ],
        "get_curline_index_start@global": [
            {
                "category": "return",
                "name": "get_curline_index_start",
                "type": [
                    "int"
                ]
            }
        ],
        "get_node_name@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Name",
                    "nodes_@_Const"
                ]
            },
            {
                "category": "return",
                "name": "get_node_name",
                "type": [
                    "str"
                ]
            }
        ],
        "get_stack_for_frame@ConsiderUsingWithStack": [
            {
                "category": "arg",
                "name": "frame",
                "type": []
            },
            {
                "category": "local",
                "name": "frame",
                "type": [
                    "nodes_@_FunctionDef",
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "return",
                "name": "get_stack_for_frame",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "KNOWN_INFINITE_ITERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "BUILTIN_EXIT_FUNCS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "CALLS_THAT_COULD_BE_REPLACED_BY_WITH",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "CALLS_RETURNING_CONTEXT_MANAGERS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "leave_classdef@RefactoringChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "leave_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "leave_functiondef@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "_nested_blocks",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "leave_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "leave_module@RefactoringChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "leave_module",
                "type": [
                    "None"
                ]
            }
        ],
        "open@RefactoringChecker": [
            {
                "category": "local",
                "name": "_never_returning_functions",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "process_tokens@RefactoringChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "local",
                "name": "trailing_comma_tuple_enabled_once",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "c",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assign@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assign",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_augassign@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_augassign",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_boolop@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_boolop",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_comprehension@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_comprehension",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_excepthandler@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_excepthandler",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_for@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_for",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_if@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_if",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_ifexp@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_ifexp",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_raise@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_raise",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_return@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_return",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "truth_boolean_value",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "message",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "visit_try@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_try",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_with@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "var",
                "type": [
                    "nodes_@_Name"
                ]
            },
            {
                "category": "return",
                "name": "visit_with",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_yield@RefactoringChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_yield",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/spelling.py": {
        "_check_docstring@SpellingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_docstring",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_spelling@SpellingChecker": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "line_num",
                "type": []
            },
            {
                "category": "local",
                "name": "initial_space",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "starts_with_comment",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "all_suggestion",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_check_spelling",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_enchant_dict_choices@global": [
            {
                "category": "arg",
                "name": "inner_enchant_dicts",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_enchant_dict_choices",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "_get_enchant_dict_help@global": [
            {
                "category": "arg",
                "name": "inner_enchant_dicts",
                "type": []
            },
            {
                "category": "arg",
                "name": "pyenchant_available",
                "type": []
            },
            {
                "category": "local",
                "name": "dict_as_str",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "enchant_help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_get_enchant_dict_help",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_get_enchant_dicts@global": [
            {
                "category": "local",
                "name": "PYENCHANT_AVAILABLE",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_get_enchant_dicts",
                "type": [
                    "list"
                ]
            }
        ],
        "_next@ForwardSlashChunker": [
            {
                "category": "return",
                "name": "_next",
                "type": [
                    "tuple[int]"
                ]
            }
        ],
        "_skip@Filter": [
            {
                "category": "arg",
                "name": "word",
                "type": []
            },
            {
                "category": "return",
                "name": "_skip",
                "type": [
                    "None"
                ]
            }
        ],
        "_skip@RegExFilter": [
            {
                "category": "arg",
                "name": "word",
                "type": []
            },
            {
                "category": "return",
                "name": "_skip",
                "type": [
                    "bool"
                ]
            }
        ],
        "_skip@WordsWithDigitsFilter": [
            {
                "category": "arg",
                "name": "word",
                "type": []
            },
            {
                "category": "return",
                "name": "_skip",
                "type": [
                    "bool"
                ]
            }
        ],
        "_skip@WordsWithUnderscores": [
            {
                "category": "arg",
                "name": "word",
                "type": []
            },
            {
                "category": "return",
                "name": "_skip",
                "type": [
                    "bool"
                ]
            }
        ],
        "_strip_code_flanked_in_backticks@global": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "return",
                "name": "_strip_code_flanked_in_backticks",
                "type": []
            }
        ],
        "get_tokenizer@global": [
            {
                "category": "arg",
                "name": "tag",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "chunkers",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "filters",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "get_tokenizer",
                "type": [
                    "Filter"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "PYENCHANT_AVAILABLE",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "enchant",
                "type": [
                    "None"
                ]
            }
        ],
        "next@ForwardSlashChunker": [
            {
                "category": "local",
                "name": "_text",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "_offset",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "next",
                "type": [
                    "tuple[int]",
                    "tuple[typing.Union[typing.Text,int]]"
                ]
            }
        ],
        "open@SpellingChecker": [
            {
                "category": "local",
                "name": "initialized",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "PYENCHANT_AVAILABLE",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ignore_list",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "ignore_comment_directive_list",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "enchant",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "unknown_words",
                "type": [
                    "set"
                ]
            }
        ],
        "process_tokens@SpellingChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "replace_code_but_leave_surrounding_characters@global": [
            {
                "category": "arg",
                "name": "match_obj",
                "type": []
            },
            {
                "category": "return",
                "name": "replace_code_but_leave_surrounding_characters",
                "type": []
            }
        ],
        "visit_classdef@SpellingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@SpellingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@SpellingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/stdlib.py": {
        "__init__@StdlibChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_deprecated_methods",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_deprecated_arguments",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_deprecated_classes",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_deprecated_decorators",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_deprecated_attributes",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "since_vers",
                "type": [
                    "tuple[typing.Union[tuple[int],set[typing.Text]]]",
                    "tuple[typing.Union[tuple[int],dict[typing.Text, typing.Union[tuple[tuple[typing.Optional[typing.Text]]],tuple[tuple[typing.Union[int,typing.Text]]]]]]]",
                    "tuple[typing.Union[tuple[int],dict[typing.Text, set[typing.Text]]]]"
                ]
            },
            {
                "category": "local",
                "name": "func_list",
                "type": [
                    "tuple[typing.Union[tuple[int],set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_METHODS",
                "type": [
                    "dict[int, dict[tuple[int], set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "args_list",
                "type": [
                    "tuple[typing.Union[tuple[int],dict[typing.Text, typing.Union[tuple[tuple[typing.Optional[typing.Text]]],tuple[tuple[typing.Union[int,typing.Text]]]]]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_ARGUMENTS",
                "type": [
                    "dict[tuple[int], dict[typing.Text, typing.Union[tuple[tuple[typing.Optional[typing.Text]]],tuple[tuple[typing.Union[int,typing.Text]]]]]]"
                ]
            },
            {
                "category": "local",
                "name": "class_list",
                "type": [
                    "tuple[typing.Union[tuple[int],dict[typing.Text, set[typing.Text]]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_CLASSES",
                "type": [
                    "dict[tuple[int], dict[typing.Text, set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "decorator_list",
                "type": [
                    "tuple[typing.Union[tuple[int],set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_DECORATORS",
                "type": [
                    "dict[tuple[int], set[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "attribute_list",
                "type": [
                    "tuple[typing.Union[tuple[int],set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_ATTRIBUTES",
                "type": [
                    "dict[tuple[int], set[typing.Text]]"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_bad_thread_instantiation@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "func_kwargs",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "_check_bad_thread_instantiation",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_datetime@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_datetime",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_dispatch_decorators@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "decorators_map",
                "type": [
                    "dict",
                    "dict[, tuple]",
                    "dict[typing.Text, tuple]"
                ]
            },
            {
                "category": "return",
                "name": "_check_dispatch_decorators",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_env_function@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "infer",
                "type": []
            },
            {
                "category": "local",
                "name": "env_name_kwarg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "env_value_kwarg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "kwargs",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "env_name_arg",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "env_value_arg",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_check_env_function",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_for_check_kw_in_run@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "kwargs",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "_check_for_check_kw_in_run",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_for_preexec_fn_in_popen@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_for_preexec_fn_in_popen",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_invalid_envvar_value@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "infer",
                "type": []
            },
            {
                "category": "arg",
                "name": "message",
                "type": []
            },
            {
                "category": "arg",
                "name": "call_arg",
                "type": []
            },
            {
                "category": "arg",
                "name": "allow_none",
                "type": []
            },
            {
                "category": "local",
                "name": "call_arg",
                "type": [
                    "nodes_@_Const"
                ]
            },
            {
                "category": "return",
                "name": "_check_invalid_envvar_value",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "emit",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "call_arg_",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_lru_cache_decorators@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_lru_cache_decorators",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "lru_cache_nodes",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "NON_INSTANCE_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "LRU_CACHE",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "_check_mode_str@global": [
            {
                "category": "arg",
                "name": "mode",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_mode_str",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "modes",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_mode",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "creating",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "reading",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "writing",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "appending",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "text",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "binary",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "total",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_open_call@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "open_module",
                "type": []
            },
            {
                "category": "arg",
                "name": "func_name",
                "type": []
            },
            {
                "category": "local",
                "name": "mode_arg",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "PATHLIB_MODULE",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "OPEN_FILES_MODE",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_check_open_call",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_redundant_assert@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "infer",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_redundant_assert",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_shallow_copy_environ@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_shallow_copy_environ",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "OS_ENVIRON",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "deprecated_arguments@StdlibChecker": [
            {
                "category": "arg",
                "name": "method",
                "type": []
            },
            {
                "category": "return",
                "name": "deprecated_arguments",
                "type": []
            }
        ],
        "deprecated_attributes@StdlibChecker": [
            {
                "category": "return",
                "name": "deprecated_attributes",
                "type": []
            }
        ],
        "deprecated_classes@StdlibChecker": [
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "return",
                "name": "deprecated_classes",
                "type": []
            }
        ],
        "deprecated_decorators@StdlibChecker": [
            {
                "category": "return",
                "name": "deprecated_decorators",
                "type": []
            }
        ],
        "deprecated_methods@StdlibChecker": [
            {
                "category": "return",
                "name": "deprecated_methods",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "OPEN_FILES_MODE",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "OPEN_FILES_FUNCS",
                "type": [
                    "tuple[typing.Union[tuple[typing.Text],typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "UNITTEST_CASE",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "THREADING_THREAD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "COPY_COPY",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "OS_ENVIRON",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ENV_GETTERS",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "SUBPROCESS_POPEN",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "SUBPROCESS_RUN",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "OPEN_MODULE",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "PATHLIB_MODULE",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DEBUG_BREAKPOINTS",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "LRU_CACHE",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "NON_INSTANCE_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_ARGUMENTS",
                "type": [
                    "dict[tuple[int], dict[typing.Text, typing.Union[tuple[tuple[typing.Optional[typing.Text]]],tuple[tuple[typing.Union[int,typing.Text]]]]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_DECORATORS",
                "type": [
                    "dict[tuple[int], set[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_METHODS",
                "type": [
                    "dict[int, dict[tuple[int], set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_CLASSES",
                "type": [
                    "dict[tuple[int], dict[typing.Text, set[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_ATTRIBUTES",
                "type": [
                    "dict[tuple[int], set[typing.Text]]"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_boolop@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_boolop",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "util_@_UninferableBase",
                    "nodes_@_ClassDef",
                    "nodes_@_FunctionDef"
                ]
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Name",
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "local",
                "name": "OPEN_MODULE",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "open_func_name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "OPEN_FILES_FUNCS",
                "type": [
                    "tuple[typing.Union[tuple[typing.Text],typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "UNITTEST_CASE",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "THREADING_THREAD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "SUBPROCESS_POPEN",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "COPY_COPY",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ENV_GETTERS",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "SUBPROCESS_RUN",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "DEBUG_BREAKPOINTS",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_if@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_if",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_ifexp@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_ifexp",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_unaryop@StdlibChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_unaryop",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/strings.py": {
        "__init__@StringConstantChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "string_tokens",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_parenthesized_string_tokens",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_interpolation@StringFormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_FormattedValue"
                ]
            },
            {
                "category": "return",
                "name": "_check_interpolation",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "nodes_@_FormattedValue"
                ]
            }
        ],
        "_check_new_format@StringFormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "func",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_new_format",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "named_fields",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "check_args",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "empty",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_new_format_specifiers@StringFormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "fields",
                "type": []
            },
            {
                "category": "arg",
                "name": "named",
                "type": []
            },
            {
                "category": "local",
                "name": "key",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "previous",
                "type": [
                    "util_@_UninferableBase"
                ]
            },
            {
                "category": "local",
                "name": "parsed",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "warn_error",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_check_new_format_specifiers",
                "type": [
                    "None"
                ]
            }
        ],
        "_detect_u_string_prefix@StringConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_detect_u_string_prefix",
                "type": [
                    "None"
                ]
            }
        ],
        "_detect_vacuous_formatting@StringFormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "positional_arguments",
                "type": []
            },
            {
                "category": "local",
                "name": "counter",
                "type": [
                    "Counter"
                ]
            },
            {
                "category": "return",
                "name": "_detect_vacuous_formatting",
                "type": [
                    "None"
                ]
            }
        ],
        "_find_next_token@StringConstantChecker": [
            {
                "category": "arg",
                "name": "index",
                "type": []
            },
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "_PAREN_IGNORE_TOKEN_TYPES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "ignore",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "_find_next_token",
                "type": [
                    "None"
                ]
            }
        ],
        "_find_prev_token@StringConstantChecker": [
            {
                "category": "arg",
                "name": "index",
                "type": []
            },
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "_PAREN_IGNORE_TOKEN_TYPES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "i",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "ignore",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "_find_prev_token",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_quote_delimiter@global": [
            {
                "category": "arg",
                "name": "string_token",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_quote_delimiter",
                "type": []
            }
        ],
        "_is_initial_string_token@StringConstantChecker": [
            {
                "category": "arg",
                "name": "index",
                "type": []
            },
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_initial_string_token",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_long_string@global": [
            {
                "category": "arg",
                "name": "string_token",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_long_string",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_parenthesized@StringConstantChecker": [
            {
                "category": "arg",
                "name": "index",
                "type": []
            },
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "local",
                "name": "_PAREN_IGNORE_TOKEN_TYPES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "_is_parenthesized",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_quote_delimiter_chosen_freely@global": [
            {
                "category": "arg",
                "name": "string_token",
                "type": []
            },
            {
                "category": "local",
                "name": "unchosen_delimiter",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_is_quote_delimiter_chosen_freely",
                "type": [
                    "bool"
                ]
            }
        ],
        "arg_matches_format_type@global": [
            {
                "category": "arg",
                "name": "arg_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "format_type",
                "type": []
            },
            {
                "category": "return",
                "name": "arg_matches_format_type",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "arg_type",
                "type": [
                    "astroid_@_Instance"
                ]
            }
        ],
        "check_for_concatenated_strings@StringConstantChecker": [
            {
                "category": "arg",
                "name": "elements",
                "type": []
            },
            {
                "category": "arg",
                "name": "iterable_type",
                "type": []
            },
            {
                "category": "local",
                "name": "_AST_NODE_STR_TYPES",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "token_index",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "check_for_concatenated_strings",
                "type": [
                    "None"
                ]
            }
        ],
        "check_for_consistent_string_delimiters@StringConstantChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "local",
                "name": "string_delimiters",
                "type": [
                    "Counter"
                ]
            },
            {
                "category": "local",
                "name": "inside_fstring",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "target_py312",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "check_for_consistent_string_delimiters",
                "type": [
                    "None"
                ]
            }
        ],
        "get_access_path@global": [
            {
                "category": "arg",
                "name": "key",
                "type": []
            },
            {
                "category": "arg",
                "name": "parts",
                "type": []
            },
            {
                "category": "local",
                "name": "path",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "get_access_path",
                "type": [
                    "str"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "_AST_NODE_STR_TYPES",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "_PREFIXES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "_PAREN_IGNORE_TOKEN_TYPES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "MSGS",
                "type": [
                    "dict[typing.Text, tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "OTHER_NODES",
                "type": [
                    "tuple"
                ]
            }
        ],
        "process_module@StringConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "_unicode_literals",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "process_module",
                "type": [
                    "None"
                ]
            }
        ],
        "process_non_raw_string_token@StringConstantChecker": [
            {
                "category": "arg",
                "name": "prefix",
                "type": []
            },
            {
                "category": "arg",
                "name": "string_body",
                "type": []
            },
            {
                "category": "arg",
                "name": "start_row",
                "type": []
            },
            {
                "category": "arg",
                "name": "string_start_col",
                "type": []
            },
            {
                "category": "local",
                "name": "index",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "col_offset",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "process_non_raw_string_token",
                "type": [
                    "None"
                ]
            }
        ],
        "process_string_token@StringConstantChecker": [
            {
                "category": "arg",
                "name": "token",
                "type": []
            },
            {
                "category": "arg",
                "name": "start_row",
                "type": []
            },
            {
                "category": "arg",
                "name": "start_col",
                "type": []
            },
            {
                "category": "return",
                "name": "process_string_token",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "quote_length",
                "type": [
                    "int"
                ]
            }
        ],
        "process_tokens@StringConstantChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "local",
                "name": "encoding",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "start",
                "type": [
                    "tuple[int]"
                ]
            },
            {
                "category": "local",
                "name": "next_token",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "str_eval@global": [
            {
                "category": "arg",
                "name": "token",
                "type": []
            },
            {
                "category": "return",
                "name": "str_eval",
                "type": []
            }
        ],
        "visit_assign@StringConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assign",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_binop@StringFormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_binop",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "nodes_@_Dict",
                    "nodes_@_Tuple"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "keys",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "unknown_keys",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "OTHER_NODES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "args_elts",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "num_args",
                "type": [
                    "None",
                    "int"
                ]
            }
        ],
        "visit_call@StringConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@StringFormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_const@StringConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_const",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_joinedstr@StringFormatChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_joinedstr",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_list@StringConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_list",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_set@StringConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_set",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_tuple@StringConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_tuple",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/threading_checker.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_with@ThreadingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "context_managers",
                "type": [
                    "typing.Generator"
                ]
            },
            {
                "category": "local",
                "name": "context_manager",
                "type": [
                    "nodes_@_Call"
                ]
            },
            {
                "category": "local",
                "name": "infered_function",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "visit_with",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/unicode.py": {
        "_byte_to_str_length@global": [
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_byte_to_str_length",
                "type": [
                    "int"
                ]
            }
        ],
        "_cached_encode_search@global": [
            {
                "category": "arg",
                "name": "string",
                "type": []
            },
            {
                "category": "arg",
                "name": "encoding",
                "type": []
            },
            {
                "category": "return",
                "name": "_cached_encode_search",
                "type": []
            }
        ],
        "_check_bidi_chars@UnicodeChecker": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "lineno",
                "type": []
            },
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_bidi_chars",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "dangerous",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "BIDI_UNICODE",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "_check_codec@UnicodeChecker": [
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "arg",
                "name": "codec_definition_line",
                "type": []
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_codec",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_invalid_chars@UnicodeChecker": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "lineno",
                "type": []
            },
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_check_invalid_chars",
                "type": [
                    "None"
                ]
            }
        ],
        "_determine_codec@UnicodeChecker": [
            {
                "category": "arg",
                "name": "stream",
                "type": []
            },
            {
                "category": "local",
                "name": "codec_definition_line",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "ve",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "_determine_codec",
                "type": [
                    "tuple[int]"
                ]
            }
        ],
        "_encode_without_bom@global": [
            {
                "category": "arg",
                "name": "string",
                "type": []
            },
            {
                "category": "arg",
                "name": "encoding",
                "type": []
            },
            {
                "category": "return",
                "name": "_encode_without_bom",
                "type": []
            }
        ],
        "_find_line_matches@UnicodeChecker": [
            {
                "category": "arg",
                "name": "cls",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "BAD_ASCII_SEARCH_DICT",
                "type": [
                    "dict[, _BadChar]"
                ]
            },
            {
                "category": "local",
                "name": "search_dict",
                "type": [
                    "dict[, _BadChar]"
                ]
            },
            {
                "category": "return",
                "name": "_find_line_matches",
                "type": []
            },
            {
                "category": "local",
                "name": "search_dict_byte",
                "type": [
                    "dict",
                    "dict[, _BadChar]"
                ]
            },
            {
                "category": "local",
                "name": "char",
                "type": [
                    "_BadChar"
                ]
            },
            {
                "category": "local",
                "name": "BAD_CHARS",
                "type": [
                    "list[_BadChar]"
                ]
            }
        ],
        "_fix_utf16_32_line_stream@global": [
            {
                "category": "arg",
                "name": "steam",
                "type": []
            },
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_fix_utf16_32_line_stream",
                "type": [
                    "typing.Generator",
                    "typing.Generator[bytes]"
                ]
            },
            {
                "category": "local",
                "name": "content",
                "type": [
                    "bytes"
                ]
            },
            {
                "category": "local",
                "name": "start",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "pos",
                "type": [
                    "int"
                ]
            }
        ],
        "_is_invalid_codec@UnicodeChecker": [
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_is_invalid_codec",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_unicode@UnicodeChecker": [
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_is_unicode",
                "type": [
                    "bool"
                ]
            }
        ],
        "_line_length@global": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "bytes"
                ]
            },
            {
                "category": "return",
                "name": "_line_length",
                "type": [
                    "int"
                ]
            }
        ],
        "_map_positions_to_result@global": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "search_dict",
                "type": []
            },
            {
                "category": "arg",
                "name": "new_line",
                "type": []
            },
            {
                "category": "arg",
                "name": "byte_str_length",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "dict",
                    "dict[int, ]"
                ]
            },
            {
                "category": "local",
                "name": "byte_str_length",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "ignore_pos",
                "type": [
                    "int",
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "start",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "col",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_map_positions_to_result",
                "type": [
                    "dict[int, ]"
                ]
            }
        ],
        "_normalize_codec_name@global": [
            {
                "category": "arg",
                "name": "codec",
                "type": []
            },
            {
                "category": "return",
                "name": "_normalize_codec_name",
                "type": []
            }
        ],
        "_remove_bom@global": [
            {
                "category": "arg",
                "name": "encoded",
                "type": []
            },
            {
                "category": "arg",
                "name": "encoding",
                "type": []
            },
            {
                "category": "local",
                "name": "UNICODE_BOMS",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "return",
                "name": "_remove_bom",
                "type": []
            }
        ],
        "description@_BadChar": [
            {
                "category": "return",
                "name": "description",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "extract_codec_from_bom@global": [
            {
                "category": "arg",
                "name": "first_line",
                "type": []
            },
            {
                "category": "local",
                "name": "BOM_SORTED_TO_CODEC",
                "type": [
                    "OrderedDict"
                ]
            },
            {
                "category": "return",
                "name": "extract_codec_from_bom",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "BIDI_UNICODE",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "BAD_CHARS",
                "type": [
                    "list[_BadChar]"
                ]
            },
            {
                "category": "local",
                "name": "char",
                "type": [
                    "_BadChar"
                ]
            },
            {
                "category": "local",
                "name": "BAD_ASCII_SEARCH_DICT",
                "type": [
                    "dict[, _BadChar]"
                ]
            },
            {
                "category": "local",
                "name": "UNICODE_BOMS",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "local",
                "name": "codec",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "BOM_SORTED_TO_CODEC",
                "type": [
                    "OrderedDict"
                ]
            }
        ],
        "human_code@_BadChar": [
            {
                "category": "return",
                "name": "human_code",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "process_module@UnicodeChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "process_module",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/unsupported_version.py": {
        "_check_typing_final@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_typing_final",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "decorators",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": [],
        "open@UnsupportedVersionChecker": [
            {
                "category": "local",
                "name": "_py36_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_py38_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_py311_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_py312_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_arguments@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_arguments",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_decorators@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_decorators",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_excepthandler@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_excepthandler",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_joinedstr@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_joinedstr",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_namedexpr@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_namedexpr",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_raise@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_raise",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_trystar@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_trystar",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_typealias@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_typealias",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_typevar@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_typevar",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_typevartuple@UnsupportedVersionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_typevartuple",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/checkers/utils.py": {
        "__init__@UnsupportedFormatCharacter": [
            {
                "category": "arg",
                "name": "index",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_except_handlers_ignores_exceptions@global": [
            {
                "category": "arg",
                "name": "handlers",
                "type": []
            },
            {
                "category": "arg",
                "name": "exceptions",
                "type": []
            },
            {
                "category": "return",
                "name": "_except_handlers_ignores_exceptions",
                "type": [
                    "bool"
                ]
            }
        ],
        "_get_python_type_of_node@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_python_type_of_node",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_abstract_class_name@global": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_abstract_class_name",
                "type": []
            }
        ],
        "_is_property_decorator@global": [
            {
                "category": "arg",
                "name": "decorator",
                "type": []
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_ClassDef",
                    "nodes_@_FunctionDef"
                ]
            },
            {
                "category": "return",
                "name": "_is_property_decorator",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "returns",
                "type": [
                    "list"
                ]
            }
        ],
        "_is_property_kind@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "kinds",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_property_kind",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_target_name_in_binop_side@global": [
            {
                "category": "arg",
                "name": "target",
                "type": []
            },
            {
                "category": "arg",
                "name": "side",
                "type": []
            },
            {
                "category": "local",
                "name": "side",
                "type": [
                    "nodes_@_Name"
                ]
            },
            {
                "category": "local",
                "name": "target",
                "type": [
                    "nodes_@_AssignName"
                ]
            },
            {
                "category": "return",
                "name": "_is_target_name_in_binop_side",
                "type": [
                    "bool"
                ]
            }
        ],
        "_qualified_name_parts@global": [
            {
                "category": "arg",
                "name": "qualified_module_name",
                "type": []
            },
            {
                "category": "return",
                "name": "_qualified_name_parts",
                "type": [
                    "list[str]"
                ]
            }
        ],
        "_supports_async_iteration_protocol@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "AITER_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_supports_async_iteration_protocol",
                "type": []
            }
        ],
        "_supports_delitem_protocol@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "DELITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_supports_delitem_protocol",
                "type": []
            }
        ],
        "_supports_getitem_protocol@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "GETITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_supports_getitem_protocol",
                "type": []
            }
        ],
        "_supports_iteration_protocol@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "ITER_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "GETITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_supports_iteration_protocol",
                "type": []
            }
        ],
        "_supports_mapping_protocol@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "GETITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "KEYS_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_supports_mapping_protocol",
                "type": []
            }
        ],
        "_supports_membership_test_protocol@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "CONTAINS_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_supports_membership_test_protocol",
                "type": []
            }
        ],
        "_supports_protocol@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "arg",
                "name": "protocol_callback",
                "type": []
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "nodes_@_ClassDef",
                    "astroid_@_BaseInstance",
                    "nodes_@_ComprehensionScope"
                ]
            },
            {
                "category": "return",
                "name": "_supports_protocol",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "meta",
                "type": [
                    "None"
                ]
            }
        ],
        "_supports_protocol_method@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "arg",
                "name": "attr",
                "type": []
            },
            {
                "category": "return",
                "name": "_supports_protocol_method",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "first",
                "type": [
                    "nodes_@_AssignName"
                ]
            },
            {
                "category": "local",
                "name": "this_assign_parent",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "this_assign_parent_",
                "type": [
                    "nodes_@_BaseContainer",
                    "nodes_@_Const"
                ]
            }
        ],
        "_supports_setitem_protocol@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "SETITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_supports_setitem_protocol",
                "type": []
            }
        ],
        "_suppresses_exception@global": [
            {
                "category": "arg",
                "name": "call",
                "type": []
            },
            {
                "category": "arg",
                "name": "exception",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "exception",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_ClassDef",
                    "nodes_@_Tuple"
                ]
            },
            {
                "category": "return",
                "name": "_suppresses_exception",
                "type": [
                    "bool"
                ]
            }
        ],
        "assign_parent@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "assign_parent",
                "type": []
            }
        ],
        "assigned_bool@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "assigned_bool",
                "type": [
                    "bool"
                ]
            }
        ],
        "class_constructors_are_ambiguous@global": [
            {
                "category": "arg",
                "name": "class1",
                "type": []
            },
            {
                "category": "arg",
                "name": "class2",
                "type": []
            },
            {
                "category": "return",
                "name": "class_constructors_are_ambiguous",
                "type": [
                    "bool"
                ]
            }
        ],
        "class_is_abstract@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "class_is_abstract",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "meta",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ABC_MODULES",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "clear_lru_caches@global": [
            {
                "category": "local",
                "name": "caches_holding_node_references",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "clear_lru_caches",
                "type": [
                    "None"
                ]
            }
        ],
        "collect_string_fields@global": [
            {
                "category": "arg",
                "name": "format_string",
                "type": []
            },
            {
                "category": "return",
                "name": "collect_string_fields",
                "type": [
                    "typing.Generator",
                    "typing.Generator[typing.Text]",
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "Exception"
                ]
            }
        ],
        "decorated_with@global": [
            {
                "category": "arg",
                "name": "func",
                "type": []
            },
            {
                "category": "arg",
                "name": "qnames",
                "type": []
            },
            {
                "category": "local",
                "name": "decorators",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "decorator_node",
                "type": [
                    "nodes_@_Call"
                ]
            },
            {
                "category": "return",
                "name": "decorated_with",
                "type": [
                    "bool"
                ]
            }
        ],
        "decorated_with_property@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "decorated_with_property",
                "type": [
                    "bool"
                ]
            }
        ],
        "defnode_in_scope@global": [
            {
                "category": "arg",
                "name": "var_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "varname",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope",
                "type": []
            },
            {
                "category": "local",
                "name": "scope",
                "type": [
                    "nodes_@_If",
                    "nodes_@_With",
                    "nodes_@_ExceptHandler"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Assign"
                ]
            },
            {
                "category": "local",
                "name": "scope_",
                "type": [
                    "nodes_@_AssignName"
                ]
            },
            {
                "category": "return",
                "name": "defnode_in_scope",
                "type": [
                    "nodes_@_AssignName",
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "COMP_NODE_TYPES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "ass_node",
                "type": [
                    "nodes_@_AssignName"
                ]
            }
        ],
        "error_of_type@global": [
            {
                "category": "arg",
                "name": "handler",
                "type": []
            },
            {
                "category": "arg",
                "name": "error_type",
                "type": []
            },
            {
                "category": "local",
                "name": "error_type",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "expected_errors",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "error_of_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "find_assigned_names_recursive@global": [
            {
                "category": "arg",
                "name": "target",
                "type": []
            },
            {
                "category": "local",
                "name": "target",
                "type": [
                    "nodes_@_AssignName",
                    "nodes_@_BaseContainer"
                ]
            },
            {
                "category": "local",
                "name": "target_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "find_assigned_names_recursive",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "find_except_wrapper_node_in_scope@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "current",
                "type": [
                    "astroid_@_scoped_nodes_@_LocalsDictNodeNG",
                    "nodes_@_ExceptHandler"
                ]
            },
            {
                "category": "return",
                "name": "find_except_wrapper_node_in_scope",
                "type": [
                    "None",
                    "nodes_@_ExceptHandler"
                ]
            }
        ],
        "find_inferred_fn_from_register@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Call",
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "local",
                "name": "func",
                "type": [
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "return",
                "name": "find_inferred_fn_from_register",
                "type": [
                    "None"
                ]
            }
        ],
        "find_try_except_wrapper_node@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ignores",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "find_try_except_wrapper_node",
                "type": [
                    "None"
                ]
            }
        ],
        "function_arguments_are_ambiguous@global": [
            {
                "category": "arg",
                "name": "func1",
                "type": []
            },
            {
                "category": "arg",
                "name": "func2",
                "type": []
            },
            {
                "category": "return",
                "name": "function_arguments_are_ambiguous",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "pairs_of_defaults",
                "type": [
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "zippable_default",
                "type": [
                    "tuple"
                ]
            }
        ],
        "get_all_elements@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "get_all_elements",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "get_argument_from_call@global": [
            {
                "category": "arg",
                "name": "call_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "position",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "keyword",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "position",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "keyword",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "get_argument_from_call",
                "type": []
            }
        ],
        "get_contextlib_suppressors@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "exception",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "item",
                "type": [
                    "nodes_@_Call"
                ]
            },
            {
                "category": "local",
                "name": "exception",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "get_contextlib_suppressors",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "get_contextlib_with_statements@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "with_node",
                "type": [
                    "nodes_@_With"
                ]
            },
            {
                "category": "return",
                "name": "get_contextlib_with_statements",
                "type": [
                    "typing.Generator[nodes_@_With]"
                ]
            }
        ],
        "get_exception_handlers@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "exception",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "context",
                "type": [
                    "nodes_@_Try"
                ]
            },
            {
                "category": "local",
                "name": "exception",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "get_exception_handlers",
                "type": [
                    "list"
                ]
            }
        ],
        "get_import_name@global": [
            {
                "category": "arg",
                "name": "importnode",
                "type": []
            },
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "local",
                "name": "root",
                "type": [
                    "nodes_@_Module"
                ]
            },
            {
                "category": "return",
                "name": "get_import_name",
                "type": []
            }
        ],
        "get_inverse_comparator@global": [
            {
                "category": "arg",
                "name": "op",
                "type": []
            },
            {
                "category": "return",
                "name": "get_inverse_comparator",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_iterating_dictionary_name@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "get_iterating_dictionary_name",
                "type": [
                    "None"
                ]
            }
        ],
        "get_node_first_ancestor_of_type@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "ancestor_type",
                "type": []
            },
            {
                "category": "local",
                "name": "ancestor",
                "type": [
                    "ancestor_type"
                ]
            },
            {
                "category": "return",
                "name": "get_node_first_ancestor_of_type",
                "type": [
                    "ancestor_type",
                    "None"
                ]
            }
        ],
        "get_node_first_ancestor_of_type_and_its_child@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "ancestor_type",
                "type": []
            },
            {
                "category": "local",
                "name": "child",
                "type": [
                    "ancestor_type"
                ]
            },
            {
                "category": "local",
                "name": "ancestor",
                "type": [
                    "ancestor_type"
                ]
            },
            {
                "category": "return",
                "name": "get_node_first_ancestor_of_type_and_its_child",
                "type": [
                    "tuple[ancestor_type]",
                    "tuple[None]"
                ]
            }
        ],
        "get_node_last_lineno@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "get_node_last_lineno",
                "type": []
            }
        ],
        "get_outer_class@global": [
            {
                "category": "arg",
                "name": "class_node",
                "type": []
            },
            {
                "category": "local",
                "name": "parent_klass",
                "type": [
                    "astroid_@_ClassDef"
                ]
            },
            {
                "category": "return",
                "name": "get_outer_class",
                "type": [
                    "astroid_@_ClassDef",
                    "None"
                ]
            }
        ],
        "get_subscript_const_value@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "get_subscript_const_value",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "COMP_NODE_TYPES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "EXCEPTIONS_MODULE",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ABC_MODULES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ABC_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_PROTOCOLS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "COMMUTATIVE_OPERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ITER_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "AITER_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "NEXT_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "GETITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "CLASS_GETITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "SETITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "DELITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "CONTAINS_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "KEYS_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "_SPECIAL_METHODS_PARAMS",
                "type": [
                    "dict[typing.Union[None,int,tuple[int]], tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "params",
                "type": [
                    "tuple[typing.Optional[tuple[typing.Text]]]",
                    "tuple[typing.Union[int,tuple[typing.Text]]]",
                    "tuple[typing.Union[tuple[int],tuple[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "methods",
                "type": [
                    "tuple[typing.Optional[tuple[typing.Text]]]",
                    "tuple[typing.Union[int,tuple[typing.Text]]]",
                    "tuple[typing.Union[tuple[int],tuple[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None",
                    "tuple[typing.Text]",
                    "int",
                    "tuple[int]"
                ]
            },
            {
                "category": "local",
                "name": "SPECIAL_METHODS_PARAMS",
                "type": [
                    "dict[typing.Union[None,tuple[typing.Text],int,tuple[int]], typing.Union[tuple[typing.Optional[tuple[typing.Text]]],tuple[typing.Union[int,tuple[typing.Text]]],tuple[typing.Union[tuple[int],tuple[typing.Text]]]]]"
                ]
            },
            {
                "category": "local",
                "name": "PYMETHODS",
                "type": [
                    "set[typing.Union[None,tuple[typing.Text],int,tuple[int]]]"
                ]
            },
            {
                "category": "local",
                "name": "SUBSCRIPTABLE_CLASSES_PEP585",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "SINGLETON_VALUES",
                "type": [
                    "set[typing.Optional[bool]]"
                ]
            },
            {
                "category": "local",
                "name": "TERMINATING_FUNCS_QNAMES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "SPECIAL_BUILTINS",
                "type": [
                    "tuple[typing.Text]"
                ]
            }
        ],
        "has_known_bases@global": [
            {
                "category": "arg",
                "name": "klass",
                "type": []
            },
            {
                "category": "arg",
                "name": "context",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "klass_",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "has_known_bases",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "context",
                "type": [
                    "None"
                ]
            }
        ],
        "has_starred_node_recursive@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Starred",
                    "nodes_@_Set"
                ]
            },
            {
                "category": "return",
                "name": "has_starred_node_recursive",
                "type": [
                    "typing.Generator[bool]",
                    "typing.Generator"
                ]
            }
        ],
        "in_for_else_branch@global": [
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "arg",
                "name": "stmt",
                "type": []
            },
            {
                "category": "return",
                "name": "in_for_else_branch",
                "type": [
                    "bool"
                ]
            }
        ],
        "in_type_checking_block@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ancestor_",
                "type": [
                    "nodes_@_Name",
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "return",
                "name": "in_type_checking_block",
                "type": [
                    "bool"
                ]
            }
        ],
        "infer_all@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "context",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "context",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "infer_all",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            }
        ],
        "infer_kwarg_from_call@global": [
            {
                "category": "arg",
                "name": "call_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "keyword",
                "type": []
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_Dict"
                ]
            },
            {
                "category": "return",
                "name": "infer_kwarg_from_call",
                "type": [
                    "None"
                ]
            }
        ],
        "inherit_from_std_ex@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ancestors",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "EXCEPTIONS_MODULE",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "inherit_from_std_ex",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_ancestor_name@global": [
            {
                "category": "arg",
                "name": "frame",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_ancestor_name",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_assign_name_annotated_with@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "typing_name",
                "type": []
            },
            {
                "category": "return",
                "name": "is_assign_name_annotated_with",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "annotation",
                "type": [
                    "nodes_@_Subscript"
                ]
            }
        ],
        "is_attr_private@global": [
            {
                "category": "arg",
                "name": "attrname",
                "type": []
            },
            {
                "category": "return",
                "name": "is_attr_private",
                "type": []
            }
        ],
        "is_attr_protected@global": [
            {
                "category": "arg",
                "name": "attrname",
                "type": []
            },
            {
                "category": "return",
                "name": "is_attr_protected",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_attribute_typed_annotation@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "attr_name",
                "type": []
            },
            {
                "category": "return",
                "name": "is_attribute_typed_annotation",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_augmented_assign@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_augmented_assign",
                "type": [
                    "tuple[typing.Union[bool,typing.Text]]",
                    "tuple[bool]"
                ]
            },
            {
                "category": "local",
                "name": "COMMUTATIVE_OPERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "is_base_container@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_base_container",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_being_called@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_being_called",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_builtin@global": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None",
                    "tuple[typing.Text]",
                    "int",
                    "tuple[int]"
                ]
            },
            {
                "category": "local",
                "name": "SPECIAL_BUILTINS",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "is_builtin",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_builtin_object@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_builtin_object",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_call_of_name@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None",
                    "tuple[typing.Text]",
                    "int",
                    "tuple[int]"
                ]
            },
            {
                "category": "return",
                "name": "is_call_of_name",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_class_attr@global": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "klass",
                "type": []
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None",
                    "tuple[typing.Text]",
                    "int",
                    "tuple[int]"
                ]
            },
            {
                "category": "return",
                "name": "is_class_attr",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_classdef_type@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_classdef_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_comprehension@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "comprehensions",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "is_comprehension",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_default_argument@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "scope",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "is_default_argument",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_defined_before@global": [
            {
                "category": "arg",
                "name": "var_node",
                "type": []
            },
            {
                "category": "local",
                "name": "defnode",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "defnode_scope",
                "type": [
                    "nodes_@_FunctionDef"
                ]
            },
            {
                "category": "local",
                "name": "COMP_NODE_TYPES",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "is_defined_before",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_defined_in_scope@global": [
            {
                "category": "arg",
                "name": "var_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "varname",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope",
                "type": []
            },
            {
                "category": "return",
                "name": "is_defined_in_scope",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_deleted_after_current@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "varname",
                "type": []
            },
            {
                "category": "return",
                "name": "is_deleted_after_current",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_empty_dict_literal@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_empty_dict_literal",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_empty_str_literal@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_empty_str_literal",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_enum@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_enum",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_enum_member@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_enum_member",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_error@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_error",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_from_fallback_block@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "context",
                "type": [
                    "nodes_@_ExceptHandler"
                ]
            },
            {
                "category": "return",
                "name": "is_from_fallback_block",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "has_fallback_imports",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_func_decorator@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "parent",
                "type": [
                    "nodes_@_Decorators"
                ]
            },
            {
                "category": "return",
                "name": "is_func_decorator",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_function_body_ellipsis@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_function_body_ellipsis",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_hashable@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_hashable",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "hash_fn_",
                "type": [
                    "inferred"
                ]
            }
        ],
        "is_inside_abstract_class@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "return",
                "name": "is_inside_abstract_class",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_iterable@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_async",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "check_async",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "is_iterable",
                "type": []
            }
        ],
        "is_mapping@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "is_mapping",
                "type": []
            }
        ],
        "is_module_ignored@global": [
            {
                "category": "arg",
                "name": "qualified_module_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignored_modules",
                "type": []
            },
            {
                "category": "local",
                "name": "ignored_modules",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "is_module_ignored",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_node_in_type_annotation_context@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "parent_node",
                "type": [
                    "nodes_@_Module"
                ]
            },
            {
                "category": "return",
                "name": "is_node_in_type_annotation_context",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_node_inside_try_except@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_node_inside_try_except",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_none@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_none",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_overload_stub@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_overload_stub",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_postponed_evaluation_enabled@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_postponed_evaluation_enabled",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_property_deleter@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_property_deleter",
                "type": []
            }
        ],
        "is_property_setter@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_property_setter",
                "type": []
            }
        ],
        "is_property_setter_or_deleter@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_property_setter_or_deleter",
                "type": []
            }
        ],
        "is_protocol_class@global": [
            {
                "category": "arg",
                "name": "cls",
                "type": []
            },
            {
                "category": "return",
                "name": "is_protocol_class",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_PROTOCOLS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "is_reassigned_after_current@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "varname",
                "type": []
            },
            {
                "category": "return",
                "name": "is_reassigned_after_current",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_registered_in_singledispatch_function@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "singledispatch_qnames",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "is_registered_in_singledispatch_function",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "decorators",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "decorator",
                "type": [
                    "nodes_@_Call",
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "local",
                "name": "func",
                "type": [
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "local",
                "name": "func_def",
                "type": [
                    "nodes_@_FunctionDef"
                ]
            }
        ],
        "is_registered_in_singledispatchmethod_function@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "singledispatchmethod_qnames",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "decorators",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "is_registered_in_singledispatchmethod_function",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_singleton_const@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "SINGLETON_VALUES",
                "type": [
                    "set[typing.Optional[bool]]"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "bool",
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "is_singleton_const",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_subclass_of@global": [
            {
                "category": "arg",
                "name": "child",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "return",
                "name": "is_subclass_of",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_super@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_super",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_sys_guard@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Compare"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "nodes_@_Subscript"
                ]
            },
            {
                "category": "return",
                "name": "is_sys_guard",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_terminating_func@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_terminating_func",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "TERMINATING_FUNCS_QNAMES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "inferred_func",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_test_condition@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "parent",
                "type": [
                    "None",
                    "nodes_@_Comprehension"
                ]
            },
            {
                "category": "return",
                "name": "is_test_condition",
                "type": [
                    "bool"
                ]
            }
        ],
        "is_typing_member@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "names_to_check",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Name",
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "local",
                "name": "import_from",
                "type": [
                    "nodes_@_ImportFrom"
                ]
            },
            {
                "category": "return",
                "name": "is_typing_member",
                "type": [
                    "bool"
                ]
            }
        ],
        "next_char@global": [
            {
                "category": "arg",
                "name": "i",
                "type": []
            },
            {
                "category": "return",
                "name": "next_char",
                "type": [
                    "tuple"
                ]
            }
        ],
        "node_frame_class@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "nodes_to_check",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "klass_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "node_frame_class",
                "type": [
                    "None"
                ]
            }
        ],
        "node_ignores_exception@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "exception",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "exception",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "node_ignores_exception",
                "type": [
                    "bool"
                ]
            }
        ],
        "node_type@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "types",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "node_type",
                "type": [
                    "None",
                    "set"
                ]
            }
        ],
        "not_condition_as_string@global": [
            {
                "category": "arg",
                "name": "test_node",
                "type": []
            },
            {
                "category": "local",
                "name": "test_node",
                "type": [
                    "nodes_@_UnaryOp",
                    "nodes_@_BoolOp",
                    "nodes_@_Compare"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "lhs",
                "type": [
                    "lower_priority_expressions",
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "rhs",
                "type": [
                    "lower_priority_expressions",
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "lower_priority_expressions",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "not_condition_as_string",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "only_required_for_messages@global": [
            {
                "category": "arg",
                "name": "messages",
                "type": []
            },
            {
                "category": "return",
                "name": "only_required_for_messages",
                "type": []
            }
        ],
        "overridden_method@global": [
            {
                "category": "arg",
                "name": "klass",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None",
                    "tuple[typing.Text]",
                    "int",
                    "tuple[int]"
                ]
            },
            {
                "category": "return",
                "name": "overridden_method",
                "type": [
                    "None",
                    "nodes_@_FunctionDef"
                ]
            },
            {
                "category": "local",
                "name": "meth_node",
                "type": [
                    "nodes_@_FunctionDef"
                ]
            }
        ],
        "overrides_a_method@global": [
            {
                "category": "arg",
                "name": "class_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None",
                    "tuple[typing.Text]",
                    "int",
                    "tuple[int]"
                ]
            },
            {
                "category": "return",
                "name": "overrides_a_method",
                "type": [
                    "bool"
                ]
            }
        ],
        "parse_format_method_string@global": [
            {
                "category": "arg",
                "name": "format_string",
                "type": []
            },
            {
                "category": "local",
                "name": "keyword_arguments",
                "type": [
                    "list",
                    "list[tuple[typing.Union[numbers_@_Number,list]]]"
                ]
            },
            {
                "category": "local",
                "name": "implicit_pos_args_cnt",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "explicit_pos_args",
                "type": [
                    "set",
                    "set[str]"
                ]
            },
            {
                "category": "local",
                "name": "keyname",
                "type": [
                    "numbers_@_Number"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "parse_format_method_string",
                "type": [
                    "tuple[typing.Union[list[tuple[typing.Union[numbers_@_Number,list]]],int]]"
                ]
            }
        ],
        "parse_format_string@global": [
            {
                "category": "arg",
                "name": "format_string",
                "type": []
            },
            {
                "category": "local",
                "name": "keys",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "key_types",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "pos_types",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "num_args",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "i",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "key",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "depth",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "flags",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "parse_format_string",
                "type": []
            }
        ],
        "returns_bool@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "returns_bool",
                "type": [
                    "bool"
                ]
            }
        ],
        "safe_infer@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "context",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "compare_constants",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "compare_constructors",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "inferred_types",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "context",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "safe_infer",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "compare_constants",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "compare_constructors",
                "type": [
                    "bool"
                ]
            }
        ],
        "split_format_field_names@global": [
            {
                "category": "arg",
                "name": "format_string",
                "type": []
            },
            {
                "category": "return",
                "name": "split_format_field_names",
                "type": []
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            }
        ],
        "store_messages@global": [
            {
                "category": "arg",
                "name": "func",
                "type": []
            },
            {
                "category": "return",
                "name": "store_messages",
                "type": []
            }
        ],
        "stringify_error@global": [
            {
                "category": "arg",
                "name": "error",
                "type": []
            },
            {
                "category": "return",
                "name": "stringify_error",
                "type": []
            }
        ],
        "subscript_chain_is_equal@global": [
            {
                "category": "arg",
                "name": "left",
                "type": []
            },
            {
                "category": "arg",
                "name": "right",
                "type": []
            },
            {
                "category": "return",
                "name": "subscript_chain_is_equal",
                "type": [
                    "bool"
                ]
            }
        ],
        "supports_delitem@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "supports_delitem",
                "type": []
            }
        ],
        "supports_getitem@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "local",
                "name": "CLASS_GETITEM_METHOD",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "supports_getitem",
                "type": [
                    "bool"
                ]
            }
        ],
        "supports_membership_test@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "supports_membership_test",
                "type": []
            }
        ],
        "supports_setitem@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "supports_setitem",
                "type": []
            }
        ],
        "unimplemented_abstract_methods@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "is_abstract_cb",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "is_abstract_cb",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ABC_METHODS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "visited",
                "type": [
                    "dict",
                    "dict[, nodes_@_FunctionDef]"
                ]
            },
            {
                "category": "return",
                "name": "unimplemented_abstract_methods",
                "type": [
                    "dict",
                    "dict[, nodes_@_FunctionDef]"
                ]
            },
            {
                "category": "local",
                "name": "obj",
                "type": [
                    "nodes_@_AssignName"
                ]
            },
            {
                "category": "local",
                "name": "inferred",
                "type": [
                    "nodes_@_FunctionDef"
                ]
            }
        ],
        "uninferable_final_decorators@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "decorators",
                "type": [
                    "list",
                    "list[typing.Union[nodes_@_Name,nodes_@_Attribute]]"
                ]
            },
            {
                "category": "local",
                "name": "decorator",
                "type": [
                    "nodes_@_Attribute",
                    "nodes_@_Name"
                ]
            },
            {
                "category": "local",
                "name": "is_from_import",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "is_import",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "uninferable_final_decorators",
                "type": [
                    "list[typing.Union[nodes_@_Name,nodes_@_Attribute]]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/_breaking_changes.py": {
        "global@global": [
            {
                "category": "local",
                "name": "NO_SELF_USE",
                "type": [
                    "Information"
                ]
            },
            {
                "category": "local",
                "name": "COMPARE_TO_ZERO",
                "type": [
                    "Information"
                ]
            },
            {
                "category": "local",
                "name": "COMPARE_TO_EMPTY_STRING",
                "type": [
                    "Information"
                ]
            },
            {
                "category": "local",
                "name": "CONFIGURATION_BREAKING_CHANGES",
                "type": [
                    "dict[typing.Text, list[tuple[typing.Union[Information,list[list]]]]]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/_pylint_config/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "tuple[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/_pylint_config/generate_command.py": {
        "generate_interactive_config@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "minimal",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "output_stream",
                "type": [
                    "StringIO"
                ]
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "generate_interactive_config",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "handle_generate_command@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "handle_generate_command",
                "type": [
                    "int"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/_pylint_config/help_message.py": {
        "get_help@global": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "return",
                "name": "get_help",
                "type": []
            }
        ],
        "get_subparser_help@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "command",
                "type": []
            },
            {
                "category": "return",
                "name": "get_subparser_help",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/_pylint_config/main.py": {
        "_handle_pylint_config_commands@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "_handle_pylint_config_commands",
                "type": [
                    "int"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/_pylint_config/setup.py": {
        "__call__@_HelpAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "_register_generate_config_options@global": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "local",
                "name": "parser_",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_register_generate_config_options",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/_pylint_config/utils.py": {
        "__init__@InvalidUserInput": [
            {
                "category": "arg",
                "name": "valid_input",
                "type": []
            },
            {
                "category": "arg",
                "name": "input_value",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "get_and_validate_format@global": [
            {
                "category": "local",
                "name": "SUPPORTED_FORMATS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "get_and_validate_format",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_and_validate_output_file@global": [
            {
                "category": "return",
                "name": "get_and_validate_output_file",
                "type": [
                    "tuple[typing.Union[bool,Path]]"
                ]
            },
            {
                "category": "local",
                "name": "file_name",
                "type": [
                    "Path"
                ]
            }
        ],
        "get_minimal_setting@global": [
            {
                "category": "return",
                "name": "get_minimal_setting",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "_P",
                "type": [
                    "ParamSpec"
                ]
            },
            {
                "category": "local",
                "name": "SUPPORTED_FORMATS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "YES_NO_ANSWERS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "inner_function@global": [
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "local",
                "name": "called_once",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "inner_function",
                "type": []
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "Exception"
                ]
            }
        ],
        "should_retry_after_invalid_input@global": [
            {
                "category": "arg",
                "name": "func",
                "type": []
            },
            {
                "category": "return",
                "name": "should_retry_after_invalid_input",
                "type": []
            }
        ],
        "validate_yes_no@global": [
            {
                "category": "arg",
                "name": "question",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "local",
                "name": "question",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "YES_NO_ANSWERS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "validate_yes_no",
                "type": []
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/argument.py": {
        "__init__@_Argument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_BaseStoreArgument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "action",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_CallableArgument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "action",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_DeprecationArgument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "action",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "choices",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "local",
                "name": "_TYPE_TRANSFORMERS",
                "type": [
                    "dict[typing.Text, typing.Union[str,float,int]]"
                ]
            },
            {
                "category": "local",
                "name": "type",
                "type": [
                    "str",
                    "float",
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_ExtendArgument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "action",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "arg",
                "name": "choices",
                "type": []
            },
            {
                "category": "arg",
                "name": "dest",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_StoreArgument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "action",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "choices",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "local",
                "name": "_TYPE_TRANSFORMERS",
                "type": [
                    "dict[typing.Text, typing.Union[str,float,int]]"
                ]
            },
            {
                "category": "local",
                "name": "type",
                "type": [
                    "str",
                    "float",
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_StoreNewNamesArgument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "choices",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_StoreOldNamesArgument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "choices",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_StoreTrueArgument": [
            {
                "category": "arg",
                "name": "flags",
                "type": []
            },
            {
                "category": "arg",
                "name": "action",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "arg",
                "name": "arg_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "hide_help",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_confidence_transformer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_confidence_transformer",
                "type": []
            }
        ],
        "_csv_transformer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_csv_transformer",
                "type": []
            }
        ],
        "_glob_paths_csv_transformer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "paths",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_glob_paths_csv_transformer",
                "type": [
                    "list"
                ]
            }
        ],
        "_non_empty_string_transformer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_non_empty_string_transformer",
                "type": []
            }
        ],
        "_path_transformer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_path_transformer",
                "type": []
            }
        ],
        "_py_version_transformer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "version",
                "type": [
                    "tuple[int]"
                ]
            },
            {
                "category": "return",
                "name": "_py_version_transformer",
                "type": [
                    "tuple[int]"
                ]
            }
        ],
        "_regex_transformer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_regex_transformer",
                "type": []
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_regexp_csv_transfomer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "patterns",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_regexp_csv_transfomer",
                "type": [
                    "list"
                ]
            }
        ],
        "_regexp_paths_csv_transfomer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "patterns",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_regexp_paths_csv_transfomer",
                "type": [
                    "list"
                ]
            }
        ],
        "_yn_transformer@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "YES_VALUES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_yn_transformer",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "NO_VALUES",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "YES_VALUES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "NO_VALUES",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "_TYPE_TRANSFORMERS",
                "type": [
                    "dict[typing.Text, typing.Union[str,float,int]]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/arguments_manager.py": {
        "__init__@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "prog",
                "type": []
            },
            {
                "category": "arg",
                "name": "usage",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "description",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "usage",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "description",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_argument_groups_dict",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_option_dicts",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_directory_namespaces",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_add_arguments_to_parser@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "arg",
                "name": "section_desc",
                "type": []
            },
            {
                "category": "arg",
                "name": "argument",
                "type": []
            },
            {
                "category": "return",
                "name": "_add_arguments_to_parser",
                "type": [
                    "None"
                ]
            }
        ],
        "_add_parser_option@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "section_group",
                "type": []
            },
            {
                "category": "arg",
                "name": "argument",
                "type": []
            },
            {
                "category": "local",
                "name": "argument",
                "type": [
                    "_StoreArgument",
                    "_StoreOldNamesArgument",
                    "_StoreNewNamesArgument",
                    "_StoreTrueArgument",
                    "_CallableArgument",
                    "_ExtendArgument"
                ]
            },
            {
                "category": "return",
                "name": "_add_parser_option",
                "type": [
                    "None"
                ]
            }
        ],
        "_generate_config@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "stream",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "skipsections",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "options_by_section",
                "type": [
                    "dict",
                    "dict[, list[tuple]]"
                ]
            },
            {
                "category": "local",
                "name": "sections",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "skipsections",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "options",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "option_actions",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "stream",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "printed",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_generate_config",
                "type": [
                    "None"
                ]
            }
        ],
        "_generate_config_file@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "minimal",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "minimal",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_generate_config_file",
                "type": [
                    "str"
                ]
            }
        ],
        "_load_default_argument_values@_ArgumentsManager": [
            {
                "category": "return",
                "name": "_load_default_argument_values",
                "type": [
                    "None"
                ]
            }
        ],
        "_parse_command_line_configuration@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "arguments",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "arguments",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_parse_command_line_configuration",
                "type": []
            }
        ],
        "_parse_configuration_file@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "arguments",
                "type": []
            },
            {
                "category": "local",
                "name": "unrecognized_options",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_parse_configuration_file",
                "type": [
                    "None"
                ]
            }
        ],
        "_register_options_provider@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "provider",
                "type": []
            },
            {
                "category": "return",
                "name": "_register_options_provider",
                "type": [
                    "None"
                ]
            }
        ],
        "config@_ArgumentsManager": [
            {
                "category": "return",
                "name": "config",
                "type": []
            }
        ],
        "global@global": [],
        "help@_ArgumentsManager": [
            {
                "category": "return",
                "name": "help",
                "type": []
            }
        ],
        "set_option@_ArgumentsManager": [
            {
                "category": "arg",
                "name": "optname",
                "type": []
            },
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "set_option",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/arguments_provider.py": {
        "__init__@_ArgumentsProvider": [
            {
                "category": "arg",
                "name": "arguments_manager",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_option_value@_ArgumentsProvider": [
            {
                "category": "arg",
                "name": "opt",
                "type": []
            },
            {
                "category": "return",
                "name": "_option_value",
                "type": []
            }
        ],
        "_options_and_values@_ArgumentsProvider": [
            {
                "category": "arg",
                "name": "options",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "options",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_options_and_values",
                "type": [
                    "typing.Generator[tuple]"
                ]
            }
        ],
        "_options_by_section@_ArgumentsProvider": [
            {
                "category": "local",
                "name": "sections",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "_options_by_section",
                "type": [
                    "typing.Generator[tuple[typing.Optional[dict]]]",
                    "typing.Generator[tuple]"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/callback_actions.py": {
        "__call__@_AccessLinterObjectAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_AccessParserAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_AccessRunObjectAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_CallbackAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_DisableAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_DoNothingAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_EnableAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_ErrorsOnlyModeAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "self_",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_FullDocumentationAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_GenerateConfigFileAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_GenerateRCFileAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_ListCheckGroupsAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_ListConfidenceLevelsAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_ListExtensionsAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_ListMessagesAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_ListMessagesEnabledAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_LongHelpAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_MessageHelpAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "values_to_print",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_OutputFormatAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_XableAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_AccessLinterObjectAction": [
            {
                "category": "arg",
                "name": "option_strings",
                "type": []
            },
            {
                "category": "arg",
                "name": "dest",
                "type": []
            },
            {
                "category": "arg",
                "name": "nargs",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "local",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_AccessParserAction": [
            {
                "category": "arg",
                "name": "option_strings",
                "type": []
            },
            {
                "category": "arg",
                "name": "dest",
                "type": []
            },
            {
                "category": "arg",
                "name": "nargs",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "local",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_AccessRunObjectAction": [
            {
                "category": "arg",
                "name": "option_strings",
                "type": []
            },
            {
                "category": "arg",
                "name": "dest",
                "type": []
            },
            {
                "category": "arg",
                "name": "nargs",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "local",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_MessageHelpAction": [
            {
                "category": "arg",
                "name": "option_strings",
                "type": []
            },
            {
                "category": "arg",
                "name": "dest",
                "type": []
            },
            {
                "category": "arg",
                "name": "nargs",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "local",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_call@_XableAction": [
            {
                "category": "arg",
                "name": "xabling_function",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": []
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "_call",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/config_file_parser.py": {
        "__init__@_ConfigurationFileParser": [
            {
                "category": "arg",
                "name": "verbose",
                "type": []
            },
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_ini_file_with_sections@_RawConfParser": [
            {
                "category": "arg",
                "name": "file_path",
                "type": []
            },
            {
                "category": "return",
                "name": "_ini_file_with_sections",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [],
        "parse_config_file@_ConfigurationFileParser": [
            {
                "category": "arg",
                "name": "file_path",
                "type": []
            },
            {
                "category": "return",
                "name": "parse_config_file",
                "type": [
                    "tuple[typing.Union[dict,list]]"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            }
        ],
        "parse_config_file@_RawConfParser": [
            {
                "category": "arg",
                "name": "file_path",
                "type": []
            },
            {
                "category": "arg",
                "name": "verbose",
                "type": []
            },
            {
                "category": "local",
                "name": "file_path",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "parse_config_file",
                "type": [
                    "tuple[typing.Union[dict,list]]"
                ]
            }
        ],
        "parse_ini_file@_RawConfParser": [
            {
                "category": "arg",
                "name": "file_path",
                "type": []
            },
            {
                "category": "local",
                "name": "fp",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "config_content",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "options",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "parse_ini_file",
                "type": [
                    "tuple[typing.Union[dict,list[typing.Text]]]"
                ]
            }
        ],
        "parse_toml_file@_RawConfParser": [
            {
                "category": "arg",
                "name": "file_path",
                "type": []
            },
            {
                "category": "local",
                "name": "fp",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "parse_toml_file",
                "type": [
                    "tuple[typing.Union[dict,list]]",
                    "tuple[typing.Union[dict,list[typing.Text]]]"
                ]
            },
            {
                "category": "local",
                "name": "config_content",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "options",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "values",
                "type": [
                    "dict"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/config_initialization.py": {
        "_config_initialization@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "args_list",
                "type": []
            },
            {
                "category": "arg",
                "name": "reporter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "config_file",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "verbose_mode",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "config_file",
                "type": [
                    "None",
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "verbose_mode",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "config_file_parser",
                "type": [
                    "_ConfigurationFileParser"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "unrecognized_options_message",
                "type": [
                    "None",
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "reporter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "unrecognized_options",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "_config_initialization",
                "type": [
                    "list"
                ]
            }
        ],
        "_order_all_first@global": [
            {
                "category": "arg",
                "name": "config_args",
                "type": []
            },
            {
                "category": "arg",
                "name": "joined",
                "type": []
            },
            {
                "category": "local",
                "name": "indexes_to_prepend",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "all_action",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "returned_args",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_order_all_first",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/deprecation_actions.py": {
        "__call__@_NewNamesAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__call__@_OldNamesAction": [
            {
                "category": "arg",
                "name": "parser",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "values",
                "type": []
            },
            {
                "category": "arg",
                "name": "option_string",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_NewNamesAction": [
            {
                "category": "arg",
                "name": "option_strings",
                "type": []
            },
            {
                "category": "arg",
                "name": "dest",
                "type": []
            },
            {
                "category": "arg",
                "name": "nargs",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "new_names",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "new_names",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@_OldNamesAction": [
            {
                "category": "arg",
                "name": "option_strings",
                "type": []
            },
            {
                "category": "arg",
                "name": "dest",
                "type": []
            },
            {
                "category": "arg",
                "name": "nargs",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "old_names",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "old_names",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "const",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "default",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "choices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "help",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "metavar",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/exceptions.py": {
        "__init__@_UnrecognizedOptionError": [
            {
                "category": "arg",
                "name": "options",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/find_default_config_files.py": {
        "_cfg_or_ini_has_config@global": [
            {
                "category": "arg",
                "name": "path",
                "type": []
            },
            {
                "category": "return",
                "name": "_cfg_or_ini_has_config",
                "type": [
                    "bool"
                ]
            }
        ],
        "_find_config_in_home_or_environment@global": [
            {
                "category": "return",
                "name": "_find_config_in_home_or_environment",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "_find_project_config@global": [
            {
                "category": "local",
                "name": "rc_name",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "RC_NAMES",
                "type": [
                    "tuple[Path]"
                ]
            },
            {
                "category": "return",
                "name": "_find_project_config",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "_find_pyproject@global": [
            {
                "category": "local",
                "name": "is_root",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "PYPROJECT_NAME",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "return",
                "name": "_find_pyproject",
                "type": []
            }
        ],
        "_toml_has_config@global": [
            {
                "category": "arg",
                "name": "path",
                "type": []
            },
            {
                "category": "local",
                "name": "toml_handle",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "error",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "_toml_has_config",
                "type": [
                    "bool"
                ]
            }
        ],
        "_yield_default_files@global": [
            {
                "category": "local",
                "name": "config_name",
                "type": [
                    "tuple[Path]",
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "CONFIG_NAMES",
                "type": [
                    "tuple[typing.Union[tuple[Path],Path]]"
                ]
            },
            {
                "category": "return",
                "name": "_yield_default_files",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "find_default_config_files@global": [
            {
                "category": "return",
                "name": "find_default_config_files",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "RC_NAMES",
                "type": [
                    "tuple[Path]"
                ]
            },
            {
                "category": "local",
                "name": "PYPROJECT_NAME",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "CONFIG_NAMES",
                "type": [
                    "tuple[typing.Union[tuple[Path],Path]]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/help_formatter.py": {
        "_get_help_string@_HelpFormatter": [
            {
                "category": "arg",
                "name": "action",
                "type": []
            },
            {
                "category": "local",
                "name": "action",
                "type": [
                    "_CallbackAction"
                ]
            },
            {
                "category": "local",
                "name": "action_",
                "type": [
                    "argparse_@_SUPPRESS"
                ]
            },
            {
                "category": "return",
                "name": "_get_help_string",
                "type": []
            },
            {
                "category": "local",
                "name": "defaulting_nargs",
                "type": [
                    "list"
                ]
            }
        ],
        "get_long_description@_HelpFormatter": [
            {
                "category": "return",
                "name": "get_long_description",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/config/utils.py": {
        "_add_plugins@global": [
            {
                "category": "arg",
                "name": "run",
                "type": []
            },
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_add_plugins",
                "type": [
                    "None"
                ]
            }
        ],
        "_convert_option_to_argument@global": [
            {
                "category": "arg",
                "name": "opt",
                "type": []
            },
            {
                "category": "arg",
                "name": "optdict",
                "type": []
            },
            {
                "category": "local",
                "name": "flags",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_convert_option_to_argument",
                "type": [
                    "_StoreTrueArgument",
                    "_CallableArgument"
                ]
            },
            {
                "category": "local",
                "name": "default",
                "type": [
                    "None"
                ]
            }
        ],
        "_enable_all_extensions@global": [
            {
                "category": "arg",
                "name": "run",
                "type": []
            },
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "extension_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_enable_all_extensions",
                "type": [
                    "None"
                ]
            }
        ],
        "_init_hook@global": [
            {
                "category": "arg",
                "name": "run",
                "type": []
            },
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_init_hook",
                "type": [
                    "None"
                ]
            }
        ],
        "_parse_rich_type_value@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "re_@_Pattern",
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "_parse_rich_type_value",
                "type": [
                    "str"
                ]
            }
        ],
        "_preprocess_options@global": [
            {
                "category": "arg",
                "name": "run",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "local",
                "name": "processed_args",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "i",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "option",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "matched_option",
                "type": [
                    "None",
                    "tuple[typing.Union[typing.Text,tuple[bool]]]"
                ]
            },
            {
                "category": "local",
                "name": "option_name",
                "type": [
                    "tuple[typing.Union[typing.Text,tuple[bool]]]"
                ]
            },
            {
                "category": "local",
                "name": "data",
                "type": [
                    "tuple[typing.Union[typing.Text,tuple[bool]]]"
                ]
            },
            {
                "category": "local",
                "name": "PREPROCESSABLE_OPTIONS",
                "type": [
                    "dict[typing.Text, tuple[bool]]"
                ]
            },
            {
                "category": "local",
                "name": "takearg",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "cb",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_preprocess_options",
                "type": [
                    "list"
                ]
            }
        ],
        "_set_output@global": [
            {
                "category": "arg",
                "name": "run",
                "type": []
            },
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_set_output",
                "type": [
                    "None"
                ]
            }
        ],
        "_set_rcfile@global": [
            {
                "category": "arg",
                "name": "run",
                "type": []
            },
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_set_rcfile",
                "type": [
                    "None"
                ]
            }
        ],
        "_set_verbose_mode@global": [
            {
                "category": "arg",
                "name": "run",
                "type": []
            },
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "run_",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_set_verbose_mode",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "PREPROCESSABLE_OPTIONS",
                "type": [
                    "dict[typing.Text, tuple[bool]]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/constants.py": {
        "_get_pylint_home@global": [
            {
                "category": "return",
                "name": "_get_pylint_home",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "PY310_PLUS",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "PY311_PLUS",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "PY312_PLUS",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "IS_PYPY",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "PY_EXTS",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "MSG_STATE_CONFIDENCE",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "_MSG_ORDER",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "MSG_STATE_SCOPE_CONFIG",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "MSG_STATE_SCOPE_MODULE",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "_SCOPE_EXEMPT",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "MSG_TYPES",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "k",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "v",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "MSG_TYPES_LONG",
                "type": [
                    "dict[tuple[typing.Text], tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "MSG_TYPES_STATUS",
                "type": [
                    "dict[typing.Text, int]"
                ]
            },
            {
                "category": "local",
                "name": "MAIN_CHECKER_NAME",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_IGNORE_LIST",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "full_version",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "HUMAN_READABLE_TYPES",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "INCOMPATIBLE_WITH_USELESS_SUPPRESSION",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_NORETURN",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "TYPING_NEVER",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DUNDER_METHODS",
                "type": [
                    "dict[tuple[int], dict[typing.Text, typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "EXTRA_DUNDER_METHODS",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DUNDER_PROPERTIES",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "UNNECESSARY_DUNDER_CALL_LAMBDA_EXCEPTIONS",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "MAX_NUMBER_OF_IMPORT_SHOWN",
                "type": [
                    "int"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/exceptions.py": {
        "__init__@DeletedMessageError": [
            {
                "category": "arg",
                "name": "msgid_or_symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "removal_explanation",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@MessageBecameExtensionError": [
            {
                "category": "arg",
                "name": "msgid_or_symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "moved_explanation",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "initialize@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "initialize",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/_check_docs_utils.py": {
        "__init__@Docstring": [
            {
                "category": "arg",
                "name": "doc",
                "type": []
            },
            {
                "category": "local",
                "name": "doc",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "docstring",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__repr__@Docstring": [
            {
                "category": "return",
                "name": "__repr__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_annotations_list@global": [
            {
                "category": "arg",
                "name": "args_node",
                "type": []
            },
            {
                "category": "local",
                "name": "plain_annotations",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "func_comment_annotations",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "_annotations_list",
                "type": [
                    "list"
                ]
            }
        ],
        "_first_line@GoogleDocstring": [
            {
                "category": "return",
                "name": "_first_line",
                "type": []
            }
        ],
        "_get_raise_target@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Call"
                ]
            },
            {
                "category": "return",
                "name": "_get_raise_target",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_ellipsis@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_ellipsis",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_section_header@GoogleDocstring": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_section_header",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_section_header@NumpyDocstring": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_section_header",
                "type": [
                    "bool"
                ]
            }
        ],
        "_merge_annotations@global": [
            {
                "category": "arg",
                "name": "annotations",
                "type": []
            },
            {
                "category": "arg",
                "name": "comment_annotations",
                "type": []
            },
            {
                "category": "return",
                "name": "_merge_annotations",
                "type": [
                    "typing.Generator",
                    "typing.Generator[None]"
                ]
            }
        ],
        "_parse_section@GoogleDocstring": [
            {
                "category": "arg",
                "name": "section_re",
                "type": []
            },
            {
                "category": "local",
                "name": "section_match",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_parse_section",
                "type": [
                    "list",
                    "list[str]"
                ]
            },
            {
                "category": "local",
                "name": "entries",
                "type": [
                    "list",
                    "list[str]"
                ]
            },
            {
                "category": "local",
                "name": "entry",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "is_first",
                "type": [
                    "bool"
                ]
            }
        ],
        "_split_multiple_exc_types@global": [
            {
                "category": "arg",
                "name": "target",
                "type": []
            },
            {
                "category": "local",
                "name": "delimiters",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_split_multiple_exc_types",
                "type": []
            }
        ],
        "args_with_annotation@global": [
            {
                "category": "arg",
                "name": "args_node",
                "type": []
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "annotation_offset",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "num_args",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "args_with_annotation",
                "type": [
                    "set"
                ]
            }
        ],
        "docstringify@global": [
            {
                "category": "arg",
                "name": "docstring",
                "type": []
            },
            {
                "category": "arg",
                "name": "default_type",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "best_match",
                "type": [
                    "tuple[int]",
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "docstringify",
                "type": [
                    "int"
                ]
            }
        ],
        "exceptions@Docstring": [
            {
                "category": "return",
                "name": "exceptions",
                "type": [
                    "set"
                ]
            }
        ],
        "exceptions@GoogleDocstring": [
            {
                "category": "local",
                "name": "types",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "exceptions",
                "type": [
                    "set"
                ]
            }
        ],
        "exceptions@SphinxDocstring": [
            {
                "category": "local",
                "name": "types",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "exceptions",
                "type": [
                    "set"
                ]
            }
        ],
        "get_setters_property@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "property_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "get_setters_property",
                "type": [
                    "None"
                ]
            }
        ],
        "get_setters_property_name@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "decorators",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "get_setters_property_name",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "DOCSTRING_TYPES",
                "type": [
                    "dict[typing.Text, typing.Union[SphinxDocstring,EpytextDocstring,GoogleDocstring,NumpyDocstring,Docstring]]"
                ]
            }
        ],
        "has_params@Docstring": [
            {
                "category": "return",
                "name": "has_params",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_params@GoogleDocstring": [
            {
                "category": "return",
                "name": "has_params",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_params@SphinxDocstring": [
            {
                "category": "return",
                "name": "has_params",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_property_returns@Docstring": [
            {
                "category": "return",
                "name": "has_property_returns",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_property_returns@EpytextDocstring": [
            {
                "category": "return",
                "name": "has_property_returns",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_property_returns@GoogleDocstring": [
            {
                "category": "return",
                "name": "has_property_returns",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_property_returns@SphinxDocstring": [
            {
                "category": "return",
                "name": "has_property_returns",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_property_type@Docstring": [
            {
                "category": "return",
                "name": "has_property_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_property_type@GoogleDocstring": [
            {
                "category": "return",
                "name": "has_property_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_property_type@SphinxDocstring": [
            {
                "category": "return",
                "name": "has_property_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_returns@Docstring": [
            {
                "category": "return",
                "name": "has_returns",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_returns@GoogleDocstring": [
            {
                "category": "return",
                "name": "has_returns",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_returns@SphinxDocstring": [
            {
                "category": "return",
                "name": "has_returns",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_rtype@Docstring": [
            {
                "category": "return",
                "name": "has_rtype",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_rtype@GoogleDocstring": [
            {
                "category": "return",
                "name": "has_rtype",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_rtype@SphinxDocstring": [
            {
                "category": "return",
                "name": "has_rtype",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_yields@Docstring": [
            {
                "category": "return",
                "name": "has_yields",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_yields@GoogleDocstring": [
            {
                "category": "return",
                "name": "has_yields",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_yields_type@Docstring": [
            {
                "category": "return",
                "name": "has_yields_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "has_yields_type@GoogleDocstring": [
            {
                "category": "return",
                "name": "has_yields_type",
                "type": [
                    "bool"
                ]
            }
        ],
        "match_param_docs@Docstring": [
            {
                "category": "return",
                "name": "match_param_docs",
                "type": [
                    "tuple[set]"
                ]
            }
        ],
        "match_param_docs@GoogleDocstring": [
            {
                "category": "local",
                "name": "params_with_doc",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "params_with_type",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "entries",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "match_param_docs",
                "type": [
                    "tuple[set]"
                ]
            }
        ],
        "match_param_docs@NumpyDocstring": [
            {
                "category": "local",
                "name": "params_with_doc",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "params_with_type",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "entries",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "param_type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "match_param_docs",
                "type": [
                    "tuple[set]"
                ]
            }
        ],
        "match_param_docs@SphinxDocstring": [
            {
                "category": "local",
                "name": "params_with_doc",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "params_with_type",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "param_type",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "match_param_docs",
                "type": [
                    "tuple[set]"
                ]
            }
        ],
        "matching_sections@Docstring": [
            {
                "category": "return",
                "name": "matching_sections",
                "type": [
                    "int"
                ]
            }
        ],
        "matching_sections@GoogleDocstring": [
            {
                "category": "return",
                "name": "matching_sections",
                "type": [
                    "bool"
                ]
            }
        ],
        "matching_sections@SphinxDocstring": [
            {
                "category": "return",
                "name": "matching_sections",
                "type": [
                    "bool"
                ]
            }
        ],
        "min_section_indent@GoogleDocstring": [
            {
                "category": "arg",
                "name": "section_match",
                "type": []
            },
            {
                "category": "return",
                "name": "min_section_indent",
                "type": [
                    "int"
                ]
            }
        ],
        "min_section_indent@NumpyDocstring": [
            {
                "category": "arg",
                "name": "section_match",
                "type": []
            },
            {
                "category": "return",
                "name": "min_section_indent",
                "type": [
                    "int"
                ]
            }
        ],
        "params_documented_elsewhere@Docstring": [
            {
                "category": "return",
                "name": "params_documented_elsewhere",
                "type": [
                    "bool"
                ]
            }
        ],
        "possible_exc_types@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "exceptions",
                "type": [
                    "list",
                    "list[nodes_@_ClassDef]"
                ]
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Name",
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "target",
                "type": [
                    "nodes_@_ClassDef",
                    "nodes_@_FunctionDef"
                ]
            },
            {
                "category": "local",
                "name": "ret_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "val",
                "type": [
                    "nodes_@_ClassDef",
                    "astroid_@_Instance"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "return",
                "name": "possible_exc_types",
                "type": [
                    "set[nodes_@_ClassDef]",
                    "set"
                ]
            }
        ],
        "returns_something@global": [
            {
                "category": "arg",
                "name": "return_node",
                "type": []
            },
            {
                "category": "local",
                "name": "returns",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "returns_something",
                "type": [
                    "bool"
                ]
            }
        ],
        "space_indentation@global": [
            {
                "category": "arg",
                "name": "s",
                "type": []
            },
            {
                "category": "return",
                "name": "space_indentation",
                "type": [
                    "int"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/bad_builtin.py": {
        "global@global": [
            {
                "category": "local",
                "name": "BAD_FUNCTIONS",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "LIST_COMP_MSG",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "BUILTIN_HINTS",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@BadBuiltinChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Name"
                ]
            },
            {
                "category": "local",
                "name": "BUILTIN_HINTS",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "hint",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/broad_try_clause.py": {
        "_count_statements@BroadTryClauseChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "statement_count",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_count_statements",
                "type": [
                    "int"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_try@BroadTryClauseChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "visit_try",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/check_elif.py": {
        "__init__@ElseifUsedChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_init@ElseifUsedChecker": [
            {
                "category": "local",
                "name": "_elifs",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "_init",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "leave_module@ElseifUsedChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "leave_module",
                "type": [
                    "None"
                ]
            }
        ],
        "process_tokens@ElseifUsedChecker": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "local",
                "name": "_elifs",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_if@ElseifUsedChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_if",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/code_style.py": {
        "_check_consider_using_assignment_expr@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_name",
                "type": [
                    "None",
                    "nodes_@_Name"
                ]
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Name"
                ]
            },
            {
                "category": "return",
                "name": "_check_consider_using_assignment_expr",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_dict_consider_namedtuple_dataclass@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_dict_consider_namedtuple_dataclass",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "keys_checked",
                "type": [
                    "set",
                    "set[tuple[typing.Type]]"
                ]
            },
            {
                "category": "local",
                "name": "key_tuple",
                "type": [
                    "tuple[typing.Type]"
                ]
            },
            {
                "category": "local",
                "name": "key_tuples",
                "type": [
                    "list",
                    "list[tuple[tuple[typing.Type]]]"
                ]
            },
            {
                "category": "local",
                "name": "keys_intersection",
                "type": [
                    "set[tuple[typing.Type]]"
                ]
            },
            {
                "category": "local",
                "name": "list_length",
                "type": [
                    "int"
                ]
            }
        ],
        "_check_ignore_assignment_expr_suggestion@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_Compare"
                ]
            },
            {
                "category": "local",
                "name": "next_if_node",
                "type": [
                    "None",
                    "nodes_@_If"
                ]
            },
            {
                "category": "local",
                "name": "next_sibling",
                "type": [
                    "nodes_@_If"
                ]
            },
            {
                "category": "return",
                "name": "_check_ignore_assignment_expr_suggestion",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_prev_sibling_to_if_stmt@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "prev_sibling",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_prev_sibling_to_if_stmt",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [],
        "open@CodeStyleChecker": [
            {
                "category": "local",
                "name": "_py36_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_py38_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assign@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assign",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_call@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_call",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_comprehension@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_List"
                ]
            },
            {
                "category": "return",
                "name": "visit_comprehension",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_dict@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_dict",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_for@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_List"
                ]
            },
            {
                "category": "return",
                "name": "visit_for",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_if@CodeStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_if",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/comparison_placement.py": {
        "_check_misplaced_constant@MisplacedComparisonConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "left",
                "type": []
            },
            {
                "category": "arg",
                "name": "right",
                "type": []
            },
            {
                "category": "arg",
                "name": "operator",
                "type": []
            },
            {
                "category": "local",
                "name": "right",
                "type": [
                    "nodes_@_Const"
                ]
            },
            {
                "category": "return",
                "name": "_check_misplaced_constant",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "REVERSED_COMPS",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "operator",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "suggestion",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "REVERSED_COMPS",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "COMPARISON_OPERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_compare@MisplacedComparisonConstantChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_compare",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "COMPARISON_OPERATORS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/confusing_elif.py": {
        "_has_no_else_clause@ConfusingConsecutiveElifChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_has_no_else_clause",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_if@ConfusingConsecutiveElifChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "body_ends_with_if",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "visit_if",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/consider_refactoring_into_while_condition.py": {
        "_check_breaking_after_while_true@ConsiderRefactorIntoWhileConditionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_breaking_after_while_true",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "pri_candidates",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "candidates",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "tainted",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "str"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_while@ConsiderRefactorIntoWhileConditionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_while",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/consider_ternary_expression.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_if@ConsiderTernaryExpressionChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_If"
                ]
            },
            {
                "category": "return",
                "name": "visit_if",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/dict_init_mutate.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assign@DictInitMutateChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assign",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/docstyle.py": {
        "_check_docstring@DocStringStyleChecker": [
            {
                "category": "arg",
                "name": "node_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "docstring",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_check_docstring",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "quotes",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_classdef@DocStringStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@DocStringStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ftype",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@DocStringStyleChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/dunder.py": {
        "global@global": [],
        "open@DunderChecker": [
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@DunderChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/empty_comment.py": {
        "comment_part_of_string@global": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "comment_idx",
                "type": []
            },
            {
                "category": "return",
                "name": "comment_part_of_string",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [],
        "is_line_commented@global": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "return",
                "name": "is_line_commented",
                "type": [
                    "bool"
                ]
            }
        ],
        "process_module@CommentChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "process_module",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/eq_without_hash.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_classdef@EqWithoutHash": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "locals_and_methods",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/for_any_all.py": {
        "_assigned_reassigned_returned@ConsiderUsingAnyOrAllChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "if_children",
                "type": []
            },
            {
                "category": "arg",
                "name": "node_after_loop",
                "type": []
            },
            {
                "category": "return",
                "name": "_assigned_reassigned_returned",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "assign_children",
                "type": [
                    "list"
                ]
            }
        ],
        "_build_suggested_string@ConsiderUsingAnyOrAllChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "final_return_bool",
                "type": []
            },
            {
                "category": "local",
                "name": "suggested_function",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_build_suggested_string",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_if_statement_returns_bool@ConsiderUsingAnyOrAllChecker": [
            {
                "category": "arg",
                "name": "if_children",
                "type": []
            },
            {
                "category": "arg",
                "name": "node_after_loop",
                "type": []
            },
            {
                "category": "return",
                "name": "_if_statement_returns_bool",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_for@ConsiderUsingAnyOrAllChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_for",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "if_children",
                "type": [
                    "list"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/magic_value.py": {
        "__init__@MagicValueChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "valid_magic_vals",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_constants_comparison@MagicValueChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "const_operands",
                "type": [
                    "list",
                    "list[bool]"
                ]
            },
            {
                "category": "local",
                "name": "LEFT_OPERAND",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "RIGHT_OPERAND",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_check_constants_comparison",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "operand_value",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_magic_value@MagicValueChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_magic_value",
                "type": [
                    "bool"
                ]
            }
        ],
        "_magic_vals_ext_configured@MagicValueChecker": [
            {
                "category": "return",
                "name": "_magic_vals_ext_configured",
                "type": [
                    "bool"
                ]
            }
        ],
        "_parse_rcfile_magic_numbers@MagicValueChecker": [
            {
                "category": "arg",
                "name": "parsed_val",
                "type": []
            },
            {
                "category": "return",
                "name": "_parse_rcfile_magic_numbers",
                "type": [
                    "float"
                ]
            }
        ],
        "global@global": [],
        "open@MagicValueChecker": [
            {
                "category": "local",
                "name": "valid_magic_vals",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_compare@MagicValueChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_compare",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/mccabe.py": {
        "__init__@PathGraph": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@PathGraphingAstVisitor": [
            {
                "category": "local",
                "name": "_bottom_counter",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "graph",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_append_node@PathGraphingAstVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_append_node",
                "type": [
                    "None"
                ]
            }
        ],
        "_subgraph@PathGraphingAstVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "extra_blocks",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "graph",
                "type": [
                    "None",
                    "PathGraph"
                ]
            },
            {
                "category": "local",
                "name": "extra_blocks",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "_subgraph",
                "type": [
                    "None"
                ]
            }
        ],
        "_subgraph_parse@PathGraphingAstVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "pathnode",
                "type": []
            },
            {
                "category": "arg",
                "name": "extra_blocks",
                "type": []
            },
            {
                "category": "local",
                "name": "loose_ends",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "tail",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "bottom",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_subgraph_parse",
                "type": [
                    "None"
                ]
            }
        ],
        "default@PathGraphingAstVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "return",
                "name": "default",
                "type": [
                    "None"
                ]
            }
        ],
        "dispatch@PathGraphingAstVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "local",
                "name": "meth",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "dispatch",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "tail",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visitFunctionDef@PathGraphingAstVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "graph",
                "type": [
                    "None",
                    "PathGraph"
                ]
            },
            {
                "category": "local",
                "name": "tail",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "bottom",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "visitFunctionDef",
                "type": [
                    "None"
                ]
            }
        ],
        "visitSimpleStatement@PathGraphingAstVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visitSimpleStatement",
                "type": [
                    "None"
                ]
            }
        ],
        "visitWith@PathGraphingAstVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visitWith",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@McCabeMethodChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "visitor",
                "type": [
                    "PathGraphingAstVisitor"
                ]
            },
            {
                "category": "local",
                "name": "node_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/no_self_use.py": {
        "__init__@NoSelfUseChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_first_attrs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_meth_could_be_func",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_first_arg_for_type@NoSelfUseChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "first_arg",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_check_first_arg_for_type",
                "type": [
                    "None"
                ]
            }
        ],
        "_has_bare_super_call@global": [
            {
                "category": "arg",
                "name": "fundef_node",
                "type": []
            },
            {
                "category": "return",
                "name": "_has_bare_super_call",
                "type": [
                    "bool"
                ]
            }
        ],
        "global@global": [],
        "leave_functiondef@NoSelfUseChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "first",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "leave_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@NoSelfUseChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_meth_could_be_func",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit_name@NoSelfUseChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "_meth_could_be_func",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "visit_name",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/overlapping_exceptions.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_try@OverlappingExceptionsChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "handler_",
                "type": [
                    "None",
                    "astroid_@_BoolOp"
                ]
            },
            {
                "category": "local",
                "name": "excs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "handled_in_clause",
                "type": [
                    "list",
                    "list[tuple[util_@_UninferableBase]]"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "util_@_UninferableBase"
                ]
            },
            {
                "category": "local",
                "name": "exc_ancestors",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "prev_exc_ancestors",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "visit_try",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/private_import.py": {
        "__init__@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "all_used_type_annotations",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "populated_annotations",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_assignments_call_private_name@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "assignments",
                "type": []
            },
            {
                "category": "arg",
                "name": "private_name",
                "type": []
            },
            {
                "category": "local",
                "name": "assignment_",
                "type": [
                    "nodes_@_Call",
                    "nodes_@_Attribute",
                    "nodes_@_Name"
                ]
            },
            {
                "category": "return",
                "name": "_assignments_call_private_name",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "current_attribute",
                "type": [
                    "None",
                    "nodes_@_Attribute",
                    "nodes_@_Call"
                ]
            }
        ],
        "_get_private_imports@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "names",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_private_imports",
                "type": [
                    "list"
                ]
            }
        ],
        "_get_type_annotation_names@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "names",
                "type": []
            },
            {
                "category": "local",
                "name": "populated_annotations",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_get_type_annotation_names",
                "type": [
                    "list"
                ]
            }
        ],
        "_name_is_private@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "_name_is_private",
                "type": [
                    "bool"
                ]
            }
        ],
        "_populate_type_annotations@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "all_used_type_annotations",
                "type": []
            },
            {
                "category": "local",
                "name": "private_name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "name_assignments",
                "type": [
                    "list",
                    "list[nodes_@_AnnAssign]",
                    "list[nodes_@_Assign]"
                ]
            },
            {
                "category": "local",
                "name": "usage_node",
                "type": [
                    "nodes_@_FunctionDef",
                    "nodes_@_LocalsDictNodeNG"
                ]
            },
            {
                "category": "local",
                "name": "assign_parent",
                "type": [
                    "nodes_@_AnnAssign",
                    "nodes_@_Assign"
                ]
            },
            {
                "category": "return",
                "name": "_populate_type_annotations",
                "type": [
                    "None"
                ]
            }
        ],
        "_populate_type_annotations_annotation@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "all_used_type_annotations",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_Subscript",
                    "nodes_@_Attribute"
                ]
            },
            {
                "category": "return",
                "name": "_populate_type_annotations_annotation",
                "type": [
                    "None"
                ]
            }
        ],
        "_populate_type_annotations_function@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "all_used_type_annotations",
                "type": []
            },
            {
                "category": "return",
                "name": "_populate_type_annotations_function",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "same_root_dir@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "import_mod_name",
                "type": []
            },
            {
                "category": "return",
                "name": "same_root_dir",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit_import@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_import",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "names",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "imported_identifier",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "private_name_string",
                "type": [
                    "str"
                ]
            }
        ],
        "visit_importfrom@PrivateImportChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_importfrom",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "names",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "imported_identifier",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "private_name_string",
                "type": [
                    "str"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/redefined_loop_name.py": {
        "__init__@RedefinedLoopNameChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_loop_variables",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "leave_for@RedefinedLoopNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "leave_for",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assignname@RedefinedLoopNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assignname",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node_scope",
                "type": [
                    "outer_for_scope"
                ]
            }
        ],
        "visit_for@RedefinedLoopNameChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "assigned_to",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "node_scope",
                "type": [
                    "outer_for_scope"
                ]
            },
            {
                "category": "return",
                "name": "visit_for",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/redefined_variable_type.py": {
        "_check_and_add_messages@MultipleTypesChecker": [
            {
                "category": "local",
                "name": "orig_parent",
                "type": [
                    "nodes_@_If"
                ]
            },
            {
                "category": "return",
                "name": "_check_and_add_messages",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "leave_classdef@MultipleTypesChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "leave_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assign@MultipleTypesChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assign",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_classdef@MultipleTypesChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@MultipleTypesChecker": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "local",
                "name": "_assigns",
                "type": [
                    "list[dict]"
                ]
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/set_membership.py": {
        "__init__@SetMembershipChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_in_comparison@SetMembershipChecker": [
            {
                "category": "arg",
                "name": "comparator",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_in_comparison",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_compare@SetMembershipChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_compare",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/typing.py": {
        "__init__@TypingChecker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "_found_broken_callable_location",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_alias_name_collisions",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_deprecated_typing_alias_msgs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_consider_using_alias_msgs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_broken_callable_location@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_broken_callable_location",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "parent_subscript",
                "type": [
                    "nodes_@_BaseContainer"
                ]
            }
        ],
        "_check_broken_callable@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_broken_callable",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_broken_noreturn@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_broken_noreturn",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_for_alternative_union_syntax@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_for_alternative_union_syntax",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_for_typing_alias@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_for_typing_alias",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "DEPRECATED_TYPING_ALIASES",
                "type": [
                    "dict[typing.Text, TypingAlias]"
                ]
            },
            {
                "category": "local",
                "name": "alias",
                "type": [
                    "TypingAlias",
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_found_broken_callable_location",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "alias_",
                "type": [
                    "bool"
                ]
            }
        ],
        "_check_union_types@TypingChecker": [
            {
                "category": "arg",
                "name": "types",
                "type": []
            },
            {
                "category": "arg",
                "name": "annotation",
                "type": []
            },
            {
                "category": "local",
                "name": "types_set",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "_check_union_types",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_binop_union_annotation@TypingChecker": [
            {
                "category": "arg",
                "name": "annotation",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_binop_union_annotation",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_deprecated_union_annotation@TypingChecker": [
            {
                "category": "arg",
                "name": "annotation",
                "type": []
            },
            {
                "category": "arg",
                "name": "union_name",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_deprecated_union_annotation",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_optional_none_annotation@TypingChecker": [
            {
                "category": "arg",
                "name": "annotation",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_optional_none_annotation",
                "type": [
                    "bool"
                ]
            }
        ],
        "_msg_postponed_eval_hint@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "_msg_postponed_eval_hint",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_parse_binops_typehints@TypingChecker": [
            {
                "category": "arg",
                "name": "binop_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "typehints_list",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "typehints_list",
                "type": [
                    "None",
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "binop_node_",
                "type": [
                    "nodes_@_BinOp"
                ]
            },
            {
                "category": "return",
                "name": "_parse_binops_typehints",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "DEPRECATED_TYPING_ALIASES",
                "type": [
                    "dict[typing.Text, TypingAlias]"
                ]
            },
            {
                "category": "local",
                "name": "key",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ALIAS_NAMES",
                "type": [
                    "set[str]"
                ]
            },
            {
                "category": "local",
                "name": "UNION_NAMES",
                "type": [
                    "tuple[typing.Text]"
                ]
            }
        ],
        "leave_module@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "_found_broken_callable_location",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "leave_module",
                "type": [
                    "None"
                ]
            }
        ],
        "open@TypingChecker": [
            {
                "category": "local",
                "name": "_py37_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_py39_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_py310_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_py313_plus",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_should_check_typing_alias",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_should_check_alternative_union_syntax",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_should_check_noreturn",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_should_check_callable",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_annassign@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_annassign",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_attribute@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ALIAS_NAMES",
                "type": [
                    "set[str]"
                ]
            },
            {
                "category": "local",
                "name": "UNION_NAMES",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "visit_attribute",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_name@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ALIAS_NAMES",
                "type": [
                    "set[str]"
                ]
            },
            {
                "category": "local",
                "name": "UNION_NAMES",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "visit_name",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_subscript@TypingChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "suggested_str",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "visit_subscript",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/extensions/while_used.py": {
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_while@WhileChecker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_while",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/graph.py": {
        "__init__@DotBackend": [
            {
                "category": "arg",
                "name": "graphname",
                "type": []
            },
            {
                "category": "arg",
                "name": "rankdir",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "size",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "ratio",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "charset",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "renderer",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "additional_param",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "additional_param",
                "type": [
                    "None",
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "renderer",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_source",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "rankdir",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ratio",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "size",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "charset",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "param",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_cycles@global": [
            {
                "category": "arg",
                "name": "graph_dict",
                "type": []
            },
            {
                "category": "arg",
                "name": "path",
                "type": []
            },
            {
                "category": "arg",
                "name": "visited",
                "type": []
            },
            {
                "category": "arg",
                "name": "result",
                "type": []
            },
            {
                "category": "arg",
                "name": "vertice",
                "type": []
            },
            {
                "category": "local",
                "name": "cycle",
                "type": [
                    "list",
                    "list[int]",
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "index",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_get_cycles",
                "type": [
                    "None"
                ]
            }
        ],
        "emit@DotBackend": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "return",
                "name": "emit",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_edge@DotBackend": [
            {
                "category": "arg",
                "name": "name1",
                "type": []
            },
            {
                "category": "arg",
                "name": "name2",
                "type": []
            },
            {
                "category": "arg",
                "name": "props",
                "type": []
            },
            {
                "category": "local",
                "name": "attrs",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "emit_edge",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_node@DotBackend": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "props",
                "type": []
            },
            {
                "category": "local",
                "name": "attrs",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "emit_node",
                "type": [
                    "None"
                ]
            }
        ],
        "generate@DotBackend": [
            {
                "category": "arg",
                "name": "outputfile",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "mapfile",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "graphviz_extensions",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "outputfile",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "target",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "mapfile",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "generate",
                "type": []
            }
        ],
        "get_cycles@global": [
            {
                "category": "arg",
                "name": "graph_dict",
                "type": []
            },
            {
                "category": "arg",
                "name": "vertices",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "get_cycles",
                "type": [
                    "tuple",
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "vertices",
                "type": [
                    "None",
                    "list"
                ]
            }
        ],
        "get_source@DotBackend": [
            {
                "category": "local",
                "name": "_source",
                "type": [
                    "None",
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "get_source",
                "type": [
                    "str"
                ]
            }
        ],
        "global@global": [],
        "normalize_node_id@global": [
            {
                "category": "arg",
                "name": "nid",
                "type": []
            },
            {
                "category": "return",
                "name": "normalize_node_id",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "target_info_from_filename@global": [
            {
                "category": "arg",
                "name": "filename",
                "type": []
            },
            {
                "category": "return",
                "name": "target_info_from_filename",
                "type": [
                    "tuple"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/interfaces.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "HIGH",
                "type": [
                    "Confidence"
                ]
            },
            {
                "category": "local",
                "name": "CONTROL_FLOW",
                "type": [
                    "Confidence"
                ]
            },
            {
                "category": "local",
                "name": "INFERENCE",
                "type": [
                    "Confidence"
                ]
            },
            {
                "category": "local",
                "name": "INFERENCE_FAILURE",
                "type": [
                    "Confidence"
                ]
            },
            {
                "category": "local",
                "name": "UNDEFINED",
                "type": [
                    "Confidence"
                ]
            },
            {
                "category": "local",
                "name": "CONFIDENCE_LEVELS",
                "type": [
                    "list[Confidence]"
                ]
            },
            {
                "category": "local",
                "name": "i",
                "type": [
                    "Confidence"
                ]
            },
            {
                "category": "local",
                "name": "CONFIDENCE_LEVEL_NAMES",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "CONFIDENCE_MAP",
                "type": [
                    "dict[, Confidence]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/caching.py": {
        "_get_pdata_path@global": [
            {
                "category": "arg",
                "name": "base_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "recurs",
                "type": []
            },
            {
                "category": "arg",
                "name": "pylint_home",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "PYLINT_HOME_AS_PATH",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "underscored_name",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "pylint_home",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "return",
                "name": "_get_pdata_path",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "PYLINT_HOME_AS_PATH",
                "type": [
                    "Path"
                ]
            }
        ],
        "load_results@global": [
            {
                "category": "arg",
                "name": "base",
                "type": []
            },
            {
                "category": "arg",
                "name": "pylint_home",
                "type": []
            },
            {
                "category": "local",
                "name": "base",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "pylint_home",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "return",
                "name": "load_results",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "stream",
                "type": [
                    "typing.IO"
                ]
            }
        ],
        "save_results@global": [
            {
                "category": "arg",
                "name": "results",
                "type": []
            },
            {
                "category": "arg",
                "name": "base",
                "type": []
            },
            {
                "category": "arg",
                "name": "pylint_home",
                "type": []
            },
            {
                "category": "local",
                "name": "base",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "pylint_home",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "stream",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "save_results",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/expand_modules.py": {
        "_is_ignored_file@global": [
            {
                "category": "arg",
                "name": "element",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_list",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_list_re",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_list_paths_re",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_ignored_file",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_in_ignore_list_re@global": [
            {
                "category": "arg",
                "name": "element",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_list_re",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_in_ignore_list_re",
                "type": [
                    "bool"
                ]
            }
        ],
        "_is_package_cb@global": [
            {
                "category": "arg",
                "name": "inner_path",
                "type": []
            },
            {
                "category": "arg",
                "name": "parts",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_package_cb",
                "type": []
            }
        ],
        "_modpath_from_file@global": [
            {
                "category": "arg",
                "name": "filename",
                "type": []
            },
            {
                "category": "arg",
                "name": "is_namespace",
                "type": []
            },
            {
                "category": "arg",
                "name": "path",
                "type": []
            },
            {
                "category": "return",
                "name": "_modpath_from_file",
                "type": []
            }
        ],
        "discover_package_path@global": [
            {
                "category": "arg",
                "name": "modulepath",
                "type": []
            },
            {
                "category": "arg",
                "name": "source_roots",
                "type": []
            },
            {
                "category": "return",
                "name": "discover_package_path",
                "type": []
            }
        ],
        "expand_modules@global": [
            {
                "category": "arg",
                "name": "files_or_modules",
                "type": []
            },
            {
                "category": "arg",
                "name": "source_roots",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_list",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_list_re",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_list_paths_re",
                "type": []
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "dict",
                    "dict[, dict[typing.Text, typing.Union[typing.Text,bool]]]"
                ]
            },
            {
                "category": "local",
                "name": "errors",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "additional_search_path",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "expand_modules",
                "type": []
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/message_state_handler.py": {
        "__init__@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "default_enabled_messages",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_msgs_state",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_options_methods",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "local",
                "name": "_bw_options_methods",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "local",
                "name": "_pragma_lineno",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_message_state_scope@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_get_message_state_scope",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_messages_to_set@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "enable",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "message_definitions",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_get_messages_to_set",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "category_id_formatted",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_one_message_enabled@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_is_one_message_enabled",
                "type": []
            },
            {
                "category": "local",
                "name": "fallback",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "fallback_iter",
                "type": [
                    "None"
                ]
            }
        ],
        "_register_by_id_managed_msg@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msgid_or_symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "is_disabled",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_register_by_id_managed_msg",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "is_disabled",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "managed",
                "type": [
                    "ManagedMessage"
                ]
            }
        ],
        "_set_msg_status@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "enable",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "scope",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "self_",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "symbols",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_set_msg_status",
                "type": [
                    "None"
                ]
            }
        ],
        "_set_one_msg_status@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "scope",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "enable",
                "type": []
            },
            {
                "category": "return",
                "name": "_set_one_msg_status",
                "type": [
                    "None"
                ]
            }
        ],
        "disable@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "scope",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "disable",
                "type": [
                    "None"
                ]
            }
        ],
        "disable_next@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "_",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "disable_next",
                "type": [
                    "None"
                ]
            }
        ],
        "disable_noerror_messages@_MessageStateHandler": [
            {
                "category": "return",
                "name": "disable_noerror_messages",
                "type": [
                    "None"
                ]
            }
        ],
        "enable@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "scope",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ignore_unknown",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "enable",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "is_message_enabled@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "msg_descr",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "is_message_enabled",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "msgids",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            }
        ],
        "list_messages_enabled@_MessageStateHandler": [
            {
                "category": "local",
                "name": "enabled",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "disabled",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "list_messages_enabled",
                "type": [
                    "None"
                ]
            }
        ],
        "process_tokens@_MessageStateHandler": [
            {
                "category": "arg",
                "name": "tokens",
                "type": []
            },
            {
                "category": "local",
                "name": "control_pragmas",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "prev_line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "saw_newline",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "seen_newline",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "match",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_ignore_file",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "process_tokens",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "l_start",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "err",
                "type": [
                    "Exception"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/parallel.py": {
        "_merge_mapreduce_data@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "all_mapreduce_data",
                "type": []
            },
            {
                "category": "return",
                "name": "_merge_mapreduce_data",
                "type": [
                    "None"
                ]
            }
        ],
        "_worker_check_single_file@global": [
            {
                "category": "arg",
                "name": "file_item",
                "type": []
            },
            {
                "category": "local",
                "name": "_worker_linter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "data",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "multiprocessing",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_worker_check_single_file",
                "type": [
                    "tuple[int]"
                ]
            }
        ],
        "_worker_initialize@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "extra_packages_paths",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "extra_packages_paths",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_worker_initialize",
                "type": [
                    "None"
                ]
            }
        ],
        "check_parallel@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "jobs",
                "type": []
            },
            {
                "category": "arg",
                "name": "files",
                "type": []
            },
            {
                "category": "arg",
                "name": "extra_packages_paths",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "extra_packages_paths",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "executor",
                "type": [
                    "ProcessPoolExecutor"
                ]
            },
            {
                "category": "local",
                "name": "all_stats",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "linter_",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "check_parallel",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "multiprocessing",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ProcessPoolExecutor",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_worker_linter",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/pylinter.py": {
        "__call__@GetAstProtocol": [
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "data",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@PyLinter": [
            {
                "category": "arg",
                "name": "options",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "arg",
                "name": "reporter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "option_groups",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "arg",
                "name": "pylintrc",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "reporter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_reporters",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_dynamic_plugins",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "stats",
                "type": [
                    "LinterStats"
                ]
            },
            {
                "category": "local",
                "name": "options",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "option_groups",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "_option_groups",
                "type": [
                    "tuple[tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "fail_on_symbols",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_error_mode",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "reports",
                "type": [
                    "tuple[tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "msgs_store",
                "type": [
                    "MessageDefinitionStore"
                ]
            },
            {
                "category": "local",
                "name": "msg_status",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "_by_id_managed_msgs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "file_state",
                "type": [
                    "FileState"
                ]
            },
            {
                "category": "local",
                "name": "current_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "current_file",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_ignore_file",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_ignore_paths",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_add_one_message@PyLinter": [
            {
                "category": "arg",
                "name": "message_definition",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": []
            },
            {
                "category": "arg",
                "name": "col_offset",
                "type": []
            },
            {
                "category": "arg",
                "name": "end_lineno",
                "type": []
            },
            {
                "category": "arg",
                "name": "end_col_offset",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_add_one_message",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "module",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "obj",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "abspath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "path",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_astroid_module_checker@PyLinter": [
            {
                "category": "local",
                "name": "walker",
                "type": [
                    "ASTWalker"
                ]
            },
            {
                "category": "local",
                "name": "tokencheckers",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "rawcheckers",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_astroid_module_checker",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "_check_astroid_module@PyLinter": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "walker",
                "type": []
            },
            {
                "category": "arg",
                "name": "rawcheckers",
                "type": []
            },
            {
                "category": "arg",
                "name": "tokencheckers",
                "type": []
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "_check_astroid_module",
                "type": [
                    "None",
                    "bool"
                ]
            }
        ],
        "_check_file@PyLinter": [
            {
                "category": "arg",
                "name": "get_ast",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_astroid_module",
                "type": []
            },
            {
                "category": "arg",
                "name": "file",
                "type": []
            },
            {
                "category": "local",
                "name": "ast_node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_check_file",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_ignore_file",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "file_state",
                "type": [
                    "FileState"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            }
        ],
        "_discover_files@PyLinter": [
            {
                "category": "arg",
                "name": "files_or_modules",
                "type": []
            },
            {
                "category": "local",
                "name": "skip_subtrees",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_discover_files",
                "type": [
                    "typing.Generator",
                    "typing.Generator[typing.Generator]"
                ]
            }
        ],
        "_emit_stashed_messages@PyLinter": [
            {
                "category": "return",
                "name": "_emit_stashed_messages",
                "type": [
                    "None"
                ]
            }
        ],
        "_expand_files@PyLinter": [
            {
                "category": "arg",
                "name": "files_or_modules",
                "type": []
            },
            {
                "category": "local",
                "name": "message",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "_expand_files",
                "type": []
            }
        ],
        "_get_asts@PyLinter": [
            {
                "category": "arg",
                "name": "fileitems",
                "type": []
            },
            {
                "category": "arg",
                "name": "data",
                "type": []
            },
            {
                "category": "local",
                "name": "ast_per_fileitem",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "_get_asts",
                "type": [
                    "dict"
                ]
            }
        ],
        "_get_file_descr_from_stdin@PyLinter": [
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_file_descr_from_stdin",
                "type": [
                    "None",
                    "typing.Generator[FileItem]"
                ]
            },
            {
                "category": "local",
                "name": "modname",
                "type": [
                    "str"
                ]
            }
        ],
        "_get_namespace_for_file@PyLinter": [
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "arg",
                "name": "namespaces",
                "type": []
            },
            {
                "category": "local",
                "name": "namespace",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_get_namespace_for_file",
                "type": [
                    "None"
                ]
            }
        ],
        "_iterate_file_descrs@PyLinter": [
            {
                "category": "arg",
                "name": "files_or_modules",
                "type": []
            },
            {
                "category": "return",
                "name": "_iterate_file_descrs",
                "type": [
                    "typing.Generator[FileItem]"
                ]
            }
        ],
        "_lint_file@PyLinter": [
            {
                "category": "arg",
                "name": "file",
                "type": []
            },
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_astroid_module",
                "type": []
            },
            {
                "category": "local",
                "name": "_ignore_file",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "file_state",
                "type": [
                    "FileState"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "_lint_file",
                "type": [
                    "None"
                ]
            }
        ],
        "_lint_files@PyLinter": [
            {
                "category": "arg",
                "name": "ast_mapping",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_astroid_module",
                "type": []
            },
            {
                "category": "local",
                "name": "module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception",
                    "astroid_@_AstroidError"
                ]
            },
            {
                "category": "return",
                "name": "_lint_files",
                "type": [
                    "None"
                ]
            }
        ],
        "_load_reporter_by_class@global": [
            {
                "category": "arg",
                "name": "reporter_class",
                "type": []
            },
            {
                "category": "return",
                "name": "_load_reporter_by_class",
                "type": []
            }
        ],
        "_load_reporter_by_name@PyLinter": [
            {
                "category": "arg",
                "name": "reporter_name",
                "type": []
            },
            {
                "category": "return",
                "name": "_load_reporter_by_name",
                "type": []
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            }
        ],
        "_load_reporters@PyLinter": [
            {
                "category": "arg",
                "name": "reporter_names",
                "type": []
            },
            {
                "category": "return",
                "name": "_load_reporters",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "sub_reporters",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "output_files",
                "type": [
                    "list"
                ]
            }
        ],
        "_parse_error_mode@PyLinter": [
            {
                "category": "return",
                "name": "_parse_error_mode",
                "type": [
                    "None"
                ]
            }
        ],
        "_read_stdin@global": [
            {
                "category": "local",
                "name": "sys_",
                "type": [
                    "TextIOWrapper"
                ]
            },
            {
                "category": "return",
                "name": "_read_stdin",
                "type": []
            }
        ],
        "_report_evaluation@PyLinter": [
            {
                "category": "arg",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "note",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_report_evaluation",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "stats_dict",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "pnote",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            }
        ],
        "add_ignored_message@PyLinter": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": []
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "add_ignored_message",
                "type": [
                    "None"
                ]
            }
        ],
        "add_message@PyLinter": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "end_lineno",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "end_col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "end_lineno",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "end_col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "add_message",
                "type": [
                    "None"
                ]
            }
        ],
        "any_fail_on_issues@PyLinter": [
            {
                "category": "return",
                "name": "any_fail_on_issues",
                "type": [
                    "bool"
                ]
            }
        ],
        "check@PyLinter": [
            {
                "category": "arg",
                "name": "files_or_modules",
                "type": []
            },
            {
                "category": "local",
                "name": "files_or_modules",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "extra_packages_paths",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "check",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "data",
                "type": [
                    "None"
                ]
            }
        ],
        "check_astroid_module@PyLinter": [
            {
                "category": "arg",
                "name": "ast_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "walker",
                "type": []
            },
            {
                "category": "arg",
                "name": "rawcheckers",
                "type": []
            },
            {
                "category": "arg",
                "name": "tokencheckers",
                "type": []
            },
            {
                "category": "return",
                "name": "check_astroid_module",
                "type": []
            }
        ],
        "check_single_file_item@PyLinter": [
            {
                "category": "arg",
                "name": "file",
                "type": []
            },
            {
                "category": "return",
                "name": "check_single_file_item",
                "type": [
                    "None"
                ]
            }
        ],
        "disable_reporters@PyLinter": [
            {
                "category": "return",
                "name": "disable_reporters",
                "type": [
                    "None"
                ]
            }
        ],
        "enable_fail_on_messages@PyLinter": [
            {
                "category": "return",
                "name": "enable_fail_on_messages",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "fail_on_cats",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "fail_on_msgs",
                "type": [
                    "set"
                ]
            }
        ],
        "generate_reports@PyLinter": [
            {
                "category": "arg",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "score_value",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "generate_reports",
                "type": [
                    "None"
                ]
            }
        ],
        "get_ast@PyLinter": [
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "data",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "data",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "get_ast",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None",
                    "int"
                ]
            }
        ],
        "get_checker_names@PyLinter": [
            {
                "category": "return",
                "name": "get_checker_names",
                "type": [
                    "list"
                ]
            }
        ],
        "get_checkers@PyLinter": [
            {
                "category": "return",
                "name": "get_checkers",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "MSGS",
                "type": [
                    "dict[typing.Text, tuple[typing.Union[typing.Text,dict[typing.Text, typing.Union[list[tuple[typing.Text]],bool]]]]]"
                ]
            }
        ],
        "initialize@PyLinter": [
            {
                "category": "return",
                "name": "initialize",
                "type": [
                    "None"
                ]
            }
        ],
        "load_default_plugins@PyLinter": [
            {
                "category": "return",
                "name": "load_default_plugins",
                "type": [
                    "None"
                ]
            }
        ],
        "load_plugin_configuration@PyLinter": [
            {
                "category": "local",
                "name": "module_or_error",
                "type": [
                    "ModuleNotFoundError"
                ]
            },
            {
                "category": "local",
                "name": "_dynamic_plugins",
                "type": [
                    "dict[, bool]"
                ]
            },
            {
                "category": "return",
                "name": "load_plugin_configuration",
                "type": [
                    "None"
                ]
            }
        ],
        "load_plugin_modules@PyLinter": [
            {
                "category": "arg",
                "name": "modnames",
                "type": []
            },
            {
                "category": "arg",
                "name": "force",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "force",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "mnf_e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "load_plugin_modules",
                "type": [
                    "None"
                ]
            }
        ],
        "open@PyLinter": [
            {
                "category": "return",
                "name": "open",
                "type": [
                    "None"
                ]
            }
        ],
        "prepare_checkers@PyLinter": [
            {
                "category": "local",
                "name": "needed_checkers",
                "type": [
                    "list[PyLinter]"
                ]
            },
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "prepare_checkers",
                "type": [
                    "list[PyLinter]"
                ]
            }
        ],
        "register_checker@PyLinter": [
            {
                "category": "arg",
                "name": "checker",
                "type": []
            },
            {
                "category": "return",
                "name": "register_checker",
                "type": [
                    "None"
                ]
            }
        ],
        "register_reporter@PyLinter": [
            {
                "category": "arg",
                "name": "reporter_class",
                "type": []
            },
            {
                "category": "return",
                "name": "register_reporter",
                "type": [
                    "None"
                ]
            }
        ],
        "report_order@PyLinter": [
            {
                "category": "local",
                "name": "reports",
                "type": [
                    "list",
                    "list[PyLinter]"
                ]
            },
            {
                "category": "return",
                "name": "report_order",
                "type": [
                    "list[PyLinter]"
                ]
            }
        ],
        "set_current_module@PyLinter": [
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "filepath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "filepath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "set_current_module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "current_file",
                "type": [
                    "None"
                ]
            }
        ],
        "set_reporter@PyLinter": [
            {
                "category": "arg",
                "name": "reporter",
                "type": []
            },
            {
                "category": "local",
                "name": "reporter_",
                "type": [
                    "PyLinter"
                ]
            },
            {
                "category": "return",
                "name": "set_reporter",
                "type": [
                    "None"
                ]
            }
        ],
        "should_analyze_file@PyLinter": [
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "path",
                "type": []
            },
            {
                "category": "arg",
                "name": "is_argument",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "is_argument",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "should_analyze_file",
                "type": [
                    "bool"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/report_functions.py": {
        "global@global": [],
        "report_messages_by_module_stats@global": [
            {
                "category": "arg",
                "name": "sect",
                "type": []
            },
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "local",
                "name": "m_type",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "percent",
                "type": [
                    "int",
                    "float"
                ]
            },
            {
                "category": "local",
                "name": "sorted_result",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "report_messages_by_module_stats",
                "type": [
                    "None"
                ]
            }
        ],
        "report_messages_stats@global": [
            {
                "category": "arg",
                "name": "sect",
                "type": []
            },
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "local",
                "name": "in_order",
                "type": [
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "report_messages_stats",
                "type": [
                    "None"
                ]
            }
        ],
        "report_total_messages_stats@global": [
            {
                "category": "arg",
                "name": "sect",
                "type": []
            },
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "previous_stats",
                "type": []
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "report_total_messages_stats",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/run.py": {
        "__init__@Run": [
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "arg",
                "name": "reporter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "exit",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_rcfile",
                "type": [
                    "None",
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "_plugins",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "linter",
                "type": [
                    "LinterClass"
                ]
            },
            {
                "category": "local",
                "name": "linter_",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "reporter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "exit",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ProcessPoolExecutor",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "output",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "score_value",
                "type": [
                    "None"
                ]
            }
        ],
        "_cpu_count@global": [
            {
                "category": "local",
                "name": "cpu_share",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "cpu_count",
                "type": [
                    "None",
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "multiprocessing",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_cpu_count",
                "type": [
                    "int"
                ]
            }
        ],
        "_query_cpu@global": [
            {
                "category": "return",
                "name": "_query_cpu",
                "type": []
            }
        ],
        "_query_cpu_cgroupsv1@global": [
            {
                "category": "local",
                "name": "cpu_quota",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "avail_cpu",
                "type": [
                    "None",
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "file",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "cpu_period",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "cpu_shares",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_query_cpu_cgroupsv1",
                "type": [
                    "None",
                    "int"
                ]
            }
        ],
        "_query_cpu_cgroupv2@global": [
            {
                "category": "local",
                "name": "avail_cpu",
                "type": [
                    "None",
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "file",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "cpu_period",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "cpu_quota",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_query_cpu_cgroupv2",
                "type": [
                    "None",
                    "int"
                ]
            }
        ],
        "_query_cpu_handle_k8s_pods@global": [
            {
                "category": "arg",
                "name": "avail_cpu",
                "type": []
            },
            {
                "category": "local",
                "name": "avail_cpu",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_query_cpu_handle_k8s_pods",
                "type": [
                    "int"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "multiprocessing",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ProcessPoolExecutor",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/lint/utils.py": {
        "_augment_sys_path@global": [
            {
                "category": "arg",
                "name": "additional_paths",
                "type": []
            },
            {
                "category": "local",
                "name": "original",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "changes",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "seen",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "_augment_sys_path",
                "type": [
                    "list"
                ]
            }
        ],
        "augmented_sys_path@global": [
            {
                "category": "arg",
                "name": "additional_paths",
                "type": []
            },
            {
                "category": "return",
                "name": "augmented_sys_path",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "get_fatal_error_message@global": [
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "arg",
                "name": "issue_template_path",
                "type": []
            },
            {
                "category": "return",
                "name": "get_fatal_error_message",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [],
        "prepare_crash_report@global": [
            {
                "category": "arg",
                "name": "ex",
                "type": []
            },
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "arg",
                "name": "crash_file_path",
                "type": []
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "file_content",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "template",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "prepare_crash_report",
                "type": []
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/message/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/message/_deleted_message_ids.py": {
        "global@global": [
            {
                "category": "local",
                "name": "DELETED_MSGID_PREFIXES",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "DELETED_MESSAGES_IDS",
                "type": [
                    "dict[typing.Text, list[DeletedMessage]]"
                ]
            },
            {
                "category": "local",
                "name": "MOVED_TO_EXTENSIONS",
                "type": [
                    "dict[typing.Text, list[DeletedMessage]]"
                ]
            }
        ],
        "is_deleted_msgid@global": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "local",
                "name": "explanation",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]"
                ]
            },
            {
                "category": "local",
                "name": "deleted_messages",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]"
                ]
            },
            {
                "category": "local",
                "name": "DELETED_MESSAGES_IDS",
                "type": [
                    "dict[typing.Text, list[DeletedMessage]]"
                ]
            },
            {
                "category": "local",
                "name": "deleted_message",
                "type": [
                    "typing.Text",
                    "list[DeletedMessage]"
                ]
            },
            {
                "category": "return",
                "name": "is_deleted_msgid",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]",
                    "None"
                ]
            }
        ],
        "is_deleted_symbol@global": [
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "local",
                "name": "explanation",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]"
                ]
            },
            {
                "category": "local",
                "name": "deleted_messages",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]"
                ]
            },
            {
                "category": "local",
                "name": "DELETED_MESSAGES_IDS",
                "type": [
                    "dict[typing.Text, list[DeletedMessage]]"
                ]
            },
            {
                "category": "local",
                "name": "deleted_message",
                "type": [
                    "typing.Text",
                    "list[DeletedMessage]"
                ]
            },
            {
                "category": "return",
                "name": "is_deleted_symbol",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]",
                    "None"
                ]
            }
        ],
        "is_moved_msgid@global": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "local",
                "name": "explanation",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]"
                ]
            },
            {
                "category": "local",
                "name": "moved_messages",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]"
                ]
            },
            {
                "category": "local",
                "name": "MOVED_TO_EXTENSIONS",
                "type": [
                    "dict[typing.Text, list[DeletedMessage]]"
                ]
            },
            {
                "category": "local",
                "name": "moved_message",
                "type": [
                    "typing.Text",
                    "list[DeletedMessage]"
                ]
            },
            {
                "category": "return",
                "name": "is_moved_msgid",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]",
                    "None"
                ]
            }
        ],
        "is_moved_symbol@global": [
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "local",
                "name": "explanation",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]"
                ]
            },
            {
                "category": "local",
                "name": "moved_messages",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]"
                ]
            },
            {
                "category": "local",
                "name": "MOVED_TO_EXTENSIONS",
                "type": [
                    "dict[typing.Text, list[DeletedMessage]]"
                ]
            },
            {
                "category": "local",
                "name": "moved_message",
                "type": [
                    "typing.Text",
                    "list[DeletedMessage]"
                ]
            },
            {
                "category": "return",
                "name": "is_moved_symbol",
                "type": [
                    "tuple[typing.Union[typing.Text,list[DeletedMessage]]]",
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/message/message.py": {
        "__init__@Message": [
            {
                "category": "arg",
                "name": "msg_id",
                "type": []
            },
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "location",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "format@Message": [
            {
                "category": "arg",
                "name": "template",
                "type": []
            },
            {
                "category": "return",
                "name": "format",
                "type": []
            }
        ],
        "global@global": [],
        "location@Message": [
            {
                "category": "return",
                "name": "location",
                "type": [
                    "MessageLocationTuple"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/message/message_definition.py": {
        "__eq__@MessageDefinition": [
            {
                "category": "arg",
                "name": "other",
                "type": []
            },
            {
                "category": "return",
                "name": "__eq__",
                "type": [
                    "bool"
                ]
            }
        ],
        "__init__@MessageDefinition": [
            {
                "category": "arg",
                "name": "checker",
                "type": []
            },
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "description",
                "type": []
            },
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope",
                "type": []
            },
            {
                "category": "arg",
                "name": "minversion",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "maxversion",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "old_names",
                "type": []
            },
            {
                "category": "arg",
                "name": "shared",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "default_enabled",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "minversion",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "maxversion",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "shared",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "default_enabled",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "old_names",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__repr__@MessageDefinition": [
            {
                "category": "return",
                "name": "__repr__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "__str__@MessageDefinition": [
            {
                "category": "return",
                "name": "__str__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "check_message_definition@MessageDefinition": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "check_message_definition",
                "type": [
                    "None"
                ]
            }
        ],
        "check_msgid@MessageDefinition": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "return",
                "name": "check_msgid",
                "type": [
                    "None"
                ]
            }
        ],
        "format_help@MessageDefinition": [
            {
                "category": "arg",
                "name": "checkerref",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "checkerref",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "restr",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "restriction",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "message_id",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "format_help",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [],
        "may_be_emitted@MessageDefinition": [
            {
                "category": "arg",
                "name": "py_version",
                "type": []
            },
            {
                "category": "return",
                "name": "may_be_emitted",
                "type": [
                    "bool"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/message/message_definition_store.py": {
        "__init__@MessageDefinitionStore": [
            {
                "category": "arg",
                "name": "py_version",
                "type": []
            },
            {
                "category": "local",
                "name": "message_id_store",
                "type": [
                    "MessageIdStore"
                ]
            },
            {
                "category": "local",
                "name": "_messages_definitions",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "find_emittable_messages@MessageDefinitionStore": [
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "emittable",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "non_emittable",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "find_emittable_messages",
                "type": [
                    "tuple[list]"
                ]
            }
        ],
        "get_message_definitions@MessageDefinitionStore": [
            {
                "category": "arg",
                "name": "msgid_or_symbol",
                "type": []
            },
            {
                "category": "return",
                "name": "get_message_definitions",
                "type": [
                    "list"
                ]
            }
        ],
        "get_msg_display_string@MessageDefinitionStore": [
            {
                "category": "arg",
                "name": "msgid_or_symbol",
                "type": []
            },
            {
                "category": "return",
                "name": "get_msg_display_string",
                "type": [
                    "str"
                ]
            }
        ],
        "global@global": [],
        "help_message@MessageDefinitionStore": [
            {
                "category": "arg",
                "name": "msgids_or_symbols",
                "type": []
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "help_message",
                "type": [
                    "None"
                ]
            }
        ],
        "list_messages@MessageDefinitionStore": [
            {
                "category": "return",
                "name": "list_messages",
                "type": [
                    "None"
                ]
            }
        ],
        "messages@MessageDefinitionStore": [
            {
                "category": "return",
                "name": "messages",
                "type": []
            }
        ],
        "register_message@MessageDefinitionStore": [
            {
                "category": "arg",
                "name": "message",
                "type": []
            },
            {
                "category": "return",
                "name": "register_message",
                "type": [
                    "None"
                ]
            }
        ],
        "register_messages_from_checker@MessageDefinitionStore": [
            {
                "category": "arg",
                "name": "checker",
                "type": []
            },
            {
                "category": "return",
                "name": "register_messages_from_checker",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/message/message_id_store.py": {
        "__init__@MessageIdStore": [
            {
                "category": "local",
                "name": "__msgid_to_symbol",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "__symbol_to_msgid",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "__old_names",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "__active_msgids",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__len__@MessageIdStore": [
            {
                "category": "return",
                "name": "__len__",
                "type": [
                    "int"
                ]
            }
        ],
        "__repr__@MessageIdStore": [
            {
                "category": "local",
                "name": "result",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__repr__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_raise_duplicate_msgid@MessageIdStore": [
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "other_msgid",
                "type": []
            },
            {
                "category": "local",
                "name": "msgids",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "error_message",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_raise_duplicate_msgid",
                "type": [
                    "None"
                ]
            }
        ],
        "_raise_duplicate_symbol@MessageIdStore": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "other_symbol",
                "type": []
            },
            {
                "category": "local",
                "name": "symbols",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "error_message",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_raise_duplicate_symbol",
                "type": [
                    "None"
                ]
            }
        ],
        "add_legacy_msgid_and_symbol@MessageIdStore": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "new_msgid",
                "type": []
            },
            {
                "category": "return",
                "name": "add_legacy_msgid_and_symbol",
                "type": [
                    "None"
                ]
            }
        ],
        "add_msgid_and_symbol@MessageIdStore": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "return",
                "name": "add_msgid_and_symbol",
                "type": [
                    "None"
                ]
            }
        ],
        "check_msgid_and_symbol@MessageIdStore": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "local",
                "name": "existing_msgid",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "check_msgid_and_symbol",
                "type": [
                    "None"
                ]
            }
        ],
        "get_active_msgids@MessageIdStore": [
            {
                "category": "arg",
                "name": "msgid_or_symbol",
                "type": []
            },
            {
                "category": "return",
                "name": "get_active_msgids",
                "type": []
            },
            {
                "category": "local",
                "name": "deletion_reason",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "moved_reason",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "error_msg",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_msgid@MessageIdStore": [
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "return",
                "name": "get_msgid",
                "type": []
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_symbol@MessageIdStore": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "return",
                "name": "get_symbol",
                "type": []
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [],
        "register_message_definition@MessageIdStore": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "symbol",
                "type": []
            },
            {
                "category": "arg",
                "name": "old_names",
                "type": []
            },
            {
                "category": "return",
                "name": "register_message_definition",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__revision__",
                "type": [
                    "typing.Text"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/diadefslib.py": {
        "__init__@DefaultDiadefGenerator": [
            {
                "category": "arg",
                "name": "linker",
                "type": []
            },
            {
                "category": "arg",
                "name": "handler",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@DiaDefGenerator": [
            {
                "category": "arg",
                "name": "linker",
                "type": []
            },
            {
                "category": "arg",
                "name": "handler",
                "type": []
            },
            {
                "category": "local",
                "name": "module_names",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@DiadefsHandler": [
            {
                "category": "arg",
                "name": "config",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_levels@DiaDefGenerator": [
            {
                "category": "return",
                "name": "_get_levels",
                "type": [
                    "tuple"
                ]
            }
        ],
        "_set_default_options@DiaDefGenerator": [
            {
                "category": "local",
                "name": "self_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "anc_level",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "association_level",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_set_default_options",
                "type": [
                    "None"
                ]
            }
        ],
        "_set_option@DiaDefGenerator": [
            {
                "category": "arg",
                "name": "option",
                "type": []
            },
            {
                "category": "local",
                "name": "option",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_set_option",
                "type": [
                    "bool",
                    "None"
                ]
            }
        ],
        "add_class@DiaDefGenerator": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "add_class",
                "type": [
                    "None"
                ]
            }
        ],
        "class_diagram@ClassDiadefGenerator": [
            {
                "category": "arg",
                "name": "project",
                "type": []
            },
            {
                "category": "arg",
                "name": "klass",
                "type": []
            },
            {
                "category": "local",
                "name": "classdiagram",
                "type": [
                    "ClassDiagram"
                ]
            },
            {
                "category": "return",
                "name": "class_diagram",
                "type": [
                    "ClassDiagram"
                ]
            }
        ],
        "extract_classes@DiaDefGenerator": [
            {
                "category": "arg",
                "name": "klass_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "anc_level",
                "type": []
            },
            {
                "category": "arg",
                "name": "association_level",
                "type": []
            },
            {
                "category": "return",
                "name": "extract_classes",
                "type": [
                    "None"
                ]
            }
        ],
        "get_ancestors@DiaDefGenerator": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "level",
                "type": []
            },
            {
                "category": "return",
                "name": "get_ancestors",
                "type": [
                    "None",
                    "typing.Generator"
                ]
            }
        ],
        "get_associated@DiaDefGenerator": [
            {
                "category": "arg",
                "name": "klass_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "level",
                "type": []
            },
            {
                "category": "return",
                "name": "get_associated",
                "type": [
                    "None",
                    "typing.Generator"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "astroid_@_Instance"
                ]
            }
        ],
        "get_diadefs@DiadefsHandler": [
            {
                "category": "arg",
                "name": "project",
                "type": []
            },
            {
                "category": "arg",
                "name": "linker",
                "type": []
            },
            {
                "category": "local",
                "name": "diagrams",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "generator",
                "type": [
                    "ClassDiadefGenerator"
                ]
            },
            {
                "category": "return",
                "name": "get_diadefs",
                "type": [
                    "list"
                ]
            }
        ],
        "get_title@DiaDefGenerator": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "title",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "get_title",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [],
        "leave_project@DefaultDiadefGenerator": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "return",
                "name": "leave_project",
                "type": [
                    "tuple"
                ]
            }
        ],
        "show_node@DiaDefGenerator": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "show_node",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit_classdef@DefaultDiadefGenerator": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_importfrom@DefaultDiadefGenerator": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_importfrom",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@DefaultDiadefGenerator": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_project@DefaultDiadefGenerator": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "pkgdiagram",
                "type": [
                    "PackageDiagram",
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "classdiagram",
                "type": [
                    "ClassDiagram"
                ]
            },
            {
                "category": "return",
                "name": "visit_project",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/diagrams.py": {
        "__init__@ClassDiagram": [
            {
                "category": "arg",
                "name": "title",
                "type": []
            },
            {
                "category": "arg",
                "name": "mode",
                "type": []
            },
            {
                "category": "local",
                "name": "objects",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "relationships",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_nodes",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@ClassEntity": [
            {
                "category": "arg",
                "name": "title",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "attrs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "methods",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@DiagramEntity": [
            {
                "category": "arg",
                "name": "title",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "title",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@Figure": [
            {
                "category": "local",
                "name": "fig_id",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@Relationship": [
            {
                "category": "arg",
                "name": "from_object",
                "type": []
            },
            {
                "category": "arg",
                "name": "to_object",
                "type": []
            },
            {
                "category": "arg",
                "name": "relation_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "add_from_depend@PackageDiagram": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "from_module",
                "type": []
            },
            {
                "category": "return",
                "name": "add_from_depend",
                "type": [
                    "None"
                ]
            }
        ],
        "add_object@ClassDiagram": [
            {
                "category": "arg",
                "name": "title",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ent",
                "type": [
                    "ClassEntity"
                ]
            },
            {
                "category": "return",
                "name": "add_object",
                "type": [
                    "None"
                ]
            }
        ],
        "add_object@PackageDiagram": [
            {
                "category": "arg",
                "name": "title",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ent",
                "type": [
                    "PackageEntity"
                ]
            },
            {
                "category": "return",
                "name": "add_object",
                "type": [
                    "None"
                ]
            }
        ],
        "add_relationship@ClassDiagram": [
            {
                "category": "arg",
                "name": "from_object",
                "type": []
            },
            {
                "category": "arg",
                "name": "to_object",
                "type": []
            },
            {
                "category": "arg",
                "name": "relation_type",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "rel",
                "type": [
                    "Relationship"
                ]
            },
            {
                "category": "return",
                "name": "add_relationship",
                "type": [
                    "None"
                ]
            }
        ],
        "assign_association_relationship@ClassDiagram": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "arg",
                "name": "obj",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_relationship",
                "type": []
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "util_@_UninferableBase",
                    "astroid_@_Instance"
                ]
            },
            {
                "category": "return",
                "name": "assign_association_relationship",
                "type": [
                    "None"
                ]
            }
        ],
        "class_names@ClassDiagram": [
            {
                "category": "arg",
                "name": "nodes_lst",
                "type": []
            },
            {
                "category": "local",
                "name": "names",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "astroid_@_Instance"
                ]
            },
            {
                "category": "return",
                "name": "class_names",
                "type": [
                    "list"
                ]
            }
        ],
        "classe@ClassDiagram": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "classe",
                "type": []
            }
        ],
        "classes@ClassDiagram": [
            {
                "category": "return",
                "name": "classes",
                "type": [
                    "list"
                ]
            }
        ],
        "extract_relationships@ClassDiagram": [
            {
                "category": "local",
                "name": "obj_",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "extract_relationships",
                "type": [
                    "None"
                ]
            }
        ],
        "extract_relationships@PackageDiagram": [
            {
                "category": "local",
                "name": "package_obj_",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "extract_relationships",
                "type": [
                    "None"
                ]
            }
        ],
        "get_attrs@ClassDiagram": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "attrs",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "properties",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "node_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "get_attrs",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "get_methods@ClassDiagram": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "methods",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "get_methods",
                "type": [
                    "list"
                ]
            }
        ],
        "get_module@PackageDiagram": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "get_module",
                "type": []
            }
        ],
        "get_relationship@ClassDiagram": [
            {
                "category": "arg",
                "name": "from_object",
                "type": []
            },
            {
                "category": "arg",
                "name": "relation_type",
                "type": []
            },
            {
                "category": "local",
                "name": "rel_",
                "type": [
                    "from_object"
                ]
            },
            {
                "category": "return",
                "name": "get_relationship",
                "type": []
            }
        ],
        "get_relationships@ClassDiagram": [
            {
                "category": "arg",
                "name": "role",
                "type": []
            },
            {
                "category": "return",
                "name": "get_relationships",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": [],
        "has_node@ClassDiagram": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "has_node",
                "type": [
                    "bool"
                ]
            }
        ],
        "module@PackageDiagram": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "module",
                "type": []
            }
        ],
        "modules@PackageDiagram": [
            {
                "category": "return",
                "name": "modules",
                "type": [
                    "list"
                ]
            }
        ],
        "object_from_node@ClassDiagram": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "object_from_node",
                "type": []
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/dot_printer.py": {
        "__init__@DotPrinter": [
            {
                "category": "arg",
                "name": "title",
                "type": []
            },
            {
                "category": "arg",
                "name": "layout",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "use_automatic_namespace",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "layout",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "charset",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "use_automatic_namespace",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_build_label_for_node@DotPrinter": [
            {
                "category": "arg",
                "name": "properties",
                "type": []
            },
            {
                "category": "return",
                "name": "_build_label_for_node",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "label",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "attrs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "attrs_string",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "methods",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "method_name",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_close_graph@DotPrinter": [
            {
                "category": "return",
                "name": "_close_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "_escape_annotation_label@DotPrinter": [
            {
                "category": "arg",
                "name": "annotation_label",
                "type": []
            },
            {
                "category": "return",
                "name": "_escape_annotation_label",
                "type": []
            }
        ],
        "_open_graph@DotPrinter": [
            {
                "category": "return",
                "name": "_open_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_edge@DotPrinter": [
            {
                "category": "arg",
                "name": "from_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "to_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "arg",
                "name": "label",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ARROWS",
                "type": [
                    "dict[, dict[typing.Text, typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "arrowstyle",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "prop",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "attrs",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "label",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "emit_edge",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_node@DotPrinter": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "arg",
                "name": "properties",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "properties",
                "type": [
                    "None",
                    "NodeProperties"
                ]
            },
            {
                "category": "local",
                "name": "SHAPES",
                "type": [
                    "dict[, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "shape",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "properties_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "style",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "label_part",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "fontcolor_part",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "emit_node",
                "type": [
                    "None"
                ]
            }
        ],
        "generate@DotPrinter": [
            {
                "category": "arg",
                "name": "outputfile",
                "type": []
            },
            {
                "category": "local",
                "name": "graphviz_extensions",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "outputfile",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "target",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "outfile",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "generate",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "ALLOWED_CHARSETS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "SHAPES",
                "type": [
                    "dict[, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ARROWS",
                "type": [
                    "dict[, dict[typing.Text, typing.Text]]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/inspector.py": {
        "__init__@IdGeneratorMixIn": [
            {
                "category": "arg",
                "name": "start_value",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "start_value",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "id_count",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@Linker": [
            {
                "category": "arg",
                "name": "project",
                "type": []
            },
            {
                "category": "arg",
                "name": "tag",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "tag",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "associations_handler",
                "type": [
                    "AggregationsHandler"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@Project": [
            {
                "category": "arg",
                "name": "name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "uid",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "path",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "modules",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "locals",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__repr__@Project": [
            {
                "category": "return",
                "name": "__repr__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_astroid_wrapper@global": [
            {
                "category": "arg",
                "name": "func",
                "type": []
            },
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_astroid_wrapper",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "Exception"
                ]
            }
        ],
        "_imported_module@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "mod_path",
                "type": []
            },
            {
                "category": "arg",
                "name": "relative",
                "type": []
            },
            {
                "category": "local",
                "name": "module_",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "mod_path",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "mod_paths",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "_imported_module",
                "type": [
                    "None"
                ]
            }
        ],
        "add_module@Project": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "add_module",
                "type": [
                    "None"
                ]
            }
        ],
        "compute_module@Linker": [
            {
                "category": "arg",
                "name": "context_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "mod_path",
                "type": []
            },
            {
                "category": "return",
                "name": "compute_module",
                "type": [
                    "bool"
                ]
            }
        ],
        "generate_id@IdGeneratorMixIn": [
            {
                "category": "return",
                "name": "generate_id",
                "type": []
            }
        ],
        "get_children@Project": [
            {
                "category": "return",
                "name": "get_children",
                "type": []
            }
        ],
        "get_module@Project": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "return",
                "name": "get_module",
                "type": []
            }
        ],
        "global@global": [],
        "handle@AbstractAssociationHandler": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "return",
                "name": "handle",
                "type": [
                    "None"
                ]
            }
        ],
        "handle@AggregationsHandler": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "local",
                "name": "current",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "handle",
                "type": [
                    "None"
                ]
            }
        ],
        "handle@AssociationHandlerInterface": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "return",
                "name": "handle",
                "type": [
                    "None"
                ]
            }
        ],
        "handle@OtherAssociationsHandler": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "local",
                "name": "current",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "handle",
                "type": [
                    "None"
                ]
            }
        ],
        "handle_assignattr_type@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "parent",
                "type": []
            },
            {
                "category": "local",
                "name": "current",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "handle_assignattr_type",
                "type": [
                    "None"
                ]
            }
        ],
        "init_counter@IdGeneratorMixIn": [
            {
                "category": "arg",
                "name": "start_value",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "start_value",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "id_count",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "init_counter",
                "type": [
                    "None"
                ]
            }
        ],
        "project_from_files@global": [
            {
                "category": "arg",
                "name": "files",
                "type": []
            },
            {
                "category": "arg",
                "name": "func_wrapper",
                "type": []
            },
            {
                "category": "arg",
                "name": "project_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "black_list",
                "type": []
            },
            {
                "category": "arg",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "project_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "project",
                "type": [
                    "Project"
                ]
            },
            {
                "category": "local",
                "name": "verbose",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "ast",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "project_from_files",
                "type": [
                    "Project"
                ]
            }
        ],
        "set_next@AbstractAssociationHandler": [
            {
                "category": "arg",
                "name": "handler",
                "type": []
            },
            {
                "category": "return",
                "name": "set_next",
                "type": []
            }
        ],
        "set_next@AssociationHandlerInterface": [
            {
                "category": "arg",
                "name": "handler",
                "type": []
            },
            {
                "category": "return",
                "name": "set_next",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_assignname@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_assignname",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "frame",
                "type": [
                    "nodes_@_ClassDef",
                    "nodes_@_FunctionDef"
                ]
            }
        ],
        "visit_classdef@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_classdef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_functiondef@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_functiondef",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_import@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_import",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_importfrom@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "context_file",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "relative",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "fullname",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "visit_importfrom",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_module@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "list"
                ]
            }
        ],
        "visit_project@Linker": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_project",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/main.py": {
        "__init__@Run": [
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "local",
                "name": "DIRECTLY_SUPPORTED_FORMATS",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "DIRECTLY_SUPPORTED_FORMATS",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_COLOR_PALETTE",
                "type": [
                    "tuple[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "OPTIONS",
                "type": [
                    "tuple[typing.Union[tuple[typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,None]]]],tuple[typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,bool]]]],tuple[typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,tuple[typing.Text]]]]]]]"
                ]
            }
        ],
        "run@Run": [
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "return",
                "name": "run",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "extra_packages_paths",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "linker",
                "type": [
                    "Linker"
                ]
            },
            {
                "category": "local",
                "name": "handler",
                "type": [
                    "DiadefsHandler"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/mermaidjs_printer.py": {
        "_close_graph@HTMLMermaidJSPrinter": [
            {
                "category": "return",
                "name": "_close_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "_close_graph@MermaidJSPrinter": [
            {
                "category": "return",
                "name": "_close_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "_open_graph@HTMLMermaidJSPrinter": [
            {
                "category": "return",
                "name": "_open_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "_open_graph@MermaidJSPrinter": [
            {
                "category": "return",
                "name": "_open_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_edge@MermaidJSPrinter": [
            {
                "category": "arg",
                "name": "from_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "to_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "arg",
                "name": "label",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "edge",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "label",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "emit_edge",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_node@MermaidJSPrinter": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "arg",
                "name": "properties",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "properties",
                "type": [
                    "None",
                    "NodeProperties"
                ]
            },
            {
                "category": "local",
                "name": "body",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "emit_node",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/plantuml_printer.py": {
        "_close_graph@PlantUmlPrinter": [
            {
                "category": "return",
                "name": "_close_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "_open_graph@PlantUmlPrinter": [
            {
                "category": "local",
                "name": "layout",
                "type": [
                    "Layout_@_LEFT_TO_RIGHT",
                    "Layout_@_TOP_TO_BOTTOM"
                ]
            },
            {
                "category": "return",
                "name": "_open_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_edge@PlantUmlPrinter": [
            {
                "category": "arg",
                "name": "from_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "to_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "arg",
                "name": "label",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "edge",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "label",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "emit_edge",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_node@PlantUmlPrinter": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "arg",
                "name": "properties",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "properties",
                "type": [
                    "None",
                    "NodeProperties"
                ]
            },
            {
                "category": "local",
                "name": "properties_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "color",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "body",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "label",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "emit_node",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/printer.py": {
        "__init__@Printer": [
            {
                "category": "arg",
                "name": "title",
                "type": []
            },
            {
                "category": "arg",
                "name": "layout",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "use_automatic_namespace",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "layout",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "use_automatic_namespace",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "_indent",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_close_graph@Printer": [
            {
                "category": "return",
                "name": "_close_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "_dec_indent@Printer": [
            {
                "category": "return",
                "name": "_dec_indent",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_method_arguments@Printer": [
            {
                "category": "arg",
                "name": "method",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_method_arguments",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "first_arg",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "annotation_label",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_inc_indent@Printer": [
            {
                "category": "return",
                "name": "_inc_indent",
                "type": [
                    "None"
                ]
            }
        ],
        "_open_graph@Printer": [
            {
                "category": "return",
                "name": "_open_graph",
                "type": [
                    "None"
                ]
            }
        ],
        "emit@Printer": [
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "force_newline",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "force_newline",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "emit",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_edge@Printer": [
            {
                "category": "arg",
                "name": "from_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "to_node",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "arg",
                "name": "label",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "emit_edge",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_node@Printer": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_",
                "type": []
            },
            {
                "category": "arg",
                "name": "properties",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "emit_node",
                "type": [
                    "None"
                ]
            }
        ],
        "generate@Printer": [
            {
                "category": "arg",
                "name": "outputfile",
                "type": []
            },
            {
                "category": "local",
                "name": "outfile",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "generate",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/printer_factory.py": {
        "get_printer_for_filetype@global": [
            {
                "category": "arg",
                "name": "filetype",
                "type": []
            },
            {
                "category": "local",
                "name": "filetype_to_printer",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "return",
                "name": "get_printer_for_filetype",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "filetype_to_printer",
                "type": [
                    "dict[typing.Text, ]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/utils.py": {
        "__init__@FilterMixIn": [
            {
                "category": "arg",
                "name": "mode",
                "type": []
            },
            {
                "category": "local",
                "name": "__mode",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "MODES",
                "type": [
                    "dict[typing.Text, int]"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@LocalsVisitor": [
            {
                "category": "local",
                "name": "_cache",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_visited",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "check_graphviz_availability@global": [
            {
                "category": "return",
                "name": "check_graphviz_availability",
                "type": [
                    "None"
                ]
            }
        ],
        "check_if_graphviz_supports_format@global": [
            {
                "category": "arg",
                "name": "output_format",
                "type": []
            },
            {
                "category": "return",
                "name": "check_if_graphviz_supports_format",
                "type": [
                    "None"
                ]
            }
        ],
        "get_annotation@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "ann",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "nodes_@_AssignAttr"
                ]
            },
            {
                "category": "local",
                "name": "node_",
                "type": [
                    "nodes_@_AnnAssign"
                ]
            },
            {
                "category": "return",
                "name": "get_annotation",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "default",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "label",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ann_",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_annotation_label@global": [
            {
                "category": "arg",
                "name": "ann",
                "type": []
            },
            {
                "category": "local",
                "name": "ann",
                "type": [
                    "nodes_@_NodeNG"
                ]
            },
            {
                "category": "return",
                "name": "get_annotation_label",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_callbacks@LocalsVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "methods",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "get_callbacks",
                "type": [
                    "tuple"
                ]
            }
        ],
        "get_default_options@global": [
            {
                "category": "local",
                "name": "options",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "RCFILE",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "file_handle",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "get_default_options",
                "type": [
                    "list"
                ]
            }
        ],
        "get_visibility@global": [
            {
                "category": "arg",
                "name": "name",
                "type": []
            },
            {
                "category": "local",
                "name": "visibility",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "get_visibility",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "RCFILE",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "_SPECIAL",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "_PROTECTED",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "_PRIVATE",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "MODES",
                "type": [
                    "dict[typing.Text, int]"
                ]
            },
            {
                "category": "local",
                "name": "VIS_MOD",
                "type": [
                    "dict[typing.Text, int]"
                ]
            }
        ],
        "infer_node@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "infer_node",
                "type": [
                    "set"
                ]
            }
        ],
        "insert_default_options@global": [
            {
                "category": "return",
                "name": "insert_default_options",
                "type": [
                    "None"
                ]
            }
        ],
        "is_exception@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "is_exception",
                "type": [
                    "bool"
                ]
            }
        ],
        "show_attr@FilterMixIn": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "VIS_MOD",
                "type": [
                    "dict[typing.Text, int]"
                ]
            },
            {
                "category": "return",
                "name": "show_attr",
                "type": [
                    "bool"
                ]
            }
        ],
        "visit@LocalsVisitor": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "visit",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/pyreverse/writer.py": {
        "__init__@DiagramWriter": [
            {
                "category": "arg",
                "name": "config",
                "type": []
            },
            {
                "category": "local",
                "name": "file_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "used_colors",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "get_class_properties@DiagramWriter": [
            {
                "category": "arg",
                "name": "obj",
                "type": []
            },
            {
                "category": "local",
                "name": "properties",
                "type": [
                    "NodeProperties"
                ]
            },
            {
                "category": "return",
                "name": "get_class_properties",
                "type": [
                    "NodeProperties"
                ]
            }
        ],
        "get_package_properties@DiagramWriter": [
            {
                "category": "arg",
                "name": "obj",
                "type": []
            },
            {
                "category": "return",
                "name": "get_package_properties",
                "type": [
                    "NodeProperties"
                ]
            }
        ],
        "get_shape_color@DiagramWriter": [
            {
                "category": "arg",
                "name": "obj",
                "type": []
            },
            {
                "category": "return",
                "name": "get_shape_color",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "obj_",
                "type": [
                    "nodes_@_ClassDef"
                ]
            },
            {
                "category": "local",
                "name": "base_name",
                "type": [
                    "str"
                ]
            }
        ],
        "global@global": [],
        "save@DiagramWriter": [
            {
                "category": "return",
                "name": "save",
                "type": [
                    "None"
                ]
            }
        ],
        "set_printer@DiagramWriter": [
            {
                "category": "arg",
                "name": "file_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "basename",
                "type": []
            },
            {
                "category": "return",
                "name": "set_printer",
                "type": [
                    "None"
                ]
            }
        ],
        "write@DiagramWriter": [
            {
                "category": "arg",
                "name": "diadefs",
                "type": []
            },
            {
                "category": "local",
                "name": "diagram",
                "type": [
                    "PackageDiagram"
                ]
            },
            {
                "category": "local",
                "name": "file_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "write",
                "type": [
                    "None"
                ]
            }
        ],
        "write_classes@DiagramWriter": [
            {
                "category": "arg",
                "name": "diagram",
                "type": []
            },
            {
                "category": "local",
                "name": "rel_type",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "write_classes",
                "type": [
                    "None"
                ]
            }
        ],
        "write_packages@DiagramWriter": [
            {
                "category": "arg",
                "name": "diagram",
                "type": []
            },
            {
                "category": "local",
                "name": "module_info",
                "type": [
                    "dict",
                    "dict[, dict[typing.Text, int]]"
                ]
            },
            {
                "category": "local",
                "name": "mod",
                "type": [
                    "list[dict[typing.Text, int]]"
                ]
            },
            {
                "category": "return",
                "name": "write_packages",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "initialize@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "initialize",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/base_reporter.py": {
        "__init__@BaseReporter": [
            {
                "category": "arg",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "section",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "out",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_display@BaseReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "_display",
                "type": [
                    "None"
                ]
            }
        ],
        "display_messages@BaseReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "display_messages",
                "type": [
                    "None"
                ]
            }
        ],
        "display_reports@BaseReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "local",
                "name": "section",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "display_reports",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "handle_message@BaseReporter": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "return",
                "name": "handle_message",
                "type": [
                    "None"
                ]
            }
        ],
        "on_close@BaseReporter": [
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "previous_stats",
                "type": []
            },
            {
                "category": "return",
                "name": "on_close",
                "type": [
                    "None"
                ]
            }
        ],
        "on_set_current_module@BaseReporter": [
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "return",
                "name": "on_set_current_module",
                "type": [
                    "None"
                ]
            }
        ],
        "writeln@BaseReporter": [
            {
                "category": "arg",
                "name": "string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "writeln",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/collecting_reporter.py": {
        "__init__@CollectingReporter": [
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_display@CollectingReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "_display",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "reset@CollectingReporter": [
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "reset",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/json_reporter.py": {
        "_display@JSON2Reporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "_display",
                "type": [
                    "None"
                ]
            }
        ],
        "_display@JSONReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "_display",
                "type": [
                    "None"
                ]
            }
        ],
        "deserialize@JSON2Reporter": [
            {
                "category": "arg",
                "name": "message_as_json",
                "type": []
            },
            {
                "category": "return",
                "name": "deserialize",
                "type": [
                    "Message"
                ]
            }
        ],
        "deserialize@JSONReporter": [
            {
                "category": "arg",
                "name": "message_as_json",
                "type": []
            },
            {
                "category": "return",
                "name": "deserialize",
                "type": [
                    "Message"
                ]
            }
        ],
        "display_messages@JSON2Reporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "local",
                "name": "output",
                "type": [
                    "dict[typing.Text, list]"
                ]
            },
            {
                "category": "return",
                "name": "display_messages",
                "type": [
                    "None"
                ]
            }
        ],
        "display_messages@JSONReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "local",
                "name": "json_dumpable",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "display_messages",
                "type": [
                    "None"
                ]
            }
        ],
        "display_reports@JSON2Reporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "display_reports",
                "type": [
                    "None"
                ]
            }
        ],
        "display_reports@JSONReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "display_reports",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "serialize@JSON2Reporter": [
            {
                "category": "arg",
                "name": "message",
                "type": []
            },
            {
                "category": "return",
                "name": "serialize",
                "type": [
                    "JSONMessage"
                ]
            }
        ],
        "serialize@JSONReporter": [
            {
                "category": "arg",
                "name": "message",
                "type": []
            },
            {
                "category": "return",
                "name": "serialize",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            }
        ],
        "serialize_stats@JSON2Reporter": [
            {
                "category": "local",
                "name": "counts_dict",
                "type": [
                    "dict[typing.Text, ]"
                ]
            },
            {
                "category": "local",
                "name": "ex",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "score",
                "type": [
                    "typing.Text",
                    "float"
                ]
            },
            {
                "category": "return",
                "name": "serialize_stats",
                "type": [
                    "dict[typing.Text, typing.Union[dict[typing.Text, ],int,float]]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/multi_reporter.py": {
        "__del__@MultiReporter": [
            {
                "category": "return",
                "name": "__del__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@MultiReporter": [
            {
                "category": "arg",
                "name": "sub_reporters",
                "type": []
            },
            {
                "category": "arg",
                "name": "close_output_files",
                "type": []
            },
            {
                "category": "arg",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_linter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "out",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "display_messages@MultiReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "display_messages",
                "type": [
                    "None"
                ]
            }
        ],
        "display_reports@MultiReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "display_reports",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "handle_message@MultiReporter": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "return",
                "name": "handle_message",
                "type": [
                    "None"
                ]
            }
        ],
        "linter@MultiReporter": [
            {
                "category": "return",
                "name": "linter",
                "type": []
            }
        ],
        "on_close@MultiReporter": [
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "previous_stats",
                "type": []
            },
            {
                "category": "return",
                "name": "on_close",
                "type": [
                    "None"
                ]
            }
        ],
        "on_set_current_module@MultiReporter": [
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "return",
                "name": "on_set_current_module",
                "type": [
                    "None"
                ]
            }
        ],
        "out@MultiReporter": [
            {
                "category": "return",
                "name": "out",
                "type": []
            }
        ],
        "path_strip_prefix@MultiReporter": [
            {
                "category": "return",
                "name": "path_strip_prefix",
                "type": []
            }
        ],
        "writeln@MultiReporter": [
            {
                "category": "arg",
                "name": "string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "writeln",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/reports_handler_mix_in.py": {
        "__init__@ReportsHandlerMixIn": [
            {
                "category": "local",
                "name": "_reports_state",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "disable_report@ReportsHandlerMixIn": [
            {
                "category": "arg",
                "name": "reportid",
                "type": []
            },
            {
                "category": "return",
                "name": "disable_report",
                "type": [
                    "None"
                ]
            }
        ],
        "enable_report@ReportsHandlerMixIn": [
            {
                "category": "arg",
                "name": "reportid",
                "type": []
            },
            {
                "category": "return",
                "name": "enable_report",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "make_reports@ReportsHandlerMixIn": [
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "arg",
                "name": "old_stats",
                "type": []
            },
            {
                "category": "local",
                "name": "sect",
                "type": [
                    "Section"
                ]
            },
            {
                "category": "local",
                "name": "report_sect",
                "type": [
                    "Section"
                ]
            },
            {
                "category": "return",
                "name": "make_reports",
                "type": [
                    "Section"
                ]
            }
        ],
        "register_report@ReportsHandlerMixIn": [
            {
                "category": "arg",
                "name": "reportid",
                "type": []
            },
            {
                "category": "arg",
                "name": "r_title",
                "type": []
            },
            {
                "category": "arg",
                "name": "r_cb",
                "type": []
            },
            {
                "category": "arg",
                "name": "checker",
                "type": []
            },
            {
                "category": "return",
                "name": "register_report",
                "type": [
                    "None"
                ]
            }
        ],
        "report_is_enabled@ReportsHandlerMixIn": [
            {
                "category": "arg",
                "name": "reportid",
                "type": []
            },
            {
                "category": "return",
                "name": "report_is_enabled",
                "type": []
            }
        ],
        "report_order@ReportsHandlerMixIn": [
            {
                "category": "return",
                "name": "report_order",
                "type": [
                    "list"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/text.py": {
        "__get_ansi_code@MessageStyle": [
            {
                "category": "local",
                "name": "ansi_code",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "__get_ansi_code",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "__init__@ColorizedTextReporter": [
            {
                "category": "arg",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "color_mapping",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "color_mapping",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "ansi_terms",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@ParseableTextReporter": [
            {
                "category": "arg",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@TextReporter": [
            {
                "category": "arg",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "output",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_modules",
                "type": [
                    "set"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_colorize_ansi@MessageStyle": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "return",
                "name": "_colorize_ansi",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_display@TextReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "_display",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_decoration@ColorizedTextReporter": [
            {
                "category": "arg",
                "name": "msg_id",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_decoration",
                "type": [
                    "MessageStyle"
                ]
            }
        ],
        "colorize_ansi@global": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg_style",
                "type": []
            },
            {
                "category": "return",
                "name": "colorize_ansi",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "TITLE_UNDERLINES",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ANSI_PREFIX",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ANSI_END",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ANSI_RESET",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ANSI_STYLES",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ANSI_COLORS",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "MESSAGE_FIELDS",
                "type": [
                    "set"
                ]
            }
        ],
        "handle_message@ColorizedTextReporter": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "return",
                "name": "handle_message",
                "type": [
                    "None"
                ]
            }
        ],
        "handle_message@NoHeaderReporter": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "return",
                "name": "handle_message",
                "type": [
                    "None"
                ]
            }
        ],
        "handle_message@TextReporter": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "return",
                "name": "handle_message",
                "type": [
                    "None"
                ]
            }
        ],
        "make_header@global": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "return",
                "name": "make_header",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "on_set_current_module@TextReporter": [
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "local",
                "name": "_template",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "template",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "on_set_current_module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "MESSAGE_FIELDS",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "_fixed_template",
                "type": [
                    "str"
                ]
            }
        ],
        "register@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "return",
                "name": "register",
                "type": [
                    "None"
                ]
            }
        ],
        "write_message@GithubReporter": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "local",
                "name": "key",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "write_message",
                "type": [
                    "None"
                ]
            }
        ],
        "write_message@TextReporter": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "local",
                "name": "key",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "write_message",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/ureports/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "tuple[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/ureports/base_writer.py": {
        "begin_format@BaseWriter": [
            {
                "category": "local",
                "name": "section",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "begin_format",
                "type": [
                    "None"
                ]
            }
        ],
        "compute_content@BaseWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "local",
                "name": "out",
                "type": [
                    "StringIO"
                ]
            },
            {
                "category": "local",
                "name": "stream",
                "type": [
                    "StringIO"
                ]
            },
            {
                "category": "return",
                "name": "compute_content",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "end_format@BaseWriter": [
            {
                "category": "return",
                "name": "end_format",
                "type": [
                    "None"
                ]
            }
        ],
        "format@BaseWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "arg",
                "name": "stream",
                "type": []
            },
            {
                "category": "arg",
                "name": "encoding",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "encoding",
                "type": [
                    "None",
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "format",
                "type": [
                    "None"
                ]
            }
        ],
        "format_children@BaseWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "format_children",
                "type": [
                    "None"
                ]
            }
        ],
        "get_table_content@BaseWriter": [
            {
                "category": "arg",
                "name": "table",
                "type": []
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "list[list]",
                    "list[list[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "cols",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "get_table_content",
                "type": [
                    "list[list[typing.Text]]"
                ]
            }
        ],
        "global@global": [],
        "write@BaseWriter": [
            {
                "category": "arg",
                "name": "string",
                "type": []
            },
            {
                "category": "return",
                "name": "write",
                "type": [
                    "None"
                ]
            }
        ],
        "writeln@BaseWriter": [
            {
                "category": "arg",
                "name": "string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "writeln",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/ureports/nodes.py": {
        "__init__@BaseLayout": [
            {
                "category": "arg",
                "name": "children",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "child",
                "type": [
                    "VNode"
                ]
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@EvaluationSection": [
            {
                "category": "arg",
                "name": "message",
                "type": []
            },
            {
                "category": "arg",
                "name": "children",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "title",
                "type": [
                    "Paragraph"
                ]
            },
            {
                "category": "local",
                "name": "message_body",
                "type": [
                    "Paragraph"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@Section": [
            {
                "category": "arg",
                "name": "title",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "description",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "children",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "description",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "title",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "report_id",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@Table": [
            {
                "category": "arg",
                "name": "cols",
                "type": []
            },
            {
                "category": "arg",
                "name": "title",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "rheaders",
                "type": [
                    "int"
                ]
            },
            {
                "category": "arg",
                "name": "cheaders",
                "type": [
                    "int"
                ]
            },
            {
                "category": "arg",
                "name": "children",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "title",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "rheaders",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "cheaders",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@Text": [
            {
                "category": "arg",
                "name": "data",
                "type": []
            },
            {
                "category": "arg",
                "name": "escaped",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "escaped",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@VNode": [
            {
                "category": "local",
                "name": "parent",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "children",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__iter__@VNode": [
            {
                "category": "return",
                "name": "__iter__",
                "type": []
            }
        ],
        "accept@VNode": [
            {
                "category": "arg",
                "name": "visitor",
                "type": []
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "return",
                "name": "accept",
                "type": []
            }
        ],
        "add_text@BaseLayout": [
            {
                "category": "arg",
                "name": "text",
                "type": []
            },
            {
                "category": "return",
                "name": "add_text",
                "type": [
                    "None"
                ]
            }
        ],
        "append@BaseLayout": [
            {
                "category": "arg",
                "name": "child",
                "type": []
            },
            {
                "category": "local",
                "name": "child_",
                "type": [
                    "BaseLayout"
                ]
            },
            {
                "category": "return",
                "name": "append",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "insert@BaseLayout": [
            {
                "category": "arg",
                "name": "index",
                "type": []
            },
            {
                "category": "arg",
                "name": "child",
                "type": []
            },
            {
                "category": "local",
                "name": "child_",
                "type": [
                    "BaseLayout"
                ]
            },
            {
                "category": "return",
                "name": "insert",
                "type": [
                    "None"
                ]
            }
        ],
        "leave@VNode": [
            {
                "category": "arg",
                "name": "visitor",
                "type": []
            },
            {
                "category": "arg",
                "name": "kwargs",
                "type": []
            },
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "return",
                "name": "leave",
                "type": []
            }
        ],
        "parents@BaseLayout": [
            {
                "category": "local",
                "name": "parent",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "parents",
                "type": [
                    "list",
                    "list[None]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/reporters/ureports/text_writer.py": {
        "__init__@TextWriter": [
            {
                "category": "local",
                "name": "list_level",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "default_table@TextWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "arg",
                "name": "table_content",
                "type": []
            },
            {
                "category": "arg",
                "name": "cols_width",
                "type": []
            },
            {
                "category": "local",
                "name": "cols_width",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "format_strings",
                "type": [
                    "str",
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "table_linesep",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "headsep",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "split_strings",
                "type": [
                    "list[str]"
                ]
            },
            {
                "category": "return",
                "name": "default_table",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "TITLE_UNDERLINES",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "BULLETS",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "visit_evaluationsection@TextWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "local",
                "name": "section",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "visit_evaluationsection",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_paragraph@TextWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_paragraph",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_section@TextWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "local",
                "name": "section",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "visit_section",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_table@TextWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "local",
                "name": "cols_width",
                "type": [
                    "list[int]",
                    "list[typing.Union[int,int]]"
                ]
            },
            {
                "category": "return",
                "name": "visit_table",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_text@TextWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_text",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_title@TextWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "local",
                "name": "title",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "TITLE_UNDERLINES",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "visit_title",
                "type": [
                    "None"
                ]
            }
        ],
        "visit_verbatimtext@TextWriter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "visit_verbatimtext",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/_primer/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/_primer/package_to_lint.py": {
        "__init__@DirtyPrimerDirectoryException": [
            {
                "category": "arg",
                "name": "path",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__init__@PackageToLint": [
            {
                "category": "arg",
                "name": "url",
                "type": []
            },
            {
                "category": "arg",
                "name": "branch",
                "type": []
            },
            {
                "category": "arg",
                "name": "directories",
                "type": []
            },
            {
                "category": "arg",
                "name": "commit",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "pylint_additional_args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "pylintrc_relpath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "minimum_python",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "commit",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "pylint_additional_args",
                "type": [
                    "None",
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "pylintrc_relpath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "minimum_python",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_clone_repository@PackageToLint": [
            {
                "category": "local",
                "name": "options",
                "type": [
                    "dict[typing.Text, typing.Union[str,int]]"
                ]
            },
            {
                "category": "return",
                "name": "_clone_repository",
                "type": [
                    "str"
                ]
            }
        ],
        "_pull_repository@PackageToLint": [
            {
                "category": "local",
                "name": "repo",
                "type": [
                    "Repo"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "_pull_repository",
                "type": [
                    "str"
                ]
            }
        ],
        "clone_directory@PackageToLint": [
            {
                "category": "return",
                "name": "clone_directory",
                "type": []
            }
        ],
        "global@global": [],
        "lazy_clone@PackageToLint": [
            {
                "category": "return",
                "name": "lazy_clone",
                "type": []
            }
        ],
        "paths_to_lint@PackageToLint": [
            {
                "category": "return",
                "name": "paths_to_lint",
                "type": [
                    "list[str]"
                ]
            }
        ],
        "pylint_args@PackageToLint": [
            {
                "category": "local",
                "name": "options",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "pylint_args",
                "type": []
            }
        ],
        "pylintrc@PackageToLint": [
            {
                "category": "local",
                "name": "pylintrc_relpath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "pylintrc",
                "type": [
                    "typing.Text"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/_primer/primer.py": {
        "__init__@Primer": [
            {
                "category": "arg",
                "name": "primer_directory",
                "type": []
            },
            {
                "category": "arg",
                "name": "json_path",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_packages_to_lint_from_json@Primer": [
            {
                "category": "arg",
                "name": "json_path",
                "type": []
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "_get_packages_to_lint_from_json",
                "type": [
                    "dict[, PackageToLint]"
                ]
            }
        ],
        "_minimum_python_supported@Primer": [
            {
                "category": "arg",
                "name": "package_data",
                "type": []
            },
            {
                "category": "return",
                "name": "_minimum_python_supported",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "min_python_tuple",
                "type": [
                    "tuple[int]"
                ]
            }
        ],
        "global@global": [],
        "run@Primer": [
            {
                "category": "return",
                "name": "run",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/_primer/primer_command.py": {
        "__init__@PrimerCommand": [
            {
                "category": "arg",
                "name": "primer_directory",
                "type": []
            },
            {
                "category": "arg",
                "name": "packages",
                "type": []
            },
            {
                "category": "arg",
                "name": "config",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "run@PrimerCommand": [
            {
                "category": "return",
                "name": "run",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/_primer/primer_compare_command.py": {
        "_create_comment@CompareCommand": [
            {
                "category": "arg",
                "name": "all_missing_messages",
                "type": []
            },
            {
                "category": "arg",
                "name": "all_new_messages",
                "type": []
            },
            {
                "category": "local",
                "name": "comment",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "MAX_GITHUB_COMMENT_LENGTH",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_create_comment",
                "type": []
            }
        ],
        "_create_comment_for_package@CompareCommand": [
            {
                "category": "arg",
                "name": "package",
                "type": []
            },
            {
                "category": "arg",
                "name": "new_messages",
                "type": []
            },
            {
                "category": "arg",
                "name": "missing_messages",
                "type": []
            },
            {
                "category": "local",
                "name": "comment",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "count",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "astroid_errors",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "new_non_astroid_messages",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "filepath",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "_create_comment_for_package",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_cross_reference@CompareCommand": [
            {
                "category": "arg",
                "name": "main_data",
                "type": []
            },
            {
                "category": "arg",
                "name": "pr_data",
                "type": []
            },
            {
                "category": "local",
                "name": "missing_messages_data",
                "type": [
                    "dict",
                    "dict[, PackageData]"
                ]
            },
            {
                "category": "local",
                "name": "package_missing_messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_cross_reference",
                "type": [
                    "tuple[dict[, PackageData]]"
                ]
            }
        ],
        "_load_json@CompareCommand": [
            {
                "category": "arg",
                "name": "file_path",
                "type": []
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "_load_json",
                "type": []
            }
        ],
        "_truncate_comment@CompareCommand": [
            {
                "category": "arg",
                "name": "comment",
                "type": []
            },
            {
                "category": "local",
                "name": "hash_information",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "comment",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "MAX_GITHUB_COMMENT_LENGTH",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "truncation_information",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "max_len",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "_truncate_comment",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "MAX_GITHUB_COMMENT_LENGTH",
                "type": [
                    "int"
                ]
            }
        ],
        "run@CompareCommand": [
            {
                "category": "local",
                "name": "self_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "main_data",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "pr_data",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "run",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/_primer/primer_prepare_command.py": {
        "global@global": [],
        "run@PrepareCommand": [
            {
                "category": "local",
                "name": "commit_string",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "version_string",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "run",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/_primer/primer_run_command.py": {
        "_filter_fatal_errors@RunCommand": [
            {
                "category": "arg",
                "name": "messages",
                "type": []
            },
            {
                "category": "local",
                "name": "fatal_msgs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "GITHUB_CRASH_TEMPLATE_LOCATION",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "CRASH_TEMPLATE_INTRO",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_filter_fatal_errors",
                "type": [
                    "list"
                ]
            }
        ],
        "_lint_package@RunCommand": [
            {
                "category": "arg",
                "name": "package_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "data",
                "type": []
            },
            {
                "category": "local",
                "name": "enables",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "disables",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "additional",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "output",
                "type": [
                    "StringIO"
                ]
            },
            {
                "category": "local",
                "name": "reporter",
                "type": [
                    "JSONReporter"
                ]
            },
            {
                "category": "local",
                "name": "pylint_exit_code",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "fatal_msgs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_lint_package",
                "type": [
                    "tuple[list]"
                ]
            }
        ],
        "_print_msgs@RunCommand": [
            {
                "category": "arg",
                "name": "msgs",
                "type": []
            },
            {
                "category": "return",
                "name": "_print_msgs",
                "type": [
                    "str"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "GITHUB_CRASH_TEMPLATE_LOCATION",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "CRASH_TEMPLATE_INTRO",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "run@RunCommand": [
            {
                "category": "local",
                "name": "packages",
                "type": [
                    "dict",
                    "dict[, PackageData]"
                ]
            },
            {
                "category": "local",
                "name": "fatal_msgs",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "self_",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "local",
                "name": "plural",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "run",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/_run.py": {
        "__init__@_Run": [
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "arg",
                "name": "reporter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "exit",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "reporter",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "exit",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_add_rcfile_default_pylintrc@global": [
            {
                "category": "arg",
                "name": "args",
                "type": []
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "list[typing.Union[int,typing.Text]]"
                ]
            },
            {
                "category": "return",
                "name": "_add_rcfile_default_pylintrc",
                "type": [
                    "list[typing.Union[int,typing.Text]]"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/checker_test_case.py": {
        "assertAddsMessages@CheckerTestCase": [
            {
                "category": "arg",
                "name": "ignore_position",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "messages",
                "type": []
            },
            {
                "category": "return",
                "name": "assertAddsMessages",
                "type": [
                    "typing.Generator"
                ]
            },
            {
                "category": "local",
                "name": "no_msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "expected",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "got_str",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ignore_position",
                "type": [
                    "bool"
                ]
            }
        ],
        "assertNoMessages@CheckerTestCase": [
            {
                "category": "return",
                "name": "assertNoMessages",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "global@global": [],
        "setup_method@CheckerTestCase": [
            {
                "category": "local",
                "name": "linter",
                "type": [
                    "UnittestLinter"
                ]
            },
            {
                "category": "return",
                "name": "setup_method",
                "type": [
                    "None"
                ]
            }
        ],
        "walk@CheckerTestCase": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "walker",
                "type": [
                    "ASTWalker"
                ]
            },
            {
                "category": "return",
                "name": "walk",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/configuration_test.py": {
        "get_expected_configuration@global": [
            {
                "category": "arg",
                "name": "configuration_path",
                "type": []
            },
            {
                "category": "arg",
                "name": "default_configuration",
                "type": []
            },
            {
                "category": "local",
                "name": "EXPECTED_CONF_APPEND_KEY",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "EXPECTED_CONF_REMOVE_KEY",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "new_value",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "get_expected_configuration",
                "type": []
            }
        ],
        "get_expected_or_default@global": [
            {
                "category": "arg",
                "name": "tested_configuration_file",
                "type": []
            },
            {
                "category": "arg",
                "name": "suffix",
                "type": []
            },
            {
                "category": "arg",
                "name": "default",
                "type": []
            },
            {
                "category": "local",
                "name": "expected",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "path",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            },
            {
                "category": "return",
                "name": "get_expected_or_default",
                "type": [
                    "str"
                ]
            }
        ],
        "get_expected_output@global": [
            {
                "category": "arg",
                "name": "configuration_path",
                "type": []
            },
            {
                "category": "arg",
                "name": "user_specific_path",
                "type": []
            },
            {
                "category": "local",
                "name": "exit_code",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "get_expected_output",
                "type": [
                    "tuple[typing.Union[int,typing.Text]]",
                    "tuple[int]"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            }
        ],
        "get_related_files@global": [
            {
                "category": "arg",
                "name": "tested_configuration_file",
                "type": []
            },
            {
                "category": "arg",
                "name": "suffix_filter",
                "type": []
            },
            {
                "category": "local",
                "name": "conf_path",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "return",
                "name": "get_related_files",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "EXPECTED_CONF_APPEND_KEY",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "EXPECTED_CONF_REMOVE_KEY",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "run_using_a_configuration_file@global": [
            {
                "category": "arg",
                "name": "configuration_path",
                "type": []
            },
            {
                "category": "arg",
                "name": "file_to_lint",
                "type": []
            },
            {
                "category": "local",
                "name": "configuration_path",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "check",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "runner",
                "type": [
                    "Run"
                ]
            },
            {
                "category": "return",
                "name": "run_using_a_configuration_file",
                "type": [
                    "Run"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/constants.py": {
        "global@global": [
            {
                "category": "local",
                "name": "SYS_VERS_STR",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TITLE_UNDERLINES",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "UPDATE_OPTION",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "UPDATE_FILE",
                "type": [
                    "Path"
                ]
            },
            {
                "category": "local",
                "name": "_MESSAGE",
                "type": [
                    "dict[typing.Text, typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "_OPERATORS",
                "type": [
                    "dict[typing.Text, ]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/functional/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/functional/find_functional_tests.py": {
        "_check_functional_tests_structure@global": [
            {
                "category": "arg",
                "name": "directory",
                "type": []
            },
            {
                "category": "arg",
                "name": "max_file_per_directory",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_functional_tests_structure",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "files",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "dirs",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "directory_does_not_exists",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "local",
                "name": "misplaced_file",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "IGNORED_PARENT_DIRS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "IGNORED_PARENT_PARENT_DIRS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_get_files_from_dir@global": [
            {
                "category": "arg",
                "name": "path",
                "type": []
            },
            {
                "category": "arg",
                "name": "violations",
                "type": []
            },
            {
                "category": "local",
                "name": "files_without_leading_underscore",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_get_files_from_dir",
                "type": [
                    "list"
                ]
            }
        ],
        "get_functional_test_files_from_directory@global": [
            {
                "category": "arg",
                "name": "input_dir",
                "type": []
            },
            {
                "category": "arg",
                "name": "max_file_per_directory",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "REASONABLY_DISPLAYABLE_VERTICALLY",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "suite",
                "type": [
                    "list",
                    "list[FunctionalTestFile]"
                ]
            },
            {
                "category": "local",
                "name": "max_file_per_directory",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "get_functional_test_files_from_directory",
                "type": [
                    "list[FunctionalTestFile]"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "REASONABLY_DISPLAYABLE_VERTICALLY",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "IGNORED_PARENT_DIRS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "IGNORED_PARENT_PARENT_DIRS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "walk@global": [
            {
                "category": "arg",
                "name": "path",
                "type": []
            },
            {
                "category": "local",
                "name": "violations",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "violations_msgs",
                "type": [
                    "set",
                    "set[str]"
                ]
            },
            {
                "category": "local",
                "name": "error_msg",
                "type": [
                    "typing.Text",
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "walk",
                "type": [
                    "typing.Generator"
                ]
            },
            {
                "category": "local",
                "name": "e",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "local",
                "name": "_msg",
                "type": [
                    "typing.Text"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/functional/lint_module_output_update.py": {
        "_check_output_text@LintModuleOutputUpdate": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "arg",
                "name": "expected_output",
                "type": []
            },
            {
                "category": "arg",
                "name": "actual_output",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_output_text",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "f",
                "type": [
                    "typing.IO"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/functional/test_file.py": {
        "__init__@FunctionalTestFile": [
            {
                "category": "arg",
                "name": "directory",
                "type": []
            },
            {
                "category": "arg",
                "name": "filename",
                "type": []
            },
            {
                "category": "local",
                "name": "options",
                "type": [
                    "dict[typing.Text, typing.Union[tuple[int],list,bool]]"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__repr__@FunctionalTestFile": [
            {
                "category": "return",
                "name": "__repr__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_file_type@FunctionalTestFile": [
            {
                "category": "arg",
                "name": "ext",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_exists",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "check_exists",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_file_type",
                "type": []
            }
        ],
        "_parse_options@FunctionalTestFile": [
            {
                "category": "return",
                "name": "_parse_options",
                "type": [
                    "None"
                ]
            }
        ],
        "expected_output@FunctionalTestFile": [
            {
                "category": "return",
                "name": "expected_output",
                "type": []
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "POSSIBLE_TEST_OPTIONS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ],
        "module@FunctionalTestFile": [
            {
                "category": "return",
                "name": "module",
                "type": [
                    "str"
                ]
            }
        ],
        "option_file@FunctionalTestFile": [
            {
                "category": "return",
                "name": "option_file",
                "type": []
            }
        ],
        "parse_python_version@global": [
            {
                "category": "arg",
                "name": "ver_str",
                "type": []
            },
            {
                "category": "return",
                "name": "parse_python_version",
                "type": [
                    "tuple[int]"
                ]
            }
        ],
        "source@FunctionalTestFile": [
            {
                "category": "return",
                "name": "source",
                "type": []
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/get_test_info.py": {
        "_get_tests_info@global": [
            {
                "category": "arg",
                "name": "input_dir",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg_dir",
                "type": []
            },
            {
                "category": "arg",
                "name": "prefix",
                "type": []
            },
            {
                "category": "arg",
                "name": "suffix",
                "type": []
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "list",
                    "list[tuple]"
                ]
            },
            {
                "category": "return",
                "name": "_get_tests_info",
                "type": [
                    "list[tuple]"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/global_test_linter.py": {
        "create_test_linter@global": [
            {
                "category": "local",
                "name": "test_reporter",
                "type": [
                    "GenericTestReporter"
                ]
            },
            {
                "category": "local",
                "name": "linter_",
                "type": [
                    "PyLinter"
                ]
            },
            {
                "category": "local",
                "name": "linter__",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "create_test_linter",
                "type": [
                    "PyLinter"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/lint_module_test.py": {
        "__init__@LintModuleTest": [
            {
                "category": "arg",
                "name": "test_file",
                "type": []
            },
            {
                "category": "arg",
                "name": "config",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_test_reporter",
                "type": [
                    "FunctionalTestReporter"
                ]
            },
            {
                "category": "local",
                "name": "_linter",
                "type": [
                    "PyLinter"
                ]
            },
            {
                "category": "local",
                "name": "self_",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "config",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "messages_to_enable",
                "type": [
                    "set",
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "_check_end_position",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_config",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__str__@LintModuleTest": [
            {
                "category": "return",
                "name": "__str__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_check_output_text@LintModuleTest": [
            {
                "category": "arg",
                "name": "_",
                "type": []
            },
            {
                "category": "arg",
                "name": "expected_output",
                "type": []
            },
            {
                "category": "arg",
                "name": "actual_output",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_output_text",
                "type": [
                    "None"
                ]
            }
        ],
        "_get_actual@LintModuleTest": [
            {
                "category": "local",
                "name": "received_msgs",
                "type": [
                    "Counter"
                ]
            },
            {
                "category": "local",
                "name": "received_output_lines",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_get_actual",
                "type": [
                    "tuple[typing.Union[Counter,list]]"
                ]
            }
        ],
        "_get_expected@LintModuleTest": [
            {
                "category": "local",
                "name": "expected_msgs",
                "type": [
                    "Counter"
                ]
            },
            {
                "category": "local",
                "name": "expected_output_lines",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_get_expected",
                "type": [
                    "tuple[typing.Union[Counter,list]]"
                ]
            }
        ],
        "_open_expected_file@LintModuleTest": [
            {
                "category": "return",
                "name": "_open_expected_file",
                "type": [
                    "typing.IO",
                    "StringIO"
                ]
            }
        ],
        "_open_source_file@LintModuleTest": [
            {
                "category": "return",
                "name": "_open_source_file",
                "type": [
                    "typing.IO"
                ]
            }
        ],
        "_runTest@LintModuleTest": [
            {
                "category": "local",
                "name": "__tracebackhide__",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "modules_to_check",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "_runTest",
                "type": [
                    "None"
                ]
            }
        ],
        "_should_be_skipped_due_to_version@LintModuleTest": [
            {
                "category": "return",
                "name": "_should_be_skipped_due_to_version",
                "type": [
                    "bool"
                ]
            }
        ],
        "error_msg_for_unequal_messages@LintModuleTest": [
            {
                "category": "arg",
                "name": "actual_messages",
                "type": []
            },
            {
                "category": "arg",
                "name": "expected_messages",
                "type": []
            },
            {
                "category": "arg",
                "name": "actual_output",
                "type": []
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "error_msg",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "error_msg_for_unequal_messages",
                "type": [
                    "str"
                ]
            }
        ],
        "error_msg_for_unequal_output@LintModuleTest": [
            {
                "category": "arg",
                "name": "expected_lines",
                "type": []
            },
            {
                "category": "arg",
                "name": "received_lines",
                "type": []
            },
            {
                "category": "local",
                "name": "error_msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "expected_csv",
                "type": [
                    "StringIO"
                ]
            },
            {
                "category": "return",
                "name": "error_msg_for_unequal_output",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_expected_messages@LintModuleTest": [
            {
                "category": "arg",
                "name": "stream",
                "type": []
            },
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "Counter"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "match",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "lineno",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "get_expected_messages",
                "type": [
                    "Counter"
                ]
            }
        ],
        "global@global": [],
        "multiset_difference@LintModuleTest": [
            {
                "category": "arg",
                "name": "expected_entries",
                "type": []
            },
            {
                "category": "arg",
                "name": "actual_entries",
                "type": []
            },
            {
                "category": "local",
                "name": "unexpected",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "return",
                "name": "multiset_difference",
                "type": [
                    "tuple[dict]"
                ]
            }
        ],
        "runTest@LintModuleTest": [
            {
                "category": "return",
                "name": "runTest",
                "type": [
                    "None"
                ]
            }
        ],
        "setUp@LintModuleTest": [
            {
                "category": "local",
                "name": "missing",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "msg",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "setUp",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/output_line.py": {
        "_get_column@OutputLine": [
            {
                "category": "arg",
                "name": "column",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_column",
                "type": [
                    "int"
                ]
            }
        ],
        "_get_end_line_and_end_col@OutputLine": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_endline",
                "type": []
            },
            {
                "category": "return",
                "name": "_get_end_line_and_end_col",
                "type": [
                    "None"
                ]
            }
        ],
        "_value_to_optional_int@OutputLine": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_value_to_optional_int",
                "type": [
                    "None",
                    "int"
                ]
            }
        ],
        "from_csv@OutputLine": [
            {
                "category": "arg",
                "name": "cls",
                "type": []
            },
            {
                "category": "arg",
                "name": "row",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_endline",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "row",
                "type": [
                    "str",
                    "list[str]"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "check_endline",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "from_csv",
                "type": []
            }
        ],
        "from_msg@OutputLine": [
            {
                "category": "arg",
                "name": "cls",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "check_endline",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "check_endline",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "from_msg",
                "type": []
            }
        ],
        "global@global": [],
        "to_csv@OutputLine": [
            {
                "category": "return",
                "name": "to_csv",
                "type": [
                    "tuple[str]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/pyreverse.py": {
        "__init__@PyreverseConfig": [
            {
                "category": "arg",
                "name": "mode",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "classes",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "show_ancestors",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "all_ancestors",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "show_associated",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "all_associated",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "no_standalone",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "show_builtin",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "show_stdlib",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "module_names",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "only_classnames",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "output_format",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "colorized",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "arg",
                "name": "max_color_depth",
                "type": [
                    "int"
                ]
            },
            {
                "category": "arg",
                "name": "color_palette",
                "type": []
            },
            {
                "category": "arg",
                "name": "ignore_list",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "arg",
                "name": "project",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "arg",
                "name": "output_directory",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "mode",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "classes",
                "type": [
                    "None",
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "show_ancestors",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "all_ancestors",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "show_associated",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "all_associated",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "no_standalone",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "show_builtin",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "show_stdlib",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "module_names",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "only_classnames",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "output_format",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "colorized",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "max_color_depth",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "ignore_list",
                "type": [
                    "tuple"
                ]
            },
            {
                "category": "local",
                "name": "project",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "output_directory",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_read_config@global": [
            {
                "category": "arg",
                "name": "config_file",
                "type": []
            },
            {
                "category": "return",
                "name": "_read_config",
                "type": [
                    "dict[typing.Text, list]"
                ]
            }
        ],
        "get_functional_test_files@global": [
            {
                "category": "arg",
                "name": "root_directory",
                "type": []
            },
            {
                "category": "local",
                "name": "test_files",
                "type": [
                    "list",
                    "list[FunctionalPyreverseTestfile]"
                ]
            },
            {
                "category": "return",
                "name": "get_functional_test_files",
                "type": [
                    "list[FunctionalPyreverseTestfile]"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/reporter_for_tests.py": {
        "__init__@GenericTestReporter": [
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_display@FunctionalTestReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "_display",
                "type": [
                    "None"
                ]
            }
        ],
        "_display@GenericTestReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "_display",
                "type": [
                    "None"
                ]
            }
        ],
        "_display@MinimalTestReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "_display",
                "type": [
                    "None"
                ]
            }
        ],
        "display_reports@FunctionalTestReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "display_reports",
                "type": [
                    "None"
                ]
            }
        ],
        "display_reports@GenericTestReporter": [
            {
                "category": "arg",
                "name": "layout",
                "type": []
            },
            {
                "category": "return",
                "name": "display_reports",
                "type": [
                    "None"
                ]
            }
        ],
        "finalize@GenericTestReporter": [
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list",
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "obj",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "message",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "finalize",
                "type": []
            }
        ],
        "global@global": [],
        "handle_message@GenericTestReporter": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "return",
                "name": "handle_message",
                "type": [
                    "None"
                ]
            }
        ],
        "on_set_current_module@GenericTestReporter": [
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "return",
                "name": "on_set_current_module",
                "type": [
                    "None"
                ]
            }
        ],
        "on_set_current_module@MinimalTestReporter": [
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "arg",
                "name": "filepath",
                "type": []
            },
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "on_set_current_module",
                "type": [
                    "None"
                ]
            }
        ],
        "reset@GenericTestReporter": [
            {
                "category": "local",
                "name": "out",
                "type": [
                    "StringIO"
                ]
            },
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "reset",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/tokenize_str.py": {
        "_tokenize_str@global": [
            {
                "category": "arg",
                "name": "code",
                "type": []
            },
            {
                "category": "return",
                "name": "_tokenize_str",
                "type": [
                    "list"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/unittest_linter.py": {
        "__init__@UnittestLinter": [
            {
                "category": "local",
                "name": "_messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "add_message@UnittestLinter": [
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "end_lineno",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "end_col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "confidence",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "line",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "end_lineno",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "end_col_offset",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "args",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "add_message",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "is_message_enabled@UnittestLinter": [
            {
                "category": "arg",
                "name": "unused_kwargs",
                "type": []
            },
            {
                "category": "arg",
                "name": "unused_args",
                "type": []
            },
            {
                "category": "return",
                "name": "is_message_enabled",
                "type": [
                    "bool"
                ]
            }
        ],
        "release_messages@UnittestLinter": [
            {
                "category": "local",
                "name": "_messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "return",
                "name": "release_messages",
                "type": []
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/testutils/utils.py": {
        "_patch_streams@global": [
            {
                "category": "arg",
                "name": "out",
                "type": []
            },
            {
                "category": "return",
                "name": "_patch_streams",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "_test_cwd@global": [
            {
                "category": "arg",
                "name": "current_working_directory",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "current_working_directory",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_test_cwd",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "_test_environ_pythonpath@global": [
            {
                "category": "arg",
                "name": "new_pythonpath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "original_pythonpath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "new_pythonpath",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_test_environ_pythonpath",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "_test_sys_path@global": [
            {
                "category": "arg",
                "name": "replacement_sys_path",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "replacement_sys_path",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "_test_sys_path",
                "type": [
                    "typing.Generator"
                ]
            }
        ],
        "create_files@global": [
            {
                "category": "arg",
                "name": "paths",
                "type": []
            },
            {
                "category": "arg",
                "name": "chroot",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "dirs",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "files",
                "type": [
                    "set"
                ]
            },
            {
                "category": "local",
                "name": "chroot",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "create_files",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/typing.py": {
        "__call__@GetProjectCallable": [
            {
                "category": "arg",
                "name": "module",
                "type": []
            },
            {
                "category": "arg",
                "name": "name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "__call__",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": []
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/utils/__init__.py": {
        "global@global": [
            {
                "category": "local",
                "name": "__all__",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/utils/ast_walker.py": {
        "__init__@ASTWalker": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "nbstatements",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "exception_msg",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_is_method_enabled@ASTWalker": [
            {
                "category": "arg",
                "name": "method",
                "type": []
            },
            {
                "category": "return",
                "name": "_is_method_enabled",
                "type": [
                    "bool"
                ]
            }
        ],
        "add_checker@ASTWalker": [
            {
                "category": "arg",
                "name": "checker",
                "type": []
            },
            {
                "category": "local",
                "name": "vcids",
                "type": [
                    "set",
                    "set[str]"
                ]
            },
            {
                "category": "local",
                "name": "lcids",
                "type": [
                    "set",
                    "set[str]"
                ]
            },
            {
                "category": "local",
                "name": "member",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "cid",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "add_checker",
                "type": [
                    "None"
                ]
            }
        ],
        "global@global": [],
        "walk@ASTWalker": [
            {
                "category": "arg",
                "name": "astroid",
                "type": []
            },
            {
                "category": "local",
                "name": "exception_msg",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "walk",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/utils/docs.py": {
        "_get_checkers_documentation@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "show_options",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "show_options",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_get_checkers_documentation",
                "type": []
            }
        ],
        "_get_checkers_infos@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "by_checker",
                "type": [
                    "dict",
                    "dict[, dict[typing.Text, list]]"
                ]
            },
            {
                "category": "return",
                "name": "_get_checkers_infos",
                "type": [
                    "dict[, dict[typing.Text, list]]"
                ]
            }
        ],
        "_get_global_options_documentation@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "local",
                "name": "section",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "title",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_get_global_options_documentation",
                "type": []
            }
        ],
        "global@global": [],
        "print_full_documentation@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "stream",
                "type": []
            },
            {
                "category": "arg",
                "name": "show_options",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "show_options",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "print_full_documentation",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/utils/file_state.py": {
        "__init__@FileState": [
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg_store",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "is_base_filestate",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_module_msgs_state",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_raw_module_msgs_state",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "_suppression_mapping",
                "type": [
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "node",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "_effective_max_line_number",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "is_base_filestate",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "_is_base_filestate",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_set_message_state_in_block@FileState": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "lines",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "firstchildlineno",
                "type": []
            },
            {
                "category": "local",
                "name": "state",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "_set_message_state_in_block",
                "type": [
                    "None"
                ]
            }
        ],
        "_set_message_state_on_line@FileState": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "state",
                "type": []
            },
            {
                "category": "arg",
                "name": "original_lineno",
                "type": []
            },
            {
                "category": "return",
                "name": "_set_message_state_on_line",
                "type": [
                    "None"
                ]
            }
        ],
        "_set_state_on_block_lines@FileState": [
            {
                "category": "arg",
                "name": "msgs_store",
                "type": []
            },
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "msg_state",
                "type": []
            },
            {
                "category": "return",
                "name": "_set_state_on_block_lines",
                "type": [
                    "None"
                ]
            }
        ],
        "get_effective_max_line_number@FileState": [
            {
                "category": "return",
                "name": "get_effective_max_line_number",
                "type": []
            }
        ],
        "global@global": [],
        "handle_ignored_message@FileState": [
            {
                "category": "arg",
                "name": "state_scope",
                "type": []
            },
            {
                "category": "arg",
                "name": "msgid",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "return",
                "name": "handle_ignored_message",
                "type": [
                    "None"
                ]
            }
        ],
        "iter_spurious_suppression_messages@FileState": [
            {
                "category": "arg",
                "name": "msgs_store",
                "type": []
            },
            {
                "category": "return",
                "name": "iter_spurious_suppression_messages",
                "type": [
                    "typing.Generator[tuple[typing.Union[typing.Text,tuple]]]"
                ]
            }
        ],
        "set_msg_status@FileState": [
            {
                "category": "arg",
                "name": "msg",
                "type": []
            },
            {
                "category": "arg",
                "name": "line",
                "type": []
            },
            {
                "category": "arg",
                "name": "status",
                "type": []
            },
            {
                "category": "arg",
                "name": "scope",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "scope",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "set_msg_status",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/utils/linterstats.py": {
        "__init__@LinterStats": [
            {
                "category": "arg",
                "name": "bad_names",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "by_module",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "by_msg",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "code_type_count",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "dependencies",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "duplicated_lines",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "node_count",
                "type": [
                    "None"
                ]
            },
            {
                "category": "arg",
                "name": "undocumented",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "bad_names",
                "type": [
                    "None",
                    "BadNames"
                ]
            },
            {
                "category": "local",
                "name": "by_module",
                "type": [
                    "None",
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "by_msg",
                "type": [
                    "None",
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "code_type_count",
                "type": [
                    "None",
                    "CodeTypeCount"
                ]
            },
            {
                "category": "local",
                "name": "dependencies",
                "type": [
                    "None",
                    "dict"
                ]
            },
            {
                "category": "local",
                "name": "duplicated_lines",
                "type": [
                    "None",
                    "DuplicatedLines"
                ]
            },
            {
                "category": "local",
                "name": "node_count",
                "type": [
                    "None",
                    "NodeCount"
                ]
            },
            {
                "category": "local",
                "name": "undocumented",
                "type": [
                    "None",
                    "UndocumentedNodes"
                ]
            },
            {
                "category": "local",
                "name": "convention",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "error",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "fatal",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "info",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "refactor",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "statement",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "warning",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "skipped",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "global_note",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "nb_duplicated_lines",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "percent_duplicated_lines",
                "type": [
                    "float"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "__repr__@LinterStats": [
            {
                "category": "return",
                "name": "__repr__",
                "type": [
                    "str"
                ]
            }
        ],
        "__str__@LinterStats": [
            {
                "category": "return",
                "name": "__str__",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_bad_names@LinterStats": [
            {
                "category": "arg",
                "name": "node_name",
                "type": []
            },
            {
                "category": "return",
                "name": "get_bad_names",
                "type": []
            }
        ],
        "get_code_count@LinterStats": [
            {
                "category": "arg",
                "name": "type_name",
                "type": []
            },
            {
                "category": "return",
                "name": "get_code_count",
                "type": []
            }
        ],
        "get_global_message_count@LinterStats": [
            {
                "category": "arg",
                "name": "type_name",
                "type": []
            },
            {
                "category": "return",
                "name": "get_global_message_count",
                "type": []
            }
        ],
        "get_module_message_count@LinterStats": [
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_name",
                "type": []
            },
            {
                "category": "return",
                "name": "get_module_message_count",
                "type": []
            }
        ],
        "get_node_count@LinterStats": [
            {
                "category": "arg",
                "name": "node_name",
                "type": []
            },
            {
                "category": "return",
                "name": "get_node_count",
                "type": []
            }
        ],
        "get_undocumented@LinterStats": [
            {
                "category": "arg",
                "name": "node_name",
                "type": []
            },
            {
                "category": "return",
                "name": "get_undocumented",
                "type": []
            }
        ],
        "global@global": [],
        "increase_bad_name@LinterStats": [
            {
                "category": "arg",
                "name": "node_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "increase",
                "type": []
            },
            {
                "category": "return",
                "name": "increase_bad_name",
                "type": [
                    "None"
                ]
            }
        ],
        "increase_single_message_count@LinterStats": [
            {
                "category": "arg",
                "name": "type_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "increase",
                "type": []
            },
            {
                "category": "return",
                "name": "increase_single_message_count",
                "type": [
                    "None"
                ]
            }
        ],
        "increase_single_module_message_count@LinterStats": [
            {
                "category": "arg",
                "name": "modname",
                "type": []
            },
            {
                "category": "arg",
                "name": "type_name",
                "type": []
            },
            {
                "category": "arg",
                "name": "increase",
                "type": []
            },
            {
                "category": "return",
                "name": "increase_single_module_message_count",
                "type": [
                    "None"
                ]
            }
        ],
        "init_single_module@LinterStats": [
            {
                "category": "arg",
                "name": "module_name",
                "type": []
            },
            {
                "category": "return",
                "name": "init_single_module",
                "type": [
                    "None"
                ]
            }
        ],
        "merge_stats@global": [
            {
                "category": "arg",
                "name": "stats",
                "type": []
            },
            {
                "category": "local",
                "name": "merged",
                "type": [
                    "LinterStats"
                ]
            },
            {
                "category": "return",
                "name": "merge_stats",
                "type": []
            }
        ],
        "reset_bad_names@LinterStats": [
            {
                "category": "local",
                "name": "bad_names",
                "type": [
                    "BadNames"
                ]
            },
            {
                "category": "return",
                "name": "reset_bad_names",
                "type": [
                    "None"
                ]
            }
        ],
        "reset_code_count@LinterStats": [
            {
                "category": "local",
                "name": "code_type_count",
                "type": [
                    "CodeTypeCount"
                ]
            },
            {
                "category": "return",
                "name": "reset_code_count",
                "type": [
                    "None"
                ]
            }
        ],
        "reset_duplicated_lines@LinterStats": [
            {
                "category": "local",
                "name": "duplicated_lines",
                "type": [
                    "DuplicatedLines"
                ]
            },
            {
                "category": "return",
                "name": "reset_duplicated_lines",
                "type": [
                    "None"
                ]
            }
        ],
        "reset_message_count@LinterStats": [
            {
                "category": "local",
                "name": "convention",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "error",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "fatal",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "info",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "refactor",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "warning",
                "type": [
                    "int"
                ]
            },
            {
                "category": "return",
                "name": "reset_message_count",
                "type": [
                    "None"
                ]
            }
        ],
        "reset_node_count@LinterStats": [
            {
                "category": "local",
                "name": "node_count",
                "type": [
                    "NodeCount"
                ]
            },
            {
                "category": "return",
                "name": "reset_node_count",
                "type": [
                    "None"
                ]
            }
        ],
        "reset_undocumented@LinterStats": [
            {
                "category": "local",
                "name": "undocumented",
                "type": [
                    "UndocumentedNodes"
                ]
            },
            {
                "category": "return",
                "name": "reset_undocumented",
                "type": [
                    "None"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/utils/pragma_parser.py": {
        "__init__@PragmaParserError": [
            {
                "category": "arg",
                "name": "message",
                "type": []
            },
            {
                "category": "arg",
                "name": "token",
                "type": []
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "emit_pragma_representer@global": [
            {
                "category": "arg",
                "name": "action",
                "type": []
            },
            {
                "category": "arg",
                "name": "messages",
                "type": []
            },
            {
                "category": "local",
                "name": "MESSAGE_KEYWORDS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "return",
                "name": "emit_pragma_representer",
                "type": [
                    "PragmaRepresenter"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "OPTION_RGX",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "ATOMIC_KEYWORDS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "MESSAGE_KEYWORDS",
                "type": [
                    "set[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "ALL_KEYWORDS",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "TOKEN_SPECIFICATION",
                "type": [
                    "list[tuple[typing.Text]]"
                ]
            },
            {
                "category": "local",
                "name": "token_name",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "token_rgx",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TOK_REGEX",
                "type": [
                    "str"
                ]
            }
        ],
        "parse_pragma@global": [
            {
                "category": "arg",
                "name": "pylint_pragma",
                "type": []
            },
            {
                "category": "local",
                "name": "action",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "messages",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "assignment_required",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "previous_token",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "TOK_REGEX",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "parse_pragma",
                "type": [
                    "typing.Generator"
                ]
            },
            {
                "category": "local",
                "name": "MESSAGE_KEYWORDS",
                "type": [
                    "set[typing.Text]"
                ]
            }
        ]
    },
    "scripts/../data/benchmarks/benchmark_repositories/pylint/original/pylint/utils/utils.py": {
        "__init__@IsortDriver": [
            {
                "category": "arg",
                "name": "config",
                "type": []
            },
            {
                "category": "local",
                "name": "HAS_ISORT_5",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "__init__",
                "type": [
                    "None"
                ]
            }
        ],
        "_check_csv@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_csv",
                "type": []
            }
        ],
        "_check_regexp_csv@global": [
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "return",
                "name": "_check_regexp_csv",
                "type": [
                    "typing.Generator",
                    "typing.Generator[typing.Generator]"
                ]
            },
            {
                "category": "local",
                "name": "open_braces",
                "type": [
                    "bool"
                ]
            }
        ],
        "_comment@global": [
            {
                "category": "arg",
                "name": "string",
                "type": []
            },
            {
                "category": "local",
                "name": "lines",
                "type": [
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "sep",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_comment",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "_format_option_value@global": [
            {
                "category": "arg",
                "name": "optdict",
                "type": []
            },
            {
                "category": "arg",
                "name": "value",
                "type": []
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "str",
                    "dict",
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_format_option_value",
                "type": [
                    "str"
                ]
            }
        ],
        "_ini_format@global": [
            {
                "category": "arg",
                "name": "stream",
                "type": []
            },
            {
                "category": "arg",
                "name": "options",
                "type": []
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "str"
                ]
            },
            {
                "category": "local",
                "name": "separator",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "x",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "_ini_format",
                "type": [
                    "None"
                ]
            }
        ],
        "_splitstrip@global": [
            {
                "category": "arg",
                "name": "string",
                "type": []
            },
            {
                "category": "arg",
                "name": "sep",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "sep",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "_splitstrip",
                "type": [
                    "list"
                ]
            }
        ],
        "_unquote@global": [
            {
                "category": "arg",
                "name": "string",
                "type": []
            },
            {
                "category": "return",
                "name": "_unquote",
                "type": []
            }
        ],
        "cmp@global": [
            {
                "category": "arg",
                "name": "a",
                "type": []
            },
            {
                "category": "arg",
                "name": "b",
                "type": []
            },
            {
                "category": "return",
                "name": "cmp",
                "type": [
                    "int"
                ]
            }
        ],
        "decoding_stream@global": [
            {
                "category": "arg",
                "name": "stream",
                "type": []
            },
            {
                "category": "arg",
                "name": "encoding",
                "type": []
            },
            {
                "category": "arg",
                "name": "errors",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "errors",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "decoding_stream",
                "type": []
            }
        ],
        "diff_string@global": [
            {
                "category": "arg",
                "name": "old",
                "type": []
            },
            {
                "category": "arg",
                "name": "new",
                "type": []
            },
            {
                "category": "local",
                "name": "CMPS",
                "type": [
                    "list[typing.Text]"
                ]
            },
            {
                "category": "local",
                "name": "diff_str",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "diff_string",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "format_section@global": [
            {
                "category": "arg",
                "name": "stream",
                "type": []
            },
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "arg",
                "name": "options",
                "type": []
            },
            {
                "category": "arg",
                "name": "doc",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "doc",
                "type": [
                    "None"
                ]
            },
            {
                "category": "return",
                "name": "format_section",
                "type": [
                    "None"
                ]
            }
        ],
        "get_module_and_frameid@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "local",
                "name": "frame",
                "type": [
                    "Module"
                ]
            },
            {
                "category": "local",
                "name": "module",
                "type": [
                    "typing.Text",
                    "list"
                ]
            },
            {
                "category": "local",
                "name": "obj",
                "type": [
                    "list",
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "get_module_and_frameid",
                "type": [
                    "tuple[typing.Union[typing.Text,list]]"
                ]
            }
        ],
        "get_rst_section@global": [
            {
                "category": "arg",
                "name": "section",
                "type": []
            },
            {
                "category": "arg",
                "name": "options",
                "type": []
            },
            {
                "category": "arg",
                "name": "doc",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "result",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "doc",
                "type": [
                    "None"
                ]
            },
            {
                "category": "local",
                "name": "value",
                "type": [
                    "str"
                ]
            },
            {
                "category": "return",
                "name": "get_rst_section",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "get_rst_title@global": [
            {
                "category": "arg",
                "name": "title",
                "type": []
            },
            {
                "category": "arg",
                "name": "character",
                "type": []
            },
            {
                "category": "return",
                "name": "get_rst_title",
                "type": [
                    "typing.Text"
                ]
            }
        ],
        "global@global": [
            {
                "category": "local",
                "name": "HAS_ISORT_5",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_LINE_LENGTH",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "CMPS",
                "type": [
                    "list[typing.Text]"
                ]
            }
        ],
        "normalize_text@global": [
            {
                "category": "arg",
                "name": "text",
                "type": []
            },
            {
                "category": "arg",
                "name": "line_len",
                "type": [
                    "int"
                ]
            },
            {
                "category": "arg",
                "name": "indent",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "local",
                "name": "DEFAULT_LINE_LENGTH",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "line_len",
                "type": [
                    "int"
                ]
            },
            {
                "category": "local",
                "name": "indent",
                "type": [
                    "typing.Text"
                ]
            },
            {
                "category": "return",
                "name": "normalize_text",
                "type": [
                    "str"
                ]
            }
        ],
        "place_module@IsortDriver": [
            {
                "category": "arg",
                "name": "package",
                "type": []
            },
            {
                "category": "local",
                "name": "HAS_ISORT_5",
                "type": [
                    "bool"
                ]
            },
            {
                "category": "return",
                "name": "place_module",
                "type": []
            }
        ],
        "register_plugins@global": [
            {
                "category": "arg",
                "name": "linter",
                "type": []
            },
            {
                "category": "arg",
                "name": "directory",
                "type": []
            },
            {
                "category": "local",
                "name": "imported",
                "type": [
                    "dict",
                    "dict[, int]"
                ]
            },
            {
                "category": "local",
                "name": "exc",
                "type": [
                    "Exception"
                ]
            },
            {
                "category": "return",
                "name": "register_plugins",
                "type": [
                    "None"
                ]
            }
        ],
        "tokenize_module@global": [
            {
                "category": "arg",
                "name": "node",
                "type": []
            },
            {
                "category": "return",
                "name": "tokenize_module",
                "type": [
                    "list"
                ]
            }
        ]
    }
}